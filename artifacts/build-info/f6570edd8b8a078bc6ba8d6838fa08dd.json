{"id":"f6570edd8b8a078bc6ba8d6838fa08dd","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/contract1.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract OurUpgradeableNFT1 is\n    Initializable,\n    UUPSUpgradeable,\n    OwnableUpgradeable\n{\n    string public greeting;\n\n    function initialize(string calldata _greeting) public initializer {\n        greeting = _greeting;\n        __UUPSUpgradeable_init();\n        __Ownable_init();\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyOwner\n    {}\n}"},"contracts/contract2.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.12;\r\n\r\nimport \"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\";\r\nimport \"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\r\n\r\nimport \"./contract1.sol\";\r\n\r\ncontract OurUpgradeableNFT2 is OurUpgradeableNFT1, ERC721URIStorageUpgradeable {\r\n    using CountersUpgradeable for CountersUpgradeable.Counter;\r\n\r\n    CountersUpgradeable.Counter private _tokenIdCounter;\r\n\r\n    function reInitialize() public reinitializer(2) {\r\n        __ERC721_init(\"OurUpgradeableNFT\", \"OUN\");\r\n        __ERC721URIStorage_init();\r\n    }\r\n\r\n    function greetingNew() public pure returns (string memory) {\r\n        return \"New Upgradeable World!\";\r\n    }\r\n\r\n    function safeMint(address to, string memory uri) public virtual onlyOwner {\r\n        uint256 tokenId = _tokenIdCounter.current();\r\n        _tokenIdCounter.increment();\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n}"},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n    uint256[49] private __gap;\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"../ERC721Upgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC4906} from \"@openzeppelin/contracts/interfaces/IERC4906.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorageUpgradeable is Initializable, IERC4906, ERC721Upgradeable {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage\n    struct ERC721URIStorageStorage {\n        // Optional mapping for token URIs\n        mapping(uint256 tokenId => string) _tokenURIs;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721URIStorage\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721URIStorageStorageLocation = 0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900;\n\n    function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {\n        assembly {\n            $.slot := ERC721URIStorageStorageLocation\n        }\n    }\n\n    function __ERC721URIStorage_init() internal onlyInitializing {\n    }\n\n    function __ERC721URIStorage_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = $._tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\n        $._tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2413]},"id":4,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4,"sourceUnit":2414,"src":"132:59:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"140:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"133:101:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":24,"linearizedBaseContracts":[24],"name":"IERC1967","nameLocation":"245:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"260:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":11,"name":"Upgraded","nameLocation":"339:8:1","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:1","nodeType":"VariableDeclaration","scope":11,"src":"348:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:1"},"src":"333:47:1"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"386:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":18,"name":"AdminChanged","nameLocation":"464:12:1","nodeType":"EventDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:1","nodeType":"VariableDeclaration","scope":18,"src":"477:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:1","nodeType":"VariableDeclaration","scope":18,"src":"500:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:1"},"src":"458:60:1"},{"anonymous":false,"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"524:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":23,"name":"BeaconUpgraded","nameLocation":"594:14:1","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:1","nodeType":"VariableDeclaration","scope":23,"src":"609:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:1"},"src":"588:45:1"}],"scope":25,"src":"235:400:1","usedErrors":[],"usedEvents":[11,18,23]}],"src":"107:529:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2413],"IERC4906":[48],"IERC721":[620]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":28,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":4,"src":"133:38:2","symbolAliases":[{"foreign":{"id":27,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":30,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":53,"src":"172:38:2","symbolAliases":[{"foreign":{"id":29,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":32,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"279:7:2"},"id":33,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":34,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":620,"src":"288:7:2"},"id":35,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,620,2413],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":40,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":40,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":47,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":47,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":45,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":47,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":49,"src":"257:583:2","usedErrors":[],"usedEvents":[40,47,519,528,537]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[620]},"id":53,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":52,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":53,"sourceUnit":621,"src":"132:52:3","symbolAliases":[{"foreign":{"id":51,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[62]},"id":63,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":54,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"139:204:4","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":62,"linearizedBaseContracts":[62],"name":"IERC1822Proxiable","nameLocation":"354:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"378:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":61,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:4","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"843:2:4"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61,"src":"869:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:4"},"scope":62,"src":"821:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":63,"src":"344:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:768:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[199],"IERC20Errors":[104],"IERC721Errors":[152]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":64,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":104,"linearizedBaseContracts":[104],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":74,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":74,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":74,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":74,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":79,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":79,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":84,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":84,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":93,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":93,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":93,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":93,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":98,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":98,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":103,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":103,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":200,"src":"280:1764:5","usedErrors":[74,79,84,93,98,103],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":152,"linearizedBaseContracts":[152],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":110,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":110,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":115,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":115,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":124,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":124,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":124,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":124,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":129,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":129,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":134,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":134,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":141,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":141,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":141,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":146,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":146,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":151,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":151,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":200,"src":"2190:2092:5","usedErrors":[110,115,124,129,134,141,146,151],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":199,"linearizedBaseContracts":[199],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":164,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":164,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":164,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":164,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":164,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":169,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":169,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":174,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":174,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":181,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":181,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":181,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":186,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":186,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":191,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":191,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":198,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":198,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":198,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":200,"src":"4430:2107:5","usedErrors":[164,169,174,181,186,191,198],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1003],"ERC1967Utils":[493],"IBeacon":[503],"IERC1967":[24],"StorageSlot":[1201]},"id":494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":504,"src":"140:46:6","symbolAliases":[{"foreign":{"id":202,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":25,"src":"187:55:6","symbolAliases":[{"foreign":{"id":204,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"195:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":1004,"src":"243:48:6","symbolAliases":[{"foreign":{"id":206,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"251:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":1202,"src":"292:56:6","symbolAliases":[{"foreign":{"id":208,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"300:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"350:145:6","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":493,"linearizedBaseContracts":[493],"name":"ERC1967Utils","nameLocation":"504:12:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"523:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":214,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:6","nodeType":"VariableDeclaration","scope":493,"src":"763:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"884:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":219,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:6","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:6","nodeType":"VariableDeclaration","scope":219,"src":"993:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:6"},"src":"958:59:6"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"1023:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":224,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:6","nodeType":"ErrorDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"admin","nameLocation":"1122:5:6","nodeType":"VariableDeclaration","scope":224,"src":"1114:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:6"},"src":"1088:41:6"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"1135:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":229,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:6","nodeType":"ErrorDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:6","nodeType":"VariableDeclaration","scope":229,"src":"1228:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:6"},"src":"1201:43:6"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"1250:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":232,"name":"ERC1967NonPayable","nameLocation":"1343:17:6","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"1360:2:6"},"src":"1337:26:6"},{"body":{"id":244,"nodeType":"Block","src":"1502:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":240,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"1546:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":238,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1519:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"1519:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1519:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":237,"id":243,"nodeType":"Return","src":"1512:60:6"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"1369:67:6","text":" @dev Returns the current implementation address."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:6","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"1467:2:6"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"1493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:6"},"scope":493,"src":"1441:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":271,"nodeType":"Block","src":"1734:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":251,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1748:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:6","memberName":"code","nodeType":"MemberAccess","src":"1748:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:6","memberName":"length","nodeType":"MemberAccess","src":"1748:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"1744:119:6","trueBody":{"id":260,"nodeType":"Block","src":"1784:79:6","statements":[{"errorCall":{"arguments":[{"id":257,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1834:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1805:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":259,"nodeType":"RevertStatement","src":"1798:54:6"}]}},{"expression":{"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":265,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"1899:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":262,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1872:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"1872:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1872:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":268,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1928:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":270,"nodeType":"ExpressionStatement","src":"1872:73:6"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"1585:81:6","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":272,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:6","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:6","nodeType":"VariableDeclaration","scope":272,"src":"1699:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:6"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"1734:0:6"},"scope":493,"src":"1671:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":307,"nodeType":"Block","src":"2345:263:6","statements":[{"expression":{"arguments":[{"id":281,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2374:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2355:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"ExpressionStatement","src":"2355:37:6"},{"eventCall":{"arguments":[{"id":287,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2425:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":284,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2407:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$24_$","typeString":"type(contract IERC1967)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:6","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":11,"src":"2407:17:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"EmitStatement","src":"2402:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":290,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2458:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:6","memberName":"length","nodeType":"MemberAccess","src":"2458:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":305,"nodeType":"Block","src":"2559:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2573:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"2573:18:6"}]},"id":306,"nodeType":"IfStatement","src":"2454:148:6","trueBody":{"id":301,"nodeType":"Block","src":"2475:78:6","statements":[{"expression":{"arguments":[{"id":297,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2518:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2537:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":294,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2489:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1003_$","typeString":"type(library Address)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":920,"src":"2489:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":300,"nodeType":"ExpressionStatement","src":"2489:53:6"}]}}]},"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"1958:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":308,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:6","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:6","nodeType":"VariableDeclaration","scope":308,"src":"2290:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"data","nameLocation":"2330:4:6","nodeType":"VariableDeclaration","scope":308,"src":"2317:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":276,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:6"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"2345:0:6"},"scope":493,"src":"2264:344:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"2614:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":312,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:6","nodeType":"VariableDeclaration","scope":493,"src":"2829:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"3339:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":320,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3383:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":318,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3356:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"3356:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"3356:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":317,"id":323,"nodeType":"Return","src":"3349:51:6"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"2941:341:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:6","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"3304:2:6"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"3330:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:6"},"scope":493,"src":"3287:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"3535:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":331,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3549:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:6","typeDescriptions":{}}},"id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"IfStatement","src":"3545:91:6","trueBody":{"id":344,"nodeType":"Block","src":"3573:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:6","typeDescriptions":{}}},"id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":337,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3594:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":343,"nodeType":"RevertStatement","src":"3587:38:6"}]}},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":349,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3672:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":346,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3645:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"3645:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"3645:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":352,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3692:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":354,"nodeType":"ExpressionStatement","src":"3645:55:6"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"3413:72:6","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:6","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:6","nodeType":"VariableDeclaration","scope":356,"src":"3509:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:6"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"3535:0:6"},"scope":493,"src":"3490:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":374,"nodeType":"Block","src":"3875:94:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":365,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3912:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":367,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3924:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":362,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3890:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$24_$","typeString":"type(contract IERC1967)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:6","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":18,"src":"3890:21:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"EmitStatement","src":"3885:48:6"},{"expression":{"arguments":[{"id":371,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3953:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":370,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3943:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"3943:19:6"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"3713:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:6","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:6","nodeType":"VariableDeclaration","scope":375,"src":"3848:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:6"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"3875:0:6"},"scope":493,"src":"3827:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"3975:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":379,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:6","nodeType":"VariableDeclaration","scope":493,"src":"4246:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"4468:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":387,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4512:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":385,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4485:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"4485:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"4485:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":384,"id":390,"nodeType":"Return","src":"4478:52:6"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"4359:51:6","text":" @dev Returns the current beacon."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:6","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"4433:2:6"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"4459:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:6"},"scope":493,"src":"4415:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"4667:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":398,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4681:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:6","memberName":"code","nodeType":"MemberAccess","src":"4681:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:6","memberName":"length","nodeType":"MemberAccess","src":"4681:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":408,"nodeType":"IfStatement","src":"4677:95:6","trueBody":{"id":407,"nodeType":"Block","src":"4709:63:6","statements":[{"errorCall":{"arguments":[{"id":404,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4751:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":403,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4730:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":406,"nodeType":"RevertStatement","src":"4723:38:6"}]}},{"expression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":412,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4809:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":409,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4782:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1201_$","typeString":"type(library StorageSlot)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1112,"src":"4782:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1083_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"4782:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":415,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4830:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":417,"nodeType":"ExpressionStatement","src":"4782:57:6"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:6","nodeType":"VariableDeclaration","scope":437,"src":"4850:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":425,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":421,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4889:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":420,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$503_$","typeString":"type(contract IBeacon)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$503","typeString":"contract IBeacon"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":502,"src":"4881:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":426,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4930:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:6","memberName":"code","nodeType":"MemberAccess","src":"4930:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:6","memberName":"length","nodeType":"MemberAccess","src":"4930:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":436,"nodeType":"IfStatement","src":"4926:125:6","trueBody":{"id":435,"nodeType":"Block","src":"4969:82:6","statements":[{"errorCall":{"arguments":[{"id":432,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5019:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4990:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":434,"nodeType":"RevertStatement","src":"4983:57:6"}]}}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"4543:72:6","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:6","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:6","nodeType":"VariableDeclaration","scope":438,"src":"4640:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:6"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"4667:0:6"},"scope":493,"src":"4620:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":477,"nodeType":"Block","src":"5661:263:6","statements":[{"expression":{"arguments":[{"id":447,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"5682:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":446,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5671:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"ExpressionStatement","src":"5671:21:6"},{"eventCall":{"arguments":[{"id":453,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"5731:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":450,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"5707:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$24_$","typeString":"type(contract IERC1967)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:6","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":23,"src":"5707:23:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"5702:39:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5756:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:6","memberName":"length","nodeType":"MemberAccess","src":"5756:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":475,"nodeType":"Block","src":"5875:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":472,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5889:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"5889:18:6"}]},"id":476,"nodeType":"IfStatement","src":"5752:166:6","trueBody":{"id":471,"nodeType":"Block","src":"5773:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":464,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"5824:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":463,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5816:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$503_$","typeString":"type(contract IBeacon)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$503","typeString":"contract IBeacon"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":502,"src":"5816:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5853:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":460,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5787:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1003_$","typeString":"type(library Address)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":920,"src":"5787:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":470,"nodeType":"ExpressionStatement","src":"5787:71:6"}]}}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"5063:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:6","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:6","nodeType":"VariableDeclaration","scope":478,"src":"5614:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"data","nameLocation":"5646:4:6","nodeType":"VariableDeclaration","scope":478,"src":"5633:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":442,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:6"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"5661:0:6"},"scope":493,"src":"5582:342:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"6149:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:6","memberName":"value","nodeType":"MemberAccess","src":"6163:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":490,"nodeType":"IfStatement","src":"6159:70:6","trueBody":{"id":489,"nodeType":"Block","src":"6178:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"6199:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":488,"nodeType":"RevertStatement","src":"6192:26:6"}]}}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"5930:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"6138:2:6"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"6149:0:6"},"scope":493,"src":"6113:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":494,"src":"496:5741:6","usedErrors":[219,224,229,232],"usedEvents":[]}],"src":"114:6124:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[503]},"id":504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":495,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":503,"linearizedBaseContracts":[503],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":502,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":503,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":504,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2413],"IERC721":[620]},"id":621,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":505,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":621,"sourceUnit":2414,"src":"134:62:8","symbolAliases":[{"foreign":{"id":506,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":509,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"288:7:8"},"id":510,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":620,"linearizedBaseContracts":[620,2413],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":519,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":519,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":519,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":517,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":519,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":528,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":528,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":528,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":526,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":528,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":537,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":537,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":537,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":537,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":545,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":545,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":620,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":553,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":553,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":620,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":565,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":565,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":565,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":565,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":565,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":620,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":575,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":575,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":575,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":575,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":620,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":585,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":585,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":585,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":585,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":620,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":593,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":593,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":593,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":620,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":601,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":601,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":601,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":597,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":620,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":609,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":609,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":609,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":620,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":619,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":619,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":619,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":620,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":621,"src":"267:4661:8","usedErrors":[],"usedEvents":[519,528,537]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[638]},"id":639,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":622,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":638,"linearizedBaseContracts":[638],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":637,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":637,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":637,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":637,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":631,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":634,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":638,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":639,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[620],"IERC721Metadata":[666]},"id":667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":640,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":667,"sourceUnit":621,"src":"153:39:10","symbolAliases":[{"foreign":{"id":641,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":644,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":620,"src":"357:7:10"},"id":645,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":666,"linearizedBaseContracts":[666,620,2413],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":648,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":666,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":657,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":666,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":665,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":665,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":662,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":666,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":667,"src":"328:463:10","usedErrors":[],"usedEvents":[519,528,537]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[743],"IERC721Errors":[152],"IERC721Receiver":[638]},"id":744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":668,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":639,"src":"144:55:11","symbolAliases":[{"foreign":{"id":669,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":744,"sourceUnit":200,"src":"200:69:11","symbolAliases":[{"foreign":{"id":671,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":743,"linearizedBaseContracts":[743],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":741,"nodeType":"Block","src":"1151:758:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":687,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1165:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:11","memberName":"code","nodeType":"MemberAccess","src":"1165:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:11","memberName":"length","nodeType":"MemberAccess","src":"1165:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":740,"nodeType":"IfStatement","src":"1161:742:11","trueBody":{"id":739,"nodeType":"Block","src":"1185:718:11","statements":[{"clauses":[{"block":{"id":717,"nodeType":"Block","src":"1295:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"1317:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":705,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1327:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$638_$","typeString":"type(contract IERC721Receiver)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":637,"src":"1327:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"1313:182:11","trueBody":{"id":715,"nodeType":"Block","src":"1370:125:11","statements":[{"errorCall":{"arguments":[{"id":712,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1473:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":709,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1437:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$152_$","typeString":"type(contract IERC721Errors)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":134,"src":"1437:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"1430:46:11"}]}}]},"errorName":"","id":718,"nodeType":"TryCatchClause","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"retval","nameLocation":"1287:6:11","nodeType":"VariableDeclaration","scope":718,"src":"1280:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:11"},"src":"1271:238:11"},{"block":{"id":736,"nodeType":"Block","src":"1538:355:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":722,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"1560:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:11","memberName":"length","nodeType":"MemberAccess","src":"1560:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":734,"nodeType":"Block","src":"1728:151:11","statements":[{"AST":{"nativeSrc":"1775:86:11","nodeType":"YulBlock","src":"1775:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:11","nodeType":"YulLiteral","src":"1812:2:11","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:11","nodeType":"YulIdentifier","src":"1816:6:11"}],"functionName":{"name":"add","nativeSrc":"1808:3:11","nodeType":"YulIdentifier","src":"1808:3:11"},"nativeSrc":"1808:15:11","nodeType":"YulFunctionCall","src":"1808:15:11"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:11","nodeType":"YulIdentifier","src":"1831:6:11"}],"functionName":{"name":"mload","nativeSrc":"1825:5:11","nodeType":"YulIdentifier","src":"1825:5:11"},"nativeSrc":"1825:13:11","nodeType":"YulFunctionCall","src":"1825:13:11"}],"functionName":{"name":"revert","nativeSrc":"1801:6:11","nodeType":"YulIdentifier","src":"1801:6:11"},"nativeSrc":"1801:38:11","nodeType":"YulFunctionCall","src":"1801:38:11"},"nativeSrc":"1801:38:11","nodeType":"YulExpressionStatement","src":"1801:38:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":720,"isOffset":false,"isSlot":false,"src":"1816:6:11","valueSize":1},{"declaration":720,"isOffset":false,"isSlot":false,"src":"1831:6:11","valueSize":1}],"flags":["memory-safe"],"id":733,"nodeType":"InlineAssembly","src":"1750:111:11"}]},"id":735,"nodeType":"IfStatement","src":"1556:323:11","trueBody":{"id":732,"nodeType":"Block","src":"1580:142:11","statements":[{"errorCall":{"arguments":[{"id":729,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1700:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":726,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1664:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$152_$","typeString":"type(contract IERC721Errors)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":134,"src":"1664:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":731,"nodeType":"RevertStatement","src":"1657:46:11"}]}}]},"errorName":"","id":737,"nodeType":"TryCatchClause","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"reason","nameLocation":"1530:6:11","nodeType":"VariableDeclaration","scope":737,"src":"1517:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":719,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:11"},"src":"1510:383:11"}],"externalCall":{"arguments":[{"id":696,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1240:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"1250:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1265:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1219:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":692,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1203:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$638_$","typeString":"type(contract IERC721Receiver)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$638","typeString":"contract IERC721Receiver"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":637,"src":"1203:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":738,"nodeType":"TryStatement","src":"1199:694:11"}]}}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"457:523:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:11","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"operator","nameLocation":"1033:8:11","nodeType":"VariableDeclaration","scope":742,"src":"1025:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"from","nameLocation":"1059:4:11","nodeType":"VariableDeclaration","scope":742,"src":"1051:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"to","nameLocation":"1081:2:11","nodeType":"VariableDeclaration","scope":742,"src":"1073:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:11","nodeType":"VariableDeclaration","scope":742,"src":"1093:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"data","nameLocation":"1131:4:11","nodeType":"VariableDeclaration","scope":742,"src":"1118:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:11"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"1151:0:11"},"scope":743,"src":"985:924:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":744,"src":"431:1480:11","usedErrors":[],"usedEvents":[]}],"src":"118:1794:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1003],"Errors":[1025]},"id":1004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1004,"sourceUnit":1026,"src":"127:36:12","symbolAliases":[{"foreign":{"id":746,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"135:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"165:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1003,"linearizedBaseContracts":[1003],"name":"Address","nameLocation":"241:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"255:75:12","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":753,"name":"AddressEmptyCode","nameLocation":"341:16:12","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"target","nameLocation":"366:6:12","nodeType":"VariableDeclaration","scope":753,"src":"358:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:12"},"src":"335:39:12"},{"body":{"id":800,"nodeType":"Block","src":"1361:294:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":763,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}],"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:12","typeDescriptions":{}}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":766,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1399:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"1371:125:12","trueBody":{"id":779,"nodeType":"Block","src":"1407:89:12","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":773,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:12","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1478:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":768,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1428:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1025_$","typeString":"type(library Errors)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:12","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"1428:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":778,"nodeType":"RevertStatement","src":"1421:64:12"}]}},{"assignments":[782,784],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"success","nameLocation":"1512:7:12","nodeType":"VariableDeclaration","scope":800,"src":"1507:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":781,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:12","nodeType":"VariableDeclaration","scope":800,"src":"1521:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"hexValue":"","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":785,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"1548:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:12","memberName":"call","nodeType":"MemberAccess","src":"1548:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1570:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:12"},{"condition":{"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:12","subExpression":{"id":792,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1596:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"nodeType":"IfStatement","src":"1591:58:12","trueBody":{"id":798,"nodeType":"Block","src":"1605:44:12","statements":[{"expression":{"arguments":[{"id":795,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1627:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":794,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"1619:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"1619:19:12"}]}}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"380:905:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:12","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:12","nodeType":"VariableDeclaration","scope":801,"src":"1309:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"amount","nameLocation":"1344:6:12","nodeType":"VariableDeclaration","scope":801,"src":"1336:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:12"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"1361:0:12"},"scope":1003,"src":"1290:365:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"2589:62:12","statements":[{"expression":{"arguments":[{"id":812,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"2628:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2636:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2606:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"2599:45:12"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"1661:834:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:12","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"target","nameLocation":"2530:6:12","nodeType":"VariableDeclaration","scope":818,"src":"2522:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"data","nameLocation":"2551:4:12","nodeType":"VariableDeclaration","scope":818,"src":"2538:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:12"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"2575:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:12"},"scope":1003,"src":"2500:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":867,"nodeType":"Block","src":"3088:294:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:12","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":849,"nodeType":"IfStatement","src":"3098:123:12","trueBody":{"id":848,"nodeType":"Block","src":"3133:88:12","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":842,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1003","typeString":"library Address"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:12","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3204:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":837,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3154:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1025_$","typeString":"type(library Errors)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:12","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"3154:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":847,"nodeType":"RevertStatement","src":"3147:63:12"}]}},{"assignments":[851,853],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"success","nameLocation":"3236:7:12","nodeType":"VariableDeclaration","scope":867,"src":"3231:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":850,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:12","nodeType":"VariableDeclaration","scope":867,"src":"3245:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":860,"initialValue":{"arguments":[{"id":858,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"3298:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":854,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"3272:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:12","memberName":"call","nodeType":"MemberAccess","src":"3272:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3291:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:12"},{"expression":{"arguments":[{"id":862,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"3347:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":863,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"3355:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":864,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"3364:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":861,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3320:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":829,"id":866,"nodeType":"Return","src":"3313:62:12"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"2657:313:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:12","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"target","nameLocation":"3014:6:12","nodeType":"VariableDeclaration","scope":868,"src":"3006:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"data","nameLocation":"3035:4:12","nodeType":"VariableDeclaration","scope":868,"src":"3022:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":822,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"value","nameLocation":"3049:5:12","nodeType":"VariableDeclaration","scope":868,"src":"3041:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:12"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"3074:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:12"},"scope":1003,"src":"2975:407:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"3621:154:12","statements":[{"assignments":[879,881],"declarations":[{"constant":false,"id":879,"mutability":"mutable","name":"success","nameLocation":"3637:7:12","nodeType":"VariableDeclaration","scope":893,"src":"3632:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:12","nodeType":"VariableDeclaration","scope":893,"src":"3646:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":884,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3691:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":882,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"3673:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:12"},{"expression":{"arguments":[{"id":888,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"3740:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"3748:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":890,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3757:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3713:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":877,"id":892,"nodeType":"Return","src":"3706:62:12"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"3388:128:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:12","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"target","nameLocation":"3557:6:12","nodeType":"VariableDeclaration","scope":894,"src":"3549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"data","nameLocation":"3578:4:12","nodeType":"VariableDeclaration","scope":894,"src":"3565:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:12"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"3607:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:12"},"scope":1003,"src":"3521:254:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"4013:156:12","statements":[{"assignments":[905,907],"declarations":[{"constant":false,"id":905,"mutability":"mutable","name":"success","nameLocation":"4029:7:12","nodeType":"VariableDeclaration","scope":919,"src":"4024:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":904,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:12","nodeType":"VariableDeclaration","scope":919,"src":"4038:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":906,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":912,"initialValue":{"arguments":[{"id":910,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4085:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":908,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4065:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:12"},{"expression":{"arguments":[{"id":914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4134:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4142:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":916,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"4151:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":913,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4107:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":903,"id":918,"nodeType":"Return","src":"4100:62:12"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"3781:130:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:12","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"target","nameLocation":"3954:6:12","nodeType":"VariableDeclaration","scope":920,"src":"3946:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"data","nameLocation":"3975:4:12","nodeType":"VariableDeclaration","scope":920,"src":"3962:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:12"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"3999:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:12"},"scope":1003,"src":"3916:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"4595:424:12","statements":[{"condition":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:12","subExpression":{"id":932,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4610:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":957,"nodeType":"Block","src":"4669:344:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":939,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4857:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:12","memberName":"length","nodeType":"MemberAccess","src":"4857:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":943,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4883:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:12","memberName":"code","nodeType":"MemberAccess","src":"4883:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:12","memberName":"length","nodeType":"MemberAccess","src":"4883:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"4853:119:12","trueBody":{"id":953,"nodeType":"Block","src":"4908:64:12","statements":[{"errorCall":{"arguments":[{"id":950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4950:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4933:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":952,"nodeType":"RevertStatement","src":"4926:31:12"}]}},{"expression":{"id":955,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4992:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":931,"id":956,"nodeType":"Return","src":"4985:17:12"}]},"id":958,"nodeType":"IfStatement","src":"4605:408:12","trueBody":{"id":938,"nodeType":"Block","src":"4619:44:12","statements":[{"expression":{"arguments":[{"id":935,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4641:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":934,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"4633:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"4633:19:12"}]}}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"4175:257:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:12","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"target","nameLocation":"4490:6:12","nodeType":"VariableDeclaration","scope":960,"src":"4482:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"success","nameLocation":"4511:7:12","nodeType":"VariableDeclaration","scope":960,"src":"4506:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":924,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:12","nodeType":"VariableDeclaration","scope":960,"src":"4528:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":926,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:12"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"4581:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:12"},"scope":1003,"src":"4437:582:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"5323:122:12","statements":[{"condition":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:12","subExpression":{"id":970,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5338:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":979,"nodeType":"Block","src":"5397:42:12","statements":[{"expression":{"id":977,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"5418:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":969,"id":978,"nodeType":"Return","src":"5411:17:12"}]},"id":980,"nodeType":"IfStatement","src":"5333:106:12","trueBody":{"id":976,"nodeType":"Block","src":"5347:44:12","statements":[{"expression":{"arguments":[{"id":973,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"5369:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":972,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5361:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"ExpressionStatement","src":"5361:19:12"}]}}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"5025:191:12","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:12","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"success","nameLocation":"5252:7:12","nodeType":"VariableDeclaration","scope":982,"src":"5247:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":962,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:12","nodeType":"VariableDeclaration","scope":982,"src":"5261:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":964,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:12"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"5309:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:12"},"scope":1003,"src":"5221:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"5614:432:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":988,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5690:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:12","memberName":"length","nodeType":"MemberAccess","src":"5690:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":999,"nodeType":"Block","src":"5989:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":994,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"6010:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1025_$","typeString":"type(library Errors)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:12","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1016,"src":"6010:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":998,"nodeType":"RevertStatement","src":"6003:26:12"}]},"id":1000,"nodeType":"IfStatement","src":"5686:354:12","trueBody":{"id":993,"nodeType":"Block","src":"5713:270:12","statements":[{"AST":{"nativeSrc":"5840:133:12","nodeType":"YulBlock","src":"5840:133:12","statements":[{"nativeSrc":"5858:40:12","nodeType":"YulVariableDeclaration","src":"5858:40:12","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:12","nodeType":"YulIdentifier","src":"5887:10:12"}],"functionName":{"name":"mload","nativeSrc":"5881:5:12","nodeType":"YulIdentifier","src":"5881:5:12"},"nativeSrc":"5881:17:12","nodeType":"YulFunctionCall","src":"5881:17:12"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:12","nodeType":"YulTypedName","src":"5862:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:12","nodeType":"YulLiteral","src":"5926:2:12","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:12","nodeType":"YulIdentifier","src":"5930:10:12"}],"functionName":{"name":"add","nativeSrc":"5922:3:12","nodeType":"YulIdentifier","src":"5922:3:12"},"nativeSrc":"5922:19:12","nodeType":"YulFunctionCall","src":"5922:19:12"},{"name":"returndata_size","nativeSrc":"5943:15:12","nodeType":"YulIdentifier","src":"5943:15:12"}],"functionName":{"name":"revert","nativeSrc":"5915:6:12","nodeType":"YulIdentifier","src":"5915:6:12"},"nativeSrc":"5915:44:12","nodeType":"YulFunctionCall","src":"5915:44:12"},"nativeSrc":"5915:44:12","nodeType":"YulExpressionStatement","src":"5915:44:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":985,"isOffset":false,"isSlot":false,"src":"5887:10:12","valueSize":1},{"declaration":985,"isOffset":false,"isSlot":false,"src":"5930:10:12","valueSize":1}],"flags":["memory-safe"],"id":992,"nodeType":"InlineAssembly","src":"5815:158:12"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"5451:103:12","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:12","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:12","nodeType":"VariableDeclaration","scope":1002,"src":"5576:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:12"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"5614:0:12"},"scope":1003,"src":"5559:487:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1004,"src":"233:5815:12","usedErrors":[753],"usedEvents":[]}],"src":"101:5948:12"},"id":12},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1025]},"id":1026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1005,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"126:284:13","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1025,"linearizedBaseContracts":[1025],"name":"Errors","nameLocation":"419:6:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"432:94:13","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1013,"name":"InsufficientBalance","nameLocation":"537:19:13","nodeType":"ErrorDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"balance","nameLocation":"565:7:13","nodeType":"VariableDeclaration","scope":1013,"src":"557:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"needed","nameLocation":"582:6:13","nodeType":"VariableDeclaration","scope":1013,"src":"574:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:13"},"src":"531:59:13"},{"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"596:89:13","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1016,"name":"FailedCall","nameLocation":"696:10:13","nodeType":"ErrorDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"706:2:13"},"src":"690:19:13"},{"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"715:46:13","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1019,"name":"FailedDeployment","nameLocation":"772:16:13","nodeType":"ErrorDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"788:2:13"},"src":"766:25:13"},{"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"797:58:13","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1024,"name":"MissingPrecompile","nameLocation":"866:17:13","nodeType":"ErrorDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"884:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:13"},"src":"860:33:13"}],"scope":1026,"src":"411:484:13","usedErrors":[1013,1016,1019,1024],"usedEvents":[]}],"src":"100:796:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1077]},"id":1078,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1027,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1077,"linearizedBaseContracts":[1077],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1032,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1077,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1036,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1077,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1040,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1077,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1044,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1077,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1048,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1077,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1052,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1077,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1056,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1077,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1060,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1077,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1064,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1077,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1068,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1077,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nativeSrc":"1854:110:14","nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:14","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:14","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:14","nodeType":"YulIdentifier","src":"1868:6:14"},"nativeSrc":"1868:24:14","nodeType":"YulFunctionCall","src":"1868:24:14"},"nativeSrc":"1868:24:14","nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:14","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:14","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:14","nodeType":"YulIdentifier","src":"1905:6:14"},"nativeSrc":"1905:18:14","nodeType":"YulFunctionCall","src":"1905:18:14"},"nativeSrc":"1905:18:14","nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:14","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:14","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:14","nodeType":"YulIdentifier","src":"1936:6:14"},"nativeSrc":"1936:18:14","nodeType":"YulFunctionCall","src":"1936:18:14"},"nativeSrc":"1936:18:14","nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1071,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1074,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1076,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1077,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1078,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1079,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1083,"members":[{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":1083,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":1201,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1086,"members":[{"constant":false,"id":1085,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":1086,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":1201,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1089,"members":[{"constant":false,"id":1088,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":1089,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":1201,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1092,"members":[{"constant":false,"id":1091,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":1092,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":1201,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1095,"members":[{"constant":false,"id":1094,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":1095,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1093,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":1201,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1098,"members":[{"constant":false,"id":1097,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":1098,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1096,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":1201,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1101,"members":[{"constant":false,"id":1100,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":1101,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1099,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":1201,"src":"1756:45:15","visibility":"public"},{"body":{"id":1111,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nativeSrc":"2018:38:15","nodeType":"YulBlock","src":"2018:38:15","statements":[{"nativeSrc":"2032:14:15","nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nativeSrc":"2042:4:15","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:15","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1108,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":1104,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":1110,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":1112,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":1112,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1107,"nodeType":"UserDefinedTypeName","pathNode":{"id":1106,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1083,"src":"1960:11:15"},"referencedDeclaration":1083,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1083_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":1201,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nativeSrc":"2278:38:15","nodeType":"YulBlock","src":"2278:38:15","statements":[{"nativeSrc":"2292:14:15","nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nativeSrc":"2302:4:15","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:15","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1119,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":1115,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":1121,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":1123,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":1123,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1086_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1118,"nodeType":"UserDefinedTypeName","pathNode":{"id":1117,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"2220:11:15"},"referencedDeclaration":1086,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1086_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":1201,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1133,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nativeSrc":"2538:38:15","nodeType":"YulBlock","src":"2538:38:15","statements":[{"nativeSrc":"2552:14:15","nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nativeSrc":"2562:4:15","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:15","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1130,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":1126,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":1132,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1134,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":1134,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":1134,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1089_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1089,"src":"2480:11:15"},"referencedDeclaration":1089,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1089_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":1201,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1144,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nativeSrc":"2798:38:15","nodeType":"YulBlock","src":"2798:38:15","statements":[{"nativeSrc":"2812:14:15","nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nativeSrc":"2822:4:15","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:15","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1141,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":1137,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":1143,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":1145,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":1145,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1092_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1140,"nodeType":"UserDefinedTypeName","pathNode":{"id":1139,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1092,"src":"2740:11:15"},"referencedDeclaration":1092,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1092_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":1201,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nativeSrc":"3055:38:15","nodeType":"YulBlock","src":"3055:38:15","statements":[{"nativeSrc":"3069:14:15","nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nativeSrc":"3079:4:15","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:15","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1152,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":1154,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":1156,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":1156,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1095_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1151,"nodeType":"UserDefinedTypeName","pathNode":{"id":1150,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"2998:10:15"},"referencedDeclaration":1095,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1095_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":1201,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nativeSrc":"3312:38:15","nodeType":"YulBlock","src":"3312:38:15","statements":[{"nativeSrc":"3326:14:15","nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nativeSrc":"3336:4:15","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:15","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1163,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":1159,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":1165,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":1167,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":1167,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1098_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1162,"nodeType":"UserDefinedTypeName","pathNode":{"id":1161,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1098,"src":"3255:10:15"},"referencedDeclaration":1098,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1098_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":1201,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nativeSrc":"3593:44:15","nodeType":"YulBlock","src":"3593:44:15","statements":[{"nativeSrc":"3607:20:15","nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nativeSrc":"3617:10:15","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:15","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1174,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":1170,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1176,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":1178,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1169,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":1178,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1098_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1173,"nodeType":"UserDefinedTypeName","pathNode":{"id":1172,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1098,"src":"3536:10:15"},"referencedDeclaration":1098,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1098_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":1201,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nativeSrc":"3853:38:15","nodeType":"YulBlock","src":"3853:38:15","statements":[{"nativeSrc":"3867:14:15","nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nativeSrc":"3877:4:15","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:15","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1185,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":1181,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":1187,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":1189,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":1189,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1101_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1184,"nodeType":"UserDefinedTypeName","pathNode":{"id":1183,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1101,"src":"3797:9:15"},"referencedDeclaration":1101,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1101_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":1201,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nativeSrc":"4129:44:15","nodeType":"YulBlock","src":"4129:44:15","statements":[{"nativeSrc":"4143:20:15","nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nativeSrc":"4153:10:15","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:15","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1196,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":1192,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":1200,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":1200,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1101_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1195,"nodeType":"UserDefinedTypeName","pathNode":{"id":1194,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1101,"src":"4073:9:15"},"referencedDeclaration":1101,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1101_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":1201,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1202,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4019],"SafeCast":[5784],"SignedMath":[5928],"Strings":[2401]},"id":2402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":4020,"src":"127:37:16","symbolAliases":[{"foreign":{"id":1204,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":5785,"src":"165:45:16","symbolAliases":[{"foreign":{"id":1206,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2402,"sourceUnit":5929,"src":"211:49:16","symbolAliases":[{"foreign":{"id":1208,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2401,"linearizedBaseContracts":[2401],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1212,"libraryName":{"id":1211,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":5784,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":1215,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":2401,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1213,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1218,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":2401,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1216,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"457:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1225,"name":"StringsInsufficientHexLength","nameLocation":"549:28:16","nodeType":"ErrorDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"value","nameLocation":"586:5:16","nodeType":"VariableDeclaration","scope":1225,"src":"578:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"length","nameLocation":"601:6:16","nodeType":"VariableDeclaration","scope":1225,"src":"593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:16"},"src":"543:66:16"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"615:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1228,"name":"StringsInvalidChar","nameLocation":"734:18:16","nodeType":"ErrorDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[],"src":"752:2:16"},"src":"728:27:16"},{"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"761:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1231,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:16","nodeType":"ErrorDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"883:2:16"},"src":"850:36:16"},{"body":{"id":1278,"nodeType":"Block","src":"1058:561:16","statements":[{"id":1277,"nodeType":"UncheckedBlock","src":"1068:545:16","statements":[{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"length","nameLocation":"1100:6:16","nodeType":"VariableDeclaration","scope":1277,"src":"1092:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1247,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1120:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1241,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1109:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4019_$","typeString":"type(library Math)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3791,"src":"1109:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:16"},{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:16","nodeType":"VariableDeclaration","scope":1277,"src":"1144:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1254,"initialValue":{"arguments":[{"id":1252,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1250,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:16"},{"assignments":[1256],"declarations":[{"constant":false,"id":1256,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:16","nodeType":"VariableDeclaration","scope":1277,"src":"1199:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1257,"nodeType":"VariableDeclarationStatement","src":"1199:11:16"},{"AST":{"nativeSrc":"1249:67:16","nodeType":"YulBlock","src":"1249:67:16","statements":[{"nativeSrc":"1267:35:16","nodeType":"YulAssignment","src":"1267:35:16","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:16","nodeType":"YulIdentifier","src":"1278:6:16"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:16","nodeType":"YulLiteral","src":"1290:2:16","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:16","nodeType":"YulIdentifier","src":"1294:6:16"}],"functionName":{"name":"add","nativeSrc":"1286:3:16","nodeType":"YulIdentifier","src":"1286:3:16"},"nativeSrc":"1286:15:16","nodeType":"YulFunctionCall","src":"1286:15:16"}],"functionName":{"name":"add","nativeSrc":"1274:3:16","nodeType":"YulIdentifier","src":"1274:3:16"},"nativeSrc":"1274:28:16","nodeType":"YulFunctionCall","src":"1274:28:16"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:16","nodeType":"YulIdentifier","src":"1267:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1249,"isOffset":false,"isSlot":false,"src":"1278:6:16","valueSize":1},{"declaration":1240,"isOffset":false,"isSlot":false,"src":"1294:6:16","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"1267:3:16","valueSize":1}],"flags":["memory-safe"],"id":1258,"nodeType":"InlineAssembly","src":"1224:92:16"},{"body":{"id":1273,"nodeType":"Block","src":"1342:234:16","statements":[{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:16","subExpression":{"id":1260,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"1360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"1360:5:16"},{"AST":{"nativeSrc":"1408:86:16","nodeType":"YulBlock","src":"1408:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:16","nodeType":"YulIdentifier","src":"1438:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:16","nodeType":"YulIdentifier","src":"1452:5:16"},{"kind":"number","nativeSrc":"1459:2:16","nodeType":"YulLiteral","src":"1459:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:16","nodeType":"YulIdentifier","src":"1448:3:16"},"nativeSrc":"1448:14:16","nodeType":"YulFunctionCall","src":"1448:14:16"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:16","nodeType":"YulIdentifier","src":"1464:10:16"}],"functionName":{"name":"byte","nativeSrc":"1443:4:16","nodeType":"YulIdentifier","src":"1443:4:16"},"nativeSrc":"1443:32:16","nodeType":"YulFunctionCall","src":"1443:32:16"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:16","nodeType":"YulIdentifier","src":"1430:7:16"},"nativeSrc":"1430:46:16","nodeType":"YulFunctionCall","src":"1430:46:16"},"nativeSrc":"1430:46:16","nodeType":"YulExpressionStatement","src":"1430:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1215,"isOffset":false,"isSlot":false,"src":"1464:10:16","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"1438:3:16","valueSize":1},{"declaration":1234,"isOffset":false,"isSlot":false,"src":"1452:5:16","valueSize":1}],"flags":["memory-safe"],"id":1263,"nodeType":"InlineAssembly","src":"1383:111:16"},{"expression":{"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1267,"nodeType":"ExpressionStatement","src":"1511:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"1540:21:16","trueBody":{"id":1271,"nodeType":"Break","src":"1556:5:16"}}]},"condition":{"hexValue":"74727565","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1274,"nodeType":"WhileStatement","src":"1329:247:16"},{"expression":{"id":1275,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1596:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1238,"id":1276,"nodeType":"Return","src":"1589:13:16"}]}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"892:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:16","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"value","nameLocation":"1013:5:16","nodeType":"VariableDeclaration","scope":1279,"src":"1005:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:16"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"1043:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1236,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:16"},"scope":2401,"src":"987:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"1795:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:16","trueExpression":{"hexValue":"2d","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1872:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1297,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"1857:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5928_$","typeString":"type(library SignedMath)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5927,"src":"1857:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1296,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1848:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:16","typeDescriptions":{}}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1286,"id":1303,"nodeType":"Return","src":"1805:75:16"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"1625:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:16","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"value","nameLocation":"1750:5:16","nodeType":"VariableDeclaration","scope":1305,"src":"1743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1281,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:16"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"1780:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1284,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:16"},"scope":2401,"src":"1719:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1324,"nodeType":"Block","src":"2066:100:16","statements":[{"id":1323,"nodeType":"UncheckedBlock","src":"2076:84:16","statements":[{"expression":{"arguments":[{"id":1314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2119:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1315,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2126:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4019_$","typeString":"type(library Math)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3962,"src":"2126:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1325,1408,1428],"referencedDeclaration":1408,"src":"2107:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1312,"id":1322,"nodeType":"Return","src":"2100:49:16"}]}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"1893:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:16","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"value","nameLocation":"2021:5:16","nodeType":"VariableDeclaration","scope":1325,"src":"2013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:16"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"2051:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1310,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:16"},"scope":2401,"src":"1992:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1407,"nodeType":"Block","src":"2379:435:16","statements":[{"assignments":[1336],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:16","nodeType":"VariableDeclaration","scope":1407,"src":"2389:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1338,"initialValue":{"id":1337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:16"},{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:16","nodeType":"VariableDeclaration","scope":1407,"src":"2425:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1349,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1344,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"2461:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:16"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1350,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2482:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1352,"indexExpression":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1355,"nodeType":"ExpressionStatement","src":"2482:15:16"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1356,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2507:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1358,"indexExpression":{"hexValue":"31","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1361,"nodeType":"ExpressionStatement","src":"2507:15:16"},{"body":{"id":1390,"nodeType":"Block","src":"2577:95:16","statements":[{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1376,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2591:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1378,"indexExpression":{"id":1377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"2598:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1379,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2603:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1383,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2614:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1385,"nodeType":"ExpressionStatement","src":"2591:40:16"},{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1386,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ExpressionStatement","src":"2645:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"2565:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1391,"initializationExpression":{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"i","nameLocation":"2545:1:16","nodeType":"VariableDeclaration","scope":1391,"src":"2537:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1369,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1365,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"2553:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:16","subExpression":{"id":1373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"2574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ExpressionStatement","src":"2572:3:16"},"nodeType":"ForStatement","src":"2532:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2685:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"2681:96:16","trueBody":{"id":1400,"nodeType":"Block","src":"2702:75:16","statements":[{"errorCall":{"arguments":[{"id":1396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2752:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1397,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"2759:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2723:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1399,"nodeType":"RevertStatement","src":"2716:50:16"}]}},{"expression":{"arguments":[{"id":1404,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2800:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1402,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:16","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1334,"id":1406,"nodeType":"Return","src":"2786:21:16"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2172:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:16","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"value","nameLocation":"2318:5:16","nodeType":"VariableDeclaration","scope":1408,"src":"2310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"length","nameLocation":"2333:6:16","nodeType":"VariableDeclaration","scope":1408,"src":"2325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:16"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"2364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:16"},"scope":2401,"src":"2289:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"3046:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1421,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"3091:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1419,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:16","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:16","typeDescriptions":{}}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1424,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3099:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1416,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1325,1408,1428],"referencedDeclaration":1408,"src":"3063:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1415,"id":1426,"nodeType":"Return","src":"3056:58:16"}]},"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"2820:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:16","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"addr","nameLocation":"3002:4:16","nodeType":"VariableDeclaration","scope":1428,"src":"2994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:16"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"3031:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1413,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:16"},"scope":2401,"src":"2973:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"3378:642:16","statements":[{"assignments":[1437],"declarations":[{"constant":false,"id":1437,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:16","nodeType":"VariableDeclaration","scope":1492,"src":"3388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1444,"initialValue":{"arguments":[{"arguments":[{"id":1441,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3428:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1440,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1325,1408,1428],"referencedDeclaration":1428,"src":"3416:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:16","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:16"},{"assignments":[1446],"declarations":[{"constant":false,"id":1446,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:16","nodeType":"VariableDeclaration","scope":1492,"src":"3519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1447,"nodeType":"VariableDeclarationStatement","src":"3519:17:16"},{"AST":{"nativeSrc":"3571:78:16","nodeType":"YulBlock","src":"3571:78:16","statements":[{"nativeSrc":"3585:54:16","nodeType":"YulAssignment","src":"3585:54:16","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:16","nodeType":"YulLiteral","src":"3602:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:16","nodeType":"YulIdentifier","src":"3620:6:16"},{"kind":"number","nativeSrc":"3628:4:16","nodeType":"YulLiteral","src":"3628:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:16","nodeType":"YulIdentifier","src":"3616:3:16"},"nativeSrc":"3616:17:16","nodeType":"YulFunctionCall","src":"3616:17:16"},{"kind":"number","nativeSrc":"3635:2:16","nodeType":"YulLiteral","src":"3635:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:16","nodeType":"YulIdentifier","src":"3606:9:16"},"nativeSrc":"3606:32:16","nodeType":"YulFunctionCall","src":"3606:32:16"}],"functionName":{"name":"shr","nativeSrc":"3598:3:16","nodeType":"YulIdentifier","src":"3598:3:16"},"nativeSrc":"3598:41:16","nodeType":"YulFunctionCall","src":"3598:41:16"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:16","nodeType":"YulIdentifier","src":"3585:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1437,"isOffset":false,"isSlot":false,"src":"3620:6:16","valueSize":1},{"declaration":1446,"isOffset":false,"isSlot":false,"src":"3585:9:16","valueSize":1}],"flags":["memory-safe"],"id":1448,"nodeType":"InlineAssembly","src":"3546:103:16"},{"body":{"id":1485,"nodeType":"Block","src":"3692:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"3798:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1466,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3827:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1468,"indexExpression":{"id":1467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1464,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:16","typeDescriptions":{}}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"3794:150:16","trueBody":{"id":1479,"nodeType":"Block","src":"3844:100:16","statements":[{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"3912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1475,"indexExpression":{"id":1474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1478,"nodeType":"ExpressionStatement","src":"3912:17:16"}]}},{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1481,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"3957:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1484,"nodeType":"ExpressionStatement","src":"3957:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1486,"initializationExpression":{"assignments":[1450],"declarations":[{"constant":false,"id":1450,"mutability":"mutable","name":"i","nameLocation":"3672:1:16","nodeType":"VariableDeclaration","scope":1486,"src":"3664:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"hexValue":"3431","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:16","subExpression":{"id":1456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3689:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1458,"nodeType":"ExpressionStatement","src":"3687:3:16"},"nodeType":"ForStatement","src":"3659:324:16"},{"expression":{"arguments":[{"id":1489,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4006:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1487,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:16","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1435,"id":1491,"nodeType":"Return","src":"3992:21:16"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"3127:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:16","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"addr","nameLocation":"3334:4:16","nodeType":"VariableDeclaration","scope":1493,"src":"3326:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:16"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"3363:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1433,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:16"},"scope":2401,"src":"3297:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1529,"nodeType":"Block","src":"4175:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4198:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:16","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:16","memberName":"length","nodeType":"MemberAccess","src":"4192:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4217:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:16","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:16","memberName":"length","nodeType":"MemberAccess","src":"4211:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4246:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:16","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1514,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4269:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:16","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1520,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1502,"id":1528,"nodeType":"Return","src":"4185:87:16"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"4026:66:16","text":" @dev Returns true if the two strings are equal."},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:16","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"a","nameLocation":"4126:1:16","nodeType":"VariableDeclaration","scope":1530,"src":"4112:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"b","nameLocation":"4143:1:16","nodeType":"VariableDeclaration","scope":1530,"src":"4129:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1497,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:16"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"4169:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1500,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:16"},"scope":2401,"src":"4097:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"4576:64:16","statements":[{"expression":{"arguments":[{"id":1539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4603:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1543,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4619:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1541,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:16","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:16","memberName":"length","nodeType":"MemberAccess","src":"4613:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1538,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1549,1580],"referencedDeclaration":1580,"src":"4593:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1537,"id":1547,"nodeType":"Return","src":"4586:47:16"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"4285:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:16","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"input","nameLocation":"4537:5:16","nodeType":"VariableDeclaration","scope":1549,"src":"4523:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:16"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"4567:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:16"},"scope":2401,"src":"4504:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"5038:153:16","statements":[{"assignments":[1562,1564],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"success","nameLocation":"5054:7:16","nodeType":"VariableDeclaration","scope":1579,"src":"5049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1561,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"value","nameLocation":"5071:5:16","nodeType":"VariableDeclaration","scope":1579,"src":"5063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1570,"initialValue":{"arguments":[{"id":1566,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"5093:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"5100:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1568,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5107:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1601,1638],"referencedDeclaration":1638,"src":"5080:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:16"},{"condition":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:16","subExpression":{"id":1571,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5126:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"5121:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1573,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5142:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1575,"nodeType":"RevertStatement","src":"5135:27:16"}},{"expression":{"id":1577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"5179:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1560,"id":1578,"nodeType":"Return","src":"5172:12:16"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"4646:287:16","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:16","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"input","nameLocation":"4971:5:16","nodeType":"VariableDeclaration","scope":1580,"src":"4957:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1551,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"begin","nameLocation":"4986:5:16","nodeType":"VariableDeclaration","scope":1580,"src":"4978:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"end","nameLocation":"5001:3:16","nodeType":"VariableDeclaration","scope":1580,"src":"4993:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:16"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"5029:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:16"},"scope":2401,"src":"4938:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"5512:83:16","statements":[{"expression":{"arguments":[{"id":1591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1595,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1593,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:16","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:16","memberName":"length","nodeType":"MemberAccess","src":"5568:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"5529:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1589,"id":1599,"nodeType":"Return","src":"5522:66:16"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"5197:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:16","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"input","nameLocation":"5453:5:16","nodeType":"VariableDeclaration","scope":1601,"src":"5439:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:16"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"success","nameLocation":"5488:7:16","nodeType":"VariableDeclaration","scope":1601,"src":"5483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"value","nameLocation":"5505:5:16","nodeType":"VariableDeclaration","scope":1601,"src":"5497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:16"},"scope":2401,"src":"5417:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1637,"nodeType":"Block","src":"5997:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6011:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"6023:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1616,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:16","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:16","memberName":"length","nodeType":"MemberAccess","src":"6017:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1623,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6048:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1630,"nodeType":"IfStatement","src":"6007:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1614,"id":1629,"nodeType":"Return","src":"6053:17:16"}},{"expression":{"arguments":[{"id":1632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"6116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1633,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"6123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"6087:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1614,"id":1636,"nodeType":"Return","src":"6080:54:16"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"5601:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:16","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"input","nameLocation":"5889:5:16","nodeType":"VariableDeclaration","scope":1638,"src":"5875:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1603,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"begin","nameLocation":"5912:5:16","nodeType":"VariableDeclaration","scope":1638,"src":"5904:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"end","nameLocation":"5935:3:16","nodeType":"VariableDeclaration","scope":1638,"src":"5927:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:16"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"success","nameLocation":"5973:7:16","nodeType":"VariableDeclaration","scope":1638,"src":"5968:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"value","nameLocation":"5990:5:16","nodeType":"VariableDeclaration","scope":1638,"src":"5982:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:16"},"scope":2401,"src":"5844:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"6521:347:16","statements":[{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:16","nodeType":"VariableDeclaration","scope":1707,"src":"6531:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1652,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1658,"initialValue":{"arguments":[{"id":1656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"6559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1654,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:16","typeDescriptions":{}}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:16"},{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"mutability":"mutable","name":"result","nameLocation":"6584:6:16","nodeType":"VariableDeclaration","scope":1707,"src":"6576:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1662,"initialValue":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:16"},{"body":{"id":1701,"nodeType":"Block","src":"6642:189:16","statements":[{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"chr","nameLocation":"6662:3:16","nodeType":"VariableDeclaration","scope":1701,"src":"6656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1673,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1684,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1679,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"6711:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1678,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6688:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1676,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:16","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1675,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6668:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1685,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6741:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"nodeType":"IfStatement","src":"6737:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1651,"id":1691,"nodeType":"Return","src":"6750:17:16"}},{"expression":{"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6781:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ExpressionStatement","src":"6781:12:16"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6807:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1698,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6817:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1700,"nodeType":"ExpressionStatement","src":"6807:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1668,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"6632:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"initializationExpression":{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"i","nameLocation":"6617:1:16","nodeType":"VariableDeclaration","scope":1702,"src":"6609:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1666,"initialValue":{"id":1665,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:16","subExpression":{"id":1670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6639:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"nodeType":"ExpressionStatement","src":"6637:3:16"},"nodeType":"ForStatement","src":"6604:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1651,"id":1706,"nodeType":"Return","src":"6840:21:16"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"6147:201:16","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:16","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"input","nameLocation":"6414:5:16","nodeType":"VariableDeclaration","scope":1708,"src":"6400:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1640,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"begin","nameLocation":"6437:5:16","nodeType":"VariableDeclaration","scope":1708,"src":"6429:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"end","nameLocation":"6460:3:16","nodeType":"VariableDeclaration","scope":1708,"src":"6452:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:16"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"success","nameLocation":"6497:7:16","nodeType":"VariableDeclaration","scope":1708,"src":"6492:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1647,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"value","nameLocation":"6514:5:16","nodeType":"VariableDeclaration","scope":1708,"src":"6506:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:16"},"scope":2401,"src":"6353:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1726,"nodeType":"Block","src":"7165:63:16","statements":[{"expression":{"arguments":[{"id":1717,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"7191:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1721,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"7207:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:16","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:16","memberName":"length","nodeType":"MemberAccess","src":"7201:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1727,1758],"referencedDeclaration":1758,"src":"7182:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1715,"id":1725,"nodeType":"Return","src":"7175:46:16"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"6874:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:16","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"input","nameLocation":"7127:5:16","nodeType":"VariableDeclaration","scope":1727,"src":"7113:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:16"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"7157:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1713,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:16"},"scope":2401,"src":"7095:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1757,"nodeType":"Block","src":"7633:151:16","statements":[{"assignments":[1740,1742],"declarations":[{"constant":false,"id":1740,"mutability":"mutable","name":"success","nameLocation":"7649:7:16","nodeType":"VariableDeclaration","scope":1757,"src":"7644:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1739,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"value","nameLocation":"7665:5:16","nodeType":"VariableDeclaration","scope":1757,"src":"7658:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1741,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1748,"initialValue":{"arguments":[{"id":1744,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"7686:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1745,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"7693:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1746,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"7700:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1743,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1779,1821],"referencedDeclaration":1821,"src":"7674:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:16"},{"condition":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:16","subExpression":{"id":1749,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7719:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"nodeType":"IfStatement","src":"7714:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1751,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7735:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1753,"nodeType":"RevertStatement","src":"7728:27:16"}},{"expression":{"id":1755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"7772:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1738,"id":1756,"nodeType":"Return","src":"7765:12:16"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"7234:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:16","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"input","nameLocation":"7567:5:16","nodeType":"VariableDeclaration","scope":1758,"src":"7553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1729,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"begin","nameLocation":"7582:5:16","nodeType":"VariableDeclaration","scope":1758,"src":"7574:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"end","nameLocation":"7597:3:16","nodeType":"VariableDeclaration","scope":1758,"src":"7589:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:16"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1758,"src":"7625:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1736,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:16"},"scope":2401,"src":"7535:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"8175:82:16","statements":[{"expression":{"arguments":[{"id":1769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8220:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1773,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8236:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1771,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:16","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:16","memberName":"length","nodeType":"MemberAccess","src":"8230:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1768,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8192:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1767,"id":1777,"nodeType":"Return","src":"8185:65:16"}]},"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"7790:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:16","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"input","nameLocation":"8117:5:16","nodeType":"VariableDeclaration","scope":1779,"src":"8103:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:16"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"success","nameLocation":"8152:7:16","nodeType":"VariableDeclaration","scope":1779,"src":"8147:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1763,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"value","nameLocation":"8168:5:16","nodeType":"VariableDeclaration","scope":1779,"src":"8161:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1765,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:16"},"scope":2401,"src":"8082:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1784,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:16","nodeType":"VariableDeclaration","scope":2401,"src":"8263:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1820,"nodeType":"Block","src":"8779:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8793:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1801,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"8805:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:16","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:16","memberName":"length","nodeType":"MemberAccess","src":"8799:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"8822:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1806,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8830:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1813,"nodeType":"IfStatement","src":"8789:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1797,"id":1812,"nodeType":"Return","src":"8835:17:16"}},{"expression":{"arguments":[{"id":1815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"8897:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1816,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"8904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8911:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1814,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8869:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1797,"id":1819,"nodeType":"Return","src":"8862:53:16"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"8320:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:16","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"input","nameLocation":"8672:5:16","nodeType":"VariableDeclaration","scope":1821,"src":"8658:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"begin","nameLocation":"8695:5:16","nodeType":"VariableDeclaration","scope":1821,"src":"8687:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"end","nameLocation":"8718:3:16","nodeType":"VariableDeclaration","scope":1821,"src":"8710:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:16"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"success","nameLocation":"8756:7:16","nodeType":"VariableDeclaration","scope":1821,"src":"8751:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"value","nameLocation":"8772:5:16","nodeType":"VariableDeclaration","scope":1821,"src":"8765:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1795,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:16"},"scope":2401,"src":"8628:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"9299:812:16","statements":[{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:16","nodeType":"VariableDeclaration","scope":1941,"src":"9309:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1841,"initialValue":{"arguments":[{"id":1839,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"9337:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:16","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:16"},{"assignments":[1843],"declarations":[{"constant":false,"id":1843,"mutability":"mutable","name":"sign","nameLocation":"9407:4:16","nodeType":"VariableDeclaration","scope":1941,"src":"9400:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1842,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1859,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"9414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1845,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"9471:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1855,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"9479:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1853,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"9448:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1851,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:16","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1847,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:16","typeDescriptions":{}}},"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:16"},{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:16","nodeType":"VariableDeclaration","scope":1941,"src":"9567:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1860,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1868,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"9587:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1863,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:16","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:16"},{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:16","nodeType":"VariableDeclaration","scope":1941,"src":"9616:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1869,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1877,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"9636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1872,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:16","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:16"},{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"mutability":"mutable","name":"offset","nameLocation":"9673:6:16","nodeType":"VariableDeclaration","scope":1941,"src":"9665:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1886,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"9683:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1881,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9699:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"9682:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:16"},{"assignments":[1888,1890],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:16","nodeType":"VariableDeclaration","scope":1941,"src":"9733:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1887,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:16","nodeType":"VariableDeclaration","scope":1941,"src":"9750:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1898,"initialValue":{"arguments":[{"id":1892,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"9783:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1894,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"9798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1896,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9806:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1891,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1601,1638],"referencedDeclaration":1638,"src":"9770:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"9825:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"9839:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1901,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"9850:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"9967:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1920,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9981:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"9997:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1923,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"10009:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1834,"id":1938,"nodeType":"Return","src":"10087:17:16"},"id":1939,"nodeType":"IfStatement","src":"9963:141:16","trueBody":{"id":1934,"nodeType":"Block","src":"10025:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1928,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:16","memberName":"min","nodeType":"MemberAccess","src":"10053:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1834,"id":1933,"nodeType":"Return","src":"10039:31:16"}]}},"id":1940,"nodeType":"IfStatement","src":"9821:283:16","trueBody":{"id":1918,"nodeType":"Block","src":"9866:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1905,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"9894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1913,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"9936:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1911,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:16","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:16","trueExpression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:16","subExpression":{"arguments":[{"id":1908,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"9917:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1906,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:16","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1834,"id":1917,"nodeType":"Return","src":"9880:66:16"}]}}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"8928:200:16","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:16","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"input","nameLocation":"9193:5:16","nodeType":"VariableDeclaration","scope":1942,"src":"9179:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1823,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"begin","nameLocation":"9216:5:16","nodeType":"VariableDeclaration","scope":1942,"src":"9208:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"end","nameLocation":"9239:3:16","nodeType":"VariableDeclaration","scope":1942,"src":"9231:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:16"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"success","nameLocation":"9276:7:16","nodeType":"VariableDeclaration","scope":1942,"src":"9271:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"value","nameLocation":"9292:5:16","nodeType":"VariableDeclaration","scope":1942,"src":"9285:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1832,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:16"},"scope":2401,"src":"9133:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1960,"nodeType":"Block","src":"10456:67:16","statements":[{"expression":{"arguments":[{"id":1951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"10486:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"10502:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1953,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:16","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:16","memberName":"length","nodeType":"MemberAccess","src":"10496:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1950,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1961,1992],"referencedDeclaration":1992,"src":"10473:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1949,"id":1959,"nodeType":"Return","src":"10466:50:16"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"10117:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:16","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"input","nameLocation":"10417:5:16","nodeType":"VariableDeclaration","scope":1961,"src":"10403:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1944,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:16"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"10447:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:16"},"scope":2401,"src":"10381:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"10937:156:16","statements":[{"assignments":[1974,1976],"declarations":[{"constant":false,"id":1974,"mutability":"mutable","name":"success","nameLocation":"10953:7:16","nodeType":"VariableDeclaration","scope":1991,"src":"10948:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1973,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"value","nameLocation":"10970:5:16","nodeType":"VariableDeclaration","scope":1991,"src":"10962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1982,"initialValue":{"arguments":[{"id":1978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"10995:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"11002:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"11009:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1977,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2013,2050],"referencedDeclaration":2050,"src":"10979:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:16"},{"condition":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:16","subExpression":{"id":1983,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"11028:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"nodeType":"IfStatement","src":"11023:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1985,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"11044:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1987,"nodeType":"RevertStatement","src":"11037:27:16"}},{"expression":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11081:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1972,"id":1990,"nodeType":"Return","src":"11074:12:16"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"10529:300:16","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:16","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"input","nameLocation":"10870:5:16","nodeType":"VariableDeclaration","scope":1992,"src":"10856:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1963,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"begin","nameLocation":"10885:5:16","nodeType":"VariableDeclaration","scope":1992,"src":"10877:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"end","nameLocation":"10900:3:16","nodeType":"VariableDeclaration","scope":1992,"src":"10892:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:16"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"10928:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:16"},"scope":2401,"src":"10834:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"11420:86:16","statements":[{"expression":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"11469:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"11485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2005,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:16","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:16","memberName":"length","nodeType":"MemberAccess","src":"11479:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"11437:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2001,"id":2011,"nodeType":"Return","src":"11430:69:16"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"11099:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:16","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"input","nameLocation":"11361:5:16","nodeType":"VariableDeclaration","scope":2013,"src":"11347:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1994,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:16"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"success","nameLocation":"11396:7:16","nodeType":"VariableDeclaration","scope":2013,"src":"11391:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1997,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"value","nameLocation":"11413:5:16","nodeType":"VariableDeclaration","scope":2013,"src":"11405:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:16"},"scope":2401,"src":"11322:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"11914:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11928:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"11940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:16","typeDescriptions":{}}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:16","memberName":"length","nodeType":"MemberAccess","src":"11934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"11957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11965:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2042,"nodeType":"IfStatement","src":"11924:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2026,"id":2041,"nodeType":"Return","src":"11970:17:16"}},{"expression":{"arguments":[{"id":2044,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"12036:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2045,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12043:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12050:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"12004:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2026,"id":2048,"nodeType":"Return","src":"11997:57:16"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"11512:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:16","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"input","nameLocation":"11806:5:16","nodeType":"VariableDeclaration","scope":2050,"src":"11792:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2015,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"begin","nameLocation":"11829:5:16","nodeType":"VariableDeclaration","scope":2050,"src":"11821:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"end","nameLocation":"11852:3:16","nodeType":"VariableDeclaration","scope":2050,"src":"11844:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:16"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"success","nameLocation":"11890:7:16","nodeType":"VariableDeclaration","scope":2050,"src":"11885:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2022,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"value","nameLocation":"11907:5:16","nodeType":"VariableDeclaration","scope":2050,"src":"11899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:16"},"scope":2401,"src":"11758:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"12447:880:16","statements":[{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:16","nodeType":"VariableDeclaration","scope":2152,"src":"12457:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2064,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2070,"initialValue":{"arguments":[{"id":2068,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"12485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:16","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:16"},{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:16","nodeType":"VariableDeclaration","scope":2152,"src":"12539:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2071,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2092,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"12557:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12563:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2082,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12607:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2083,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2081,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"12584:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2079,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:16","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2086,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:16","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:16"},{"assignments":[2094],"declarations":[{"constant":false,"id":2094,"mutability":"mutable","name":"offset","nameLocation":"12727:6:16","nodeType":"VariableDeclaration","scope":2152,"src":"12719:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2100,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2095,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"12736:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"12736:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:16"},{"assignments":[2102],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"result","nameLocation":"12777:6:16","nodeType":"VariableDeclaration","scope":2152,"src":"12769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2104,"initialValue":{"hexValue":"30","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:16"},{"body":{"id":2146,"nodeType":"Block","src":"12844:446:16","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"chr","nameLocation":"12864:3:16","nodeType":"VariableDeclaration","scope":2146,"src":"12858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2117,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2128,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2123,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12913:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"12921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2122,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"12890:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:16","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2119,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12870:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"12943:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"12939:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2063,"id":2135,"nodeType":"Return","src":"12953:17:16"}},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12984:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"12984:12:16"},{"id":2145,"nodeType":"UncheckedBlock","src":"13010:270:16","statements":[{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"13252:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2142,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"13262:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2144,"nodeType":"ExpressionStatement","src":"13252:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"12830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2112,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"12834:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2147,"initializationExpression":{"assignments":[2106],"declarations":[{"constant":false,"id":2106,"mutability":"mutable","name":"i","nameLocation":"12810:1:16","nodeType":"VariableDeclaration","scope":2147,"src":"12802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2110,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12814:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2108,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"12822:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:16","subExpression":{"id":2114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"12841:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"12839:3:16"},"nodeType":"ForStatement","src":"12797:493:16"},{"expression":{"components":[{"hexValue":"74727565","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"13313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2063,"id":2151,"nodeType":"Return","src":"13299:21:16"}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"12067:204:16","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:16","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"input","nameLocation":"12340:5:16","nodeType":"VariableDeclaration","scope":2153,"src":"12326:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2052,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"begin","nameLocation":"12363:5:16","nodeType":"VariableDeclaration","scope":2153,"src":"12355:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"end","nameLocation":"12386:3:16","nodeType":"VariableDeclaration","scope":2153,"src":"12378:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:16"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"success","nameLocation":"12423:7:16","nodeType":"VariableDeclaration","scope":2153,"src":"12418:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"value","nameLocation":"12440:5:16","nodeType":"VariableDeclaration","scope":2153,"src":"12432:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:16"},"scope":2401,"src":"12276:1051:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2171,"nodeType":"Block","src":"13625:67:16","statements":[{"expression":{"arguments":[{"id":2162,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"13655:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"13671:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:16","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:16","memberName":"length","nodeType":"MemberAccess","src":"13665:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2161,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2172,2203],"referencedDeclaration":2203,"src":"13642:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2160,"id":2170,"nodeType":"Return","src":"13635:50:16"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"13333:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:16","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"input","nameLocation":"13586:5:16","nodeType":"VariableDeclaration","scope":2172,"src":"13572:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:16"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"13616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:16"},"scope":2401,"src":"13550:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"14058:165:16","statements":[{"assignments":[2185,2187],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"success","nameLocation":"14074:7:16","nodeType":"VariableDeclaration","scope":2202,"src":"14069:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2184,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"value","nameLocation":"14091:5:16","nodeType":"VariableDeclaration","scope":2202,"src":"14083:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2193,"initialValue":{"arguments":[{"id":2189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"14116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2190,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"14123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2191,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"14130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2188,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2224,2328],"referencedDeclaration":2328,"src":"14100:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:16"},{"condition":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:16","subExpression":{"id":2194,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14149:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"14144:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2196,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"14165:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2198,"nodeType":"RevertStatement","src":"14158:36:16"}},{"expression":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"14211:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2183,"id":2201,"nodeType":"Return","src":"14204:12:16"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"13698:252:16","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":2203,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2174,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"begin","nameLocation":"14006:5:16","nodeType":"VariableDeclaration","scope":2203,"src":"13998:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"end","nameLocation":"14021:3:16","nodeType":"VariableDeclaration","scope":2203,"src":"14013:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:16"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"14049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:16"},"scope":2401,"src":"13955:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"14523:70:16","statements":[{"expression":{"arguments":[{"id":2214,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14556:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2218,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"14572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:16","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:16","memberName":"length","nodeType":"MemberAccess","src":"14566:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2224,2328],"referencedDeclaration":2328,"src":"14540:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2212,"id":2222,"nodeType":"Return","src":"14533:53:16"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"14229:191:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:16","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"input","nameLocation":"14464:5:16","nodeType":"VariableDeclaration","scope":2224,"src":"14450:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2205,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:16"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"14499:7:16","nodeType":"VariableDeclaration","scope":2224,"src":"14494:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"value","nameLocation":"14516:5:16","nodeType":"VariableDeclaration","scope":2224,"src":"14508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:16"},"scope":2401,"src":"14425:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"14963:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"14977:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2241,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"14989:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2239,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:16","typeDescriptions":{}}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:16","memberName":"length","nodeType":"MemberAccess","src":"14983:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"15006:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2246,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"15014:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2256,"nodeType":"IfStatement","src":"14973:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:16","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2237,"id":2255,"nodeType":"Return","src":"15019:26:16"}},{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:16","nodeType":"VariableDeclaration","scope":2327,"src":"15056:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2281,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"15074:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"15080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2270,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"15130:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2268,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:16","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2272,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"15138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2267,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"15101:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2265,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:16","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2275,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:16","typeDescriptions":{}}},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:16"},{"assignments":[2283],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:16","nodeType":"VariableDeclaration","scope":2327,"src":"15242:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2291,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2285,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"15272:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"15272:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"15359:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2293,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"15365:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2295,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"15374:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2325,"nodeType":"Block","src":"15639:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:16","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2237,"id":2324,"nodeType":"Return","src":"15653:26:16"}]},"id":2326,"nodeType":"IfStatement","src":"15355:335:16","trueBody":{"id":2317,"nodeType":"Block","src":"15390:243:16","statements":[{"assignments":[2298,2300],"declarations":[{"constant":false,"id":2298,"mutability":"mutable","name":"s","nameLocation":"15511:1:16","nodeType":"VariableDeclaration","scope":2317,"src":"15506:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2297,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"v","nameLocation":"15522:1:16","nodeType":"VariableDeclaration","scope":2317,"src":"15514:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"15559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2303,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"15573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2301,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"15527:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:16"},{"expression":{"components":[{"id":2307,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"15599:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2312,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"15618:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2310,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:16","typeDescriptions":{}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:16","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2237,"id":2316,"nodeType":"Return","src":"15591:31:16"}]}}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"14599:203:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:16","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"input","nameLocation":"14855:5:16","nodeType":"VariableDeclaration","scope":2328,"src":"14841:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2226,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"begin","nameLocation":"14878:5:16","nodeType":"VariableDeclaration","scope":2328,"src":"14870:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"end","nameLocation":"14901:3:16","nodeType":"VariableDeclaration","scope":2328,"src":"14893:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:16"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"success","nameLocation":"14939:7:16","nodeType":"VariableDeclaration","scope":2328,"src":"14934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"value","nameLocation":"14956:5:16","nodeType":"VariableDeclaration","scope":2328,"src":"14948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:16"},"scope":2401,"src":"14807:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"15765:461:16","statements":[{"assignments":[2336],"declarations":[{"constant":false,"id":2336,"mutability":"mutable","name":"value","nameLocation":"15781:5:16","nodeType":"VariableDeclaration","scope":2387,"src":"15775:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2335,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2341,"initialValue":{"arguments":[{"id":2339,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"15795:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2337,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:16","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:16"},{"id":2384,"nodeType":"UncheckedBlock","src":"15959:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"15987:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16047:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16061:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16108:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2376,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2375,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:16","memberName":"max","nodeType":"MemberAccess","src":"16171:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2334,"id":2380,"nodeType":"Return","src":"16164:22:16"},"id":2381,"nodeType":"IfStatement","src":"16104:82:16","trueBody":{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16134:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2374,"nodeType":"ExpressionStatement","src":"16134:11:16"}},"id":2382,"nodeType":"IfStatement","src":"16043:143:16","trueBody":{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16074:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2363,"nodeType":"ExpressionStatement","src":"16074:11:16"}},"id":2383,"nodeType":"IfStatement","src":"15983:203:16","trueBody":{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16013:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2352,"nodeType":"ExpressionStatement","src":"16013:11:16"}}]},{"expression":{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"16214:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2334,"id":2386,"nodeType":"Return","src":"16207:12:16"}]},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:16","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"chr","nameLocation":"15731:3:16","nodeType":"VariableDeclaration","scope":2388,"src":"15724:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2329,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:16"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"15758:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2332,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:16"},"scope":2401,"src":"15702:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2399,"nodeType":"Block","src":"16611:225:16","statements":[{"AST":{"nativeSrc":"16760:70:16","nodeType":"YulBlock","src":"16760:70:16","statements":[{"nativeSrc":"16774:46:16","nodeType":"YulAssignment","src":"16774:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:16","nodeType":"YulIdentifier","src":"16793:6:16"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:16","nodeType":"YulLiteral","src":"16805:4:16","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:16","nodeType":"YulIdentifier","src":"16811:6:16"}],"functionName":{"name":"add","nativeSrc":"16801:3:16","nodeType":"YulIdentifier","src":"16801:3:16"},"nativeSrc":"16801:17:16","nodeType":"YulFunctionCall","src":"16801:17:16"}],"functionName":{"name":"add","nativeSrc":"16789:3:16","nodeType":"YulIdentifier","src":"16789:3:16"},"nativeSrc":"16789:30:16","nodeType":"YulFunctionCall","src":"16789:30:16"}],"functionName":{"name":"mload","nativeSrc":"16783:5:16","nodeType":"YulIdentifier","src":"16783:5:16"},"nativeSrc":"16783:37:16","nodeType":"YulFunctionCall","src":"16783:37:16"},"variableNames":[{"name":"value","nativeSrc":"16774:5:16","nodeType":"YulIdentifier","src":"16774:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2391,"isOffset":false,"isSlot":false,"src":"16793:6:16","valueSize":1},{"declaration":2393,"isOffset":false,"isSlot":false,"src":"16811:6:16","valueSize":1},{"declaration":2396,"isOffset":false,"isSlot":false,"src":"16774:5:16","valueSize":1}],"flags":["memory-safe"],"id":2398,"nodeType":"InlineAssembly","src":"16735:95:16"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"16232:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:16","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:16","nodeType":"VariableDeclaration","scope":2400,"src":"16537:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"offset","nameLocation":"16566:6:16","nodeType":"VariableDeclaration","scope":2400,"src":"16558:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:16"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"value","nameLocation":"16604:5:16","nodeType":"VariableDeclaration","scope":2400,"src":"16596:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:16"},"scope":2401,"src":"16505:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2402,"src":"297:16541:16","usedErrors":[1225,1228,1231],"usedEvents":[]}],"src":"101:16738:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2413]},"id":2414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2403,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"141:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2413,"linearizedBaseContracts":[2413],"name":"IERC165","nameLocation":"432:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"446:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2412,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:17","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:17","nodeType":"VariableDeclaration","scope":2412,"src":"818:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2406,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:17"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2412,"src":"861:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2409,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:17"},"scope":2413,"src":"791:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2414,"src":"422:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:755:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4019],"Panic":[1077],"SafeCast":[5784]},"id":4020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2415,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4020,"sourceUnit":1078,"src":"129:35:18","symbolAliases":[{"foreign":{"id":2416,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4020,"sourceUnit":5785,"src":"165:40:18","symbolAliases":[{"foreign":{"id":2418,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4019,"linearizedBaseContracts":[4019],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2425,"members":[{"id":2421,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":2422,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":2423,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":2424,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":2456,"nodeType":"Block","src":"677:140:18","statements":[{"id":2455,"nodeType":"UncheckedBlock","src":"687:124:18","statements":[{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"c","nameLocation":"719:1:18","nodeType":"VariableDeclaration","scope":2455,"src":"711:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"723:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"727:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"746:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"750:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"742:28:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2436,"id":2449,"nodeType":"Return","src":"753:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2452,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"798:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2436,"id":2454,"nodeType":"Return","src":"784:16:18"}]}]},"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"475:106:18","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:18","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"a","nameLocation":"610:1:18","nodeType":"VariableDeclaration","scope":2457,"src":"602:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"b","nameLocation":"621:1:18","nodeType":"VariableDeclaration","scope":2457,"src":"613:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:18"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"success","nameLocation":"652:7:18","nodeType":"VariableDeclaration","scope":2457,"src":"647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"result","nameLocation":"669:6:18","nodeType":"VariableDeclaration","scope":2457,"src":"661:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:18"},"scope":4019,"src":"586:231:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"1028:113:18","statements":[{"id":2483,"nodeType":"UncheckedBlock","src":"1038:97:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1066:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"1070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"IfStatement","src":"1062:28:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2468,"id":2475,"nodeType":"Return","src":"1073:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"1118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1122:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2468,"id":2482,"nodeType":"Return","src":"1104:20:18"}]}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"823:109:18","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:18","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"a","nameLocation":"961:1:18","nodeType":"VariableDeclaration","scope":2485,"src":"953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"b","nameLocation":"972:1:18","nodeType":"VariableDeclaration","scope":2485,"src":"964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:18"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"success","nameLocation":"1003:7:18","nodeType":"VariableDeclaration","scope":2485,"src":"998:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2464,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"result","nameLocation":"1020:6:18","nodeType":"VariableDeclaration","scope":2485,"src":"1012:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:18"},"scope":4019,"src":"937:204:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2526,"nodeType":"Block","src":"1355:417:18","statements":[{"id":2525,"nodeType":"UncheckedBlock","src":"1365:401:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1623:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"nodeType":"IfStatement","src":"1619:28:18","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2496,"id":2503,"nodeType":"Return","src":"1631:16:18"}},{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"c","nameLocation":"1669:1:18","nodeType":"VariableDeclaration","scope":2525,"src":"1661:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1673:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"1677:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"1696:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1700:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"1705:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2520,"nodeType":"IfStatement","src":"1692:33:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2496,"id":2519,"nodeType":"Return","src":"1708:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2522,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"1753:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2496,"id":2524,"nodeType":"Return","src":"1739:16:18"}]}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"1147:112:18","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:18","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"a","nameLocation":"1288:1:18","nodeType":"VariableDeclaration","scope":2527,"src":"1280:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"b","nameLocation":"1299:1:18","nodeType":"VariableDeclaration","scope":2527,"src":"1291:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:18"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"success","nameLocation":"1330:7:18","nodeType":"VariableDeclaration","scope":2527,"src":"1325:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"result","nameLocation":"1347:6:18","nodeType":"VariableDeclaration","scope":2527,"src":"1339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:18"},"scope":4019,"src":"1264:508:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2554,"nodeType":"Block","src":"1987:114:18","statements":[{"id":2553,"nodeType":"UncheckedBlock","src":"1997:98:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"2025:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"nodeType":"IfStatement","src":"2021:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2538,"id":2545,"nodeType":"Return","src":"2033:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"2078:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2549,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"2082:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2538,"id":2552,"nodeType":"Return","src":"2064:20:18"}]}]},"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"1778:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:18","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"a","nameLocation":"1920:1:18","nodeType":"VariableDeclaration","scope":2555,"src":"1912:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"b","nameLocation":"1931:1:18","nodeType":"VariableDeclaration","scope":2555,"src":"1923:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:18"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"success","nameLocation":"1962:7:18","nodeType":"VariableDeclaration","scope":2555,"src":"1957:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2534,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"result","nameLocation":"1979:6:18","nodeType":"VariableDeclaration","scope":2555,"src":"1971:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:18"},"scope":4019,"src":"1896:205:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"2326:114:18","statements":[{"id":2581,"nodeType":"UncheckedBlock","src":"2336:98:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"2364:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2574,"nodeType":"IfStatement","src":"2360:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2566,"id":2573,"nodeType":"Return","src":"2372:17:18"}},{"expression":{"components":[{"hexValue":"74727565","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"2417:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"2421:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2566,"id":2580,"nodeType":"Return","src":"2403:20:18"}]}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"2107:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:18","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"a","nameLocation":"2259:1:18","nodeType":"VariableDeclaration","scope":2583,"src":"2251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"b","nameLocation":"2270:1:18","nodeType":"VariableDeclaration","scope":2583,"src":"2262:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:18"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"success","nameLocation":"2301:7:18","nodeType":"VariableDeclaration","scope":2583,"src":"2296:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2562,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"result","nameLocation":"2318:6:18","nodeType":"VariableDeclaration","scope":2583,"src":"2310:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:18"},"scope":4019,"src":"2235:205:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"2912:207:18","statements":[{"id":2608,"nodeType":"UncheckedBlock","src":"2922:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"3060:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"3066:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"3070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2602,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"3091:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2600,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"3075:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"3075:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2594,"id":2607,"nodeType":"Return","src":"3053:49:18"}]}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"2446:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2610,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:18","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"condition","nameLocation":"2847:9:18","nodeType":"VariableDeclaration","scope":2610,"src":"2842:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2585,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"a","nameLocation":"2866:1:18","nodeType":"VariableDeclaration","scope":2610,"src":"2858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"b","nameLocation":"2877:1:18","nodeType":"VariableDeclaration","scope":2610,"src":"2869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:18"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"2903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:18"},"scope":4019,"src":"2825:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"3256:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3281:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3285:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3291:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"3273:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2619,"id":2627,"nodeType":"Return","src":"3266:27:18"}]},"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"3125:59:18","text":" @dev Returns the largest of two numbers."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:18","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"a","nameLocation":"3210:1:18","nodeType":"VariableDeclaration","scope":2629,"src":"3202:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"b","nameLocation":"3221:1:18","nodeType":"VariableDeclaration","scope":2629,"src":"3213:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:18"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"3247:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:18"},"scope":4019,"src":"3189:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2647,"nodeType":"Block","src":"3438:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"3463:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"3467:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"3470:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"3473:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2639,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"3455:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2638,"id":2646,"nodeType":"Return","src":"3448:27:18"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"3306:60:18","text":" @dev Returns the smallest of two numbers."},"id":2648,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:18","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"a","nameLocation":"3392:1:18","nodeType":"VariableDeclaration","scope":2648,"src":"3384:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"b","nameLocation":"3403:1:18","nodeType":"VariableDeclaration","scope":2648,"src":"3395:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:18"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"3429:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:18"},"scope":4019,"src":"3371:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2670,"nodeType":"Block","src":"3666:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3721:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3725:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3731:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3735:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2657,"id":2669,"nodeType":"Return","src":"3713:28:18"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"3488:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2671,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:18","nodeType":"FunctionDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"a","nameLocation":"3620:1:18","nodeType":"VariableDeclaration","scope":2671,"src":"3612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"b","nameLocation":"3631:1:18","nodeType":"VariableDeclaration","scope":2671,"src":"3623:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:18"},"returnParameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2671,"src":"3657:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:18"},"scope":4019,"src":"3595:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2711,"nodeType":"Block","src":"4040:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"4054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"nodeType":"IfStatement","src":"4050:150:18","trueBody":{"id":2691,"nodeType":"Block","src":"4062:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":2687,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4166:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"4166:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2684,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4154:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"4154:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"4154:35:18"}]}},{"id":2710,"nodeType":"UncheckedBlock","src":"4583:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4630:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2693,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"4614:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"4614:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4641:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"4650:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2680,"id":2709,"nodeType":"Return","src":"4607:49:18"}]}]},"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"3754:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2712,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:18","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"a","nameLocation":"3994:1:18","nodeType":"VariableDeclaration","scope":2712,"src":"3986:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"b","nameLocation":"4005:1:18","nodeType":"VariableDeclaration","scope":2712,"src":"3997:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:18"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2712,"src":"4031:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:18"},"scope":4019,"src":"3969:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"5094:4128:18","statements":[{"id":2847,"nodeType":"UncheckedBlock","src":"5104:4112:18","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:18","nodeType":"VariableDeclaration","scope":2847,"src":"5433:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2729,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5449:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2727,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"5453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:18"},{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:18","nodeType":"VariableDeclaration","scope":2847,"src":"5513:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2732,"nodeType":"VariableDeclarationStatement","src":"5513:13:18"},{"AST":{"nativeSrc":"5593:122:18","nodeType":"YulBlock","src":"5593:122:18","statements":[{"nativeSrc":"5611:30:18","nodeType":"YulVariableDeclaration","src":"5611:30:18","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:18","nodeType":"YulIdentifier","src":"5628:1:18"},{"name":"y","nativeSrc":"5631:1:18","nodeType":"YulIdentifier","src":"5631:1:18"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:18","nodeType":"YulLiteral","src":"5638:1:18","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:18","nodeType":"YulIdentifier","src":"5634:3:18"},"nativeSrc":"5634:6:18","nodeType":"YulFunctionCall","src":"5634:6:18"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:18","nodeType":"YulIdentifier","src":"5621:6:18"},"nativeSrc":"5621:20:18","nodeType":"YulFunctionCall","src":"5621:20:18"},"variables":[{"name":"mm","nativeSrc":"5615:2:18","nodeType":"YulTypedName","src":"5615:2:18","type":""}]},{"nativeSrc":"5658:43:18","nodeType":"YulAssignment","src":"5658:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:18","nodeType":"YulIdentifier","src":"5675:2:18"},{"name":"prod0","nativeSrc":"5679:5:18","nodeType":"YulIdentifier","src":"5679:5:18"}],"functionName":{"name":"sub","nativeSrc":"5671:3:18","nodeType":"YulIdentifier","src":"5671:3:18"},"nativeSrc":"5671:14:18","nodeType":"YulFunctionCall","src":"5671:14:18"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:18","nodeType":"YulIdentifier","src":"5690:2:18"},{"name":"prod0","nativeSrc":"5694:5:18","nodeType":"YulIdentifier","src":"5694:5:18"}],"functionName":{"name":"lt","nativeSrc":"5687:2:18","nodeType":"YulIdentifier","src":"5687:2:18"},"nativeSrc":"5687:13:18","nodeType":"YulFunctionCall","src":"5687:13:18"}],"functionName":{"name":"sub","nativeSrc":"5667:3:18","nodeType":"YulIdentifier","src":"5667:3:18"},"nativeSrc":"5667:34:18","nodeType":"YulFunctionCall","src":"5667:34:18"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:18","nodeType":"YulIdentifier","src":"5658:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2725,"isOffset":false,"isSlot":false,"src":"5679:5:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"5694:5:18","valueSize":1},{"declaration":2731,"isOffset":false,"isSlot":false,"src":"5658:5:18","valueSize":1},{"declaration":2715,"isOffset":false,"isSlot":false,"src":"5628:1:18","valueSize":1},{"declaration":2717,"isOffset":false,"isSlot":false,"src":"5631:1:18","valueSize":1}],"id":2733,"nodeType":"InlineAssembly","src":"5584:131:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"5796:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"nodeType":"IfStatement","src":"5792:368:18","trueBody":{"id":2741,"nodeType":"Block","src":"5808:352:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"6126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2738,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6134:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2723,"id":2740,"nodeType":"Return","src":"6119:26:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6270:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2744,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6285:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"6266:143:18","trueBody":{"id":2760,"nodeType":"Block","src":"6292:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6330:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2753,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"6348:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"6348:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2755,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"6372:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1040,"src":"6372:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6322:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2746,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"6310:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"6310:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2759,"nodeType":"ExpressionStatement","src":"6310:84:18"}]}},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:18","nodeType":"VariableDeclaration","scope":2847,"src":"6664:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2764,"nodeType":"VariableDeclarationStatement","src":"6664:17:18"},{"AST":{"nativeSrc":"6704:291:18","nodeType":"YulBlock","src":"6704:291:18","statements":[{"nativeSrc":"6773:38:18","nodeType":"YulAssignment","src":"6773:38:18","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:18","nodeType":"YulIdentifier","src":"6793:1:18"},{"name":"y","nativeSrc":"6796:1:18","nodeType":"YulIdentifier","src":"6796:1:18"},{"name":"denominator","nativeSrc":"6799:11:18","nodeType":"YulIdentifier","src":"6799:11:18"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:18","nodeType":"YulIdentifier","src":"6786:6:18"},"nativeSrc":"6786:25:18","nodeType":"YulFunctionCall","src":"6786:25:18"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:18","nodeType":"YulIdentifier","src":"6773:9:18"}]},{"nativeSrc":"6893:41:18","nodeType":"YulAssignment","src":"6893:41:18","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:18","nodeType":"YulIdentifier","src":"6906:5:18"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:18","nodeType":"YulIdentifier","src":"6916:9:18"},{"name":"prod0","nativeSrc":"6927:5:18","nodeType":"YulIdentifier","src":"6927:5:18"}],"functionName":{"name":"gt","nativeSrc":"6913:2:18","nodeType":"YulIdentifier","src":"6913:2:18"},"nativeSrc":"6913:20:18","nodeType":"YulFunctionCall","src":"6913:20:18"}],"functionName":{"name":"sub","nativeSrc":"6902:3:18","nodeType":"YulIdentifier","src":"6902:3:18"},"nativeSrc":"6902:32:18","nodeType":"YulFunctionCall","src":"6902:32:18"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:18","nodeType":"YulIdentifier","src":"6893:5:18"}]},{"nativeSrc":"6951:30:18","nodeType":"YulAssignment","src":"6951:30:18","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:18","nodeType":"YulIdentifier","src":"6964:5:18"},{"name":"remainder","nativeSrc":"6971:9:18","nodeType":"YulIdentifier","src":"6971:9:18"}],"functionName":{"name":"sub","nativeSrc":"6960:3:18","nodeType":"YulIdentifier","src":"6960:3:18"},"nativeSrc":"6960:21:18","nodeType":"YulFunctionCall","src":"6960:21:18"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:18","nodeType":"YulIdentifier","src":"6951:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2719,"isOffset":false,"isSlot":false,"src":"6799:11:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"6927:5:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"6951:5:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"6964:5:18","valueSize":1},{"declaration":2731,"isOffset":false,"isSlot":false,"src":"6893:5:18","valueSize":1},{"declaration":2731,"isOffset":false,"isSlot":false,"src":"6906:5:18","valueSize":1},{"declaration":2763,"isOffset":false,"isSlot":false,"src":"6773:9:18","valueSize":1},{"declaration":2763,"isOffset":false,"isSlot":false,"src":"6916:9:18","valueSize":1},{"declaration":2763,"isOffset":false,"isSlot":false,"src":"6971:9:18","valueSize":1},{"declaration":2715,"isOffset":false,"isSlot":false,"src":"6793:1:18","valueSize":1},{"declaration":2717,"isOffset":false,"isSlot":false,"src":"6796:1:18","valueSize":1}],"id":2765,"nodeType":"InlineAssembly","src":"6695:300:18"},{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"twos","nameLocation":"7207:4:18","nodeType":"VariableDeclaration","scope":2847,"src":"7199:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2774,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7214:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7233:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:18"},{"AST":{"nativeSrc":"7268:366:18","nodeType":"YulBlock","src":"7268:366:18","statements":[{"nativeSrc":"7333:37:18","nodeType":"YulAssignment","src":"7333:37:18","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:18","nodeType":"YulIdentifier","src":"7352:11:18"},{"name":"twos","nativeSrc":"7365:4:18","nodeType":"YulIdentifier","src":"7365:4:18"}],"functionName":{"name":"div","nativeSrc":"7348:3:18","nodeType":"YulIdentifier","src":"7348:3:18"},"nativeSrc":"7348:22:18","nodeType":"YulFunctionCall","src":"7348:22:18"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:18","nodeType":"YulIdentifier","src":"7333:11:18"}]},{"nativeSrc":"7437:25:18","nodeType":"YulAssignment","src":"7437:25:18","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:18","nodeType":"YulIdentifier","src":"7450:5:18"},{"name":"twos","nativeSrc":"7457:4:18","nodeType":"YulIdentifier","src":"7457:4:18"}],"functionName":{"name":"div","nativeSrc":"7446:3:18","nodeType":"YulIdentifier","src":"7446:3:18"},"nativeSrc":"7446:16:18","nodeType":"YulFunctionCall","src":"7446:16:18"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:18","nodeType":"YulIdentifier","src":"7437:5:18"}]},{"nativeSrc":"7581:39:18","nodeType":"YulAssignment","src":"7581:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:18","nodeType":"YulLiteral","src":"7601:1:18","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:18","nodeType":"YulIdentifier","src":"7604:4:18"}],"functionName":{"name":"sub","nativeSrc":"7597:3:18","nodeType":"YulIdentifier","src":"7597:3:18"},"nativeSrc":"7597:12:18","nodeType":"YulFunctionCall","src":"7597:12:18"},{"name":"twos","nativeSrc":"7611:4:18","nodeType":"YulIdentifier","src":"7611:4:18"}],"functionName":{"name":"div","nativeSrc":"7593:3:18","nodeType":"YulIdentifier","src":"7593:3:18"},"nativeSrc":"7593:23:18","nodeType":"YulFunctionCall","src":"7593:23:18"},{"kind":"number","nativeSrc":"7618:1:18","nodeType":"YulLiteral","src":"7618:1:18","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:18","nodeType":"YulIdentifier","src":"7589:3:18"},"nativeSrc":"7589:31:18","nodeType":"YulFunctionCall","src":"7589:31:18"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:18","nodeType":"YulIdentifier","src":"7581:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2719,"isOffset":false,"isSlot":false,"src":"7333:11:18","valueSize":1},{"declaration":2719,"isOffset":false,"isSlot":false,"src":"7352:11:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"7437:5:18","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"7450:5:18","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"7365:4:18","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"7457:4:18","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"7581:4:18","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"7604:4:18","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"7611:4:18","valueSize":1}],"id":2775,"nodeType":"InlineAssembly","src":"7259:375:18"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"7700:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"7709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2778,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"7717:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"7700:21:18"},{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:18","nodeType":"VariableDeclaration","scope":2847,"src":"8056:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2790,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2785,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8079:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:18"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8327:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8341:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"8312:36:18"},{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2799,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8382:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8397:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2802,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8411:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"8382:36:18"},{"expression":{"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2807,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8454:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8469:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2810,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8483:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2814,"nodeType":"ExpressionStatement","src":"8454:36:18"},{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8525:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8540:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2818,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8554:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2822,"nodeType":"ExpressionStatement","src":"8525:36:18"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2823,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8598:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8613:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2826,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8627:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"8598:36:18"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2831,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8672:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8687:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2834,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"8701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2838,"nodeType":"ExpressionStatement","src":"8672:36:18"},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"9154:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9163:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2841,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"9171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"9154:24:18"},{"expression":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"9199:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2723,"id":2846,"nodeType":"Return","src":"9192:13:18"}]}]},"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"4679:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:18","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"x","nameLocation":"5020:1:18","nodeType":"VariableDeclaration","scope":2849,"src":"5012:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"y","nameLocation":"5031:1:18","nodeType":"VariableDeclaration","scope":2849,"src":"5023:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:18","nodeType":"VariableDeclaration","scope":2849,"src":"5034:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:18"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"result","nameLocation":"5086:6:18","nodeType":"VariableDeclaration","scope":2849,"src":"5078:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:18"},"scope":4019,"src":"4996:4226:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"9461:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2865,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"9485:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2866,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9488:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9491:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2849,2886],"referencedDeclaration":2849,"src":"9478:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2872,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"9539:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":2871,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"9522:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2425_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2875,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"9559:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2876,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9562:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2877,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9565:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2869,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"9506:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"9506:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2863,"id":2884,"nodeType":"Return","src":"9471:111:18"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"9228:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:18","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"x","nameLocation":"9375:1:18","nodeType":"VariableDeclaration","scope":2886,"src":"9367:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"y","nameLocation":"9386:1:18","nodeType":"VariableDeclaration","scope":2886,"src":"9378:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:18","nodeType":"VariableDeclaration","scope":2886,"src":"9389:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:18","nodeType":"VariableDeclaration","scope":2886,"src":"9410:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":2858,"nodeType":"UserDefinedTypeName","pathNode":{"id":2857,"name":"Rounding","nameLocations":["9410:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"9410:8:18"},"referencedDeclaration":2425,"src":"9410:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:18"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"9452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:18"},"scope":4019,"src":"9351:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2982,"nodeType":"Block","src":"10223:1849:18","statements":[{"id":2981,"nodeType":"UncheckedBlock","src":"10233:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"10261:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"10257:20:18","trueBody":{"expression":{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2895,"id":2900,"nodeType":"Return","src":"10269:8:18"}},{"assignments":[2903],"declarations":[{"constant":false,"id":2903,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:18","nodeType":"VariableDeclaration","scope":2981,"src":"10748:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2907,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"10768:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2905,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"10772:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:18"},{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:18","nodeType":"VariableDeclaration","scope":2981,"src":"10787:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2911,"initialValue":{"id":2910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"10801:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:18"},{"assignments":[2913],"declarations":[{"constant":false,"id":2913,"mutability":"mutable","name":"x","nameLocation":"10945:1:18","nodeType":"VariableDeclaration","scope":2981,"src":"10938:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2912,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2915,"initialValue":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:18"},{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"y","nameLocation":"10971:1:18","nodeType":"VariableDeclaration","scope":2981,"src":"10964:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2916,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2919,"initialValue":{"hexValue":"31","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:18"},{"body":{"id":2956,"nodeType":"Block","src":"11014:882:18","statements":[{"assignments":[2924],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:18","nodeType":"VariableDeclaration","scope":2956,"src":"11032:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"11051:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2926,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"11057:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:18"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2929,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"11086:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2930,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"11091:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2931,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2932,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"11191:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2933,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"11436:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"11442:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2935,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"11454:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2940,"nodeType":"ExpressionStatement","src":"11085:395:18"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"11500:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2942,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11503:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2944,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11585:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"11839:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11843:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2949,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"11854:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2947,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:18","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2955,"nodeType":"ExpressionStatement","src":"11499:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"10998:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"WhileStatement","src":"10991:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"11914:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2963,"nodeType":"IfStatement","src":"11910:22:18","trueBody":{"expression":{"hexValue":"30","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2895,"id":2962,"nodeType":"Return","src":"11924:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"11983:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:18","subExpression":{"id":2971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"12003:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:18","typeDescriptions":{}}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"12015:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:18","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2964,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11975:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2895,"id":2980,"nodeType":"Return","src":"11968:50:18"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"9595:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2983,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:18","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"a","nameLocation":"10177:1:18","nodeType":"VariableDeclaration","scope":2983,"src":"10169:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"n","nameLocation":"10188:1:18","nodeType":"VariableDeclaration","scope":2983,"src":"10180:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:18"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2983,"src":"10214:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:18"},"scope":4019,"src":"10153:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"12672:82:18","statements":[{"id":3002,"nodeType":"UncheckedBlock","src":"12682:66:18","statements":[{"expression":{"arguments":[{"id":2995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"12725:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"12728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2999,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"12735:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2993,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"12713:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4019_$","typeString":"type(library Math)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"12713:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2992,"id":3001,"nodeType":"Return","src":"12706:31:18"}]}]},"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"12078:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:18","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"a","nameLocation":"12626:1:18","nodeType":"VariableDeclaration","scope":3004,"src":"12618:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"p","nameLocation":"12637:1:18","nodeType":"VariableDeclaration","scope":3004,"src":"12629:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:18"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"12663:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:18"},"scope":4019,"src":"12597:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3039,"nodeType":"Block","src":"13524:174:18","statements":[{"assignments":[3017,3019],"declarations":[{"constant":false,"id":3017,"mutability":"mutable","name":"success","nameLocation":"13540:7:18","nodeType":"VariableDeclaration","scope":3039,"src":"13535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3016,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"result","nameLocation":"13557:6:18","nodeType":"VariableDeclaration","scope":3039,"src":"13549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"id":3021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"13577:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3022,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"13580:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3023,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"13583:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3020,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3064,3146],"referencedDeclaration":3064,"src":"13567:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:18"},{"condition":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:18","subExpression":{"id":3026,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"13600:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3036,"nodeType":"IfStatement","src":"13595:74:18","trueBody":{"id":3035,"nodeType":"Block","src":"13609:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":3031,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"13635:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"13635:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3028,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"13623:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"13623:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"13623:35:18"}]}},{"expression":{"id":3037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"13685:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3015,"id":3038,"nodeType":"Return","src":"13678:13:18"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"12760:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3040,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:18","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"b","nameLocation":"13467:1:18","nodeType":"VariableDeclaration","scope":3040,"src":"13459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"e","nameLocation":"13478:1:18","nodeType":"VariableDeclaration","scope":3040,"src":"13470:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"m","nameLocation":"13489:1:18","nodeType":"VariableDeclaration","scope":3040,"src":"13481:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:18"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3040,"src":"13515:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:18"},"scope":4019,"src":"13443:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"14552:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"14566:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"14562:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3053,"id":3060,"nodeType":"Return","src":"14574:17:18"}},{"AST":{"nativeSrc":"14626:1413:18","nodeType":"YulBlock","src":"14626:1413:18","statements":[{"nativeSrc":"14640:22:18","nodeType":"YulVariableDeclaration","src":"14640:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:18","nodeType":"YulLiteral","src":"14657:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:18","nodeType":"YulIdentifier","src":"14651:5:18"},"nativeSrc":"14651:11:18","nodeType":"YulFunctionCall","src":"14651:11:18"},"variables":[{"name":"ptr","nativeSrc":"14644:3:18","nodeType":"YulTypedName","src":"14644:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:18","nodeType":"YulIdentifier","src":"15570:3:18"},{"kind":"number","nativeSrc":"15575:4:18","nodeType":"YulLiteral","src":"15575:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:18","nodeType":"YulIdentifier","src":"15563:6:18"},"nativeSrc":"15563:17:18","nodeType":"YulFunctionCall","src":"15563:17:18"},"nativeSrc":"15563:17:18","nodeType":"YulExpressionStatement","src":"15563:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:18","nodeType":"YulIdentifier","src":"15604:3:18"},{"kind":"number","nativeSrc":"15609:4:18","nodeType":"YulLiteral","src":"15609:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:18","nodeType":"YulIdentifier","src":"15600:3:18"},"nativeSrc":"15600:14:18","nodeType":"YulFunctionCall","src":"15600:14:18"},{"kind":"number","nativeSrc":"15616:4:18","nodeType":"YulLiteral","src":"15616:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:18","nodeType":"YulIdentifier","src":"15593:6:18"},"nativeSrc":"15593:28:18","nodeType":"YulFunctionCall","src":"15593:28:18"},"nativeSrc":"15593:28:18","nodeType":"YulExpressionStatement","src":"15593:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:18","nodeType":"YulIdentifier","src":"15645:3:18"},{"kind":"number","nativeSrc":"15650:4:18","nodeType":"YulLiteral","src":"15650:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:18","nodeType":"YulIdentifier","src":"15641:3:18"},"nativeSrc":"15641:14:18","nodeType":"YulFunctionCall","src":"15641:14:18"},{"kind":"number","nativeSrc":"15657:4:18","nodeType":"YulLiteral","src":"15657:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:18","nodeType":"YulIdentifier","src":"15634:6:18"},"nativeSrc":"15634:28:18","nodeType":"YulFunctionCall","src":"15634:28:18"},"nativeSrc":"15634:28:18","nodeType":"YulExpressionStatement","src":"15634:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:18","nodeType":"YulIdentifier","src":"15686:3:18"},{"kind":"number","nativeSrc":"15691:4:18","nodeType":"YulLiteral","src":"15691:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:18","nodeType":"YulIdentifier","src":"15682:3:18"},"nativeSrc":"15682:14:18","nodeType":"YulFunctionCall","src":"15682:14:18"},{"name":"b","nativeSrc":"15698:1:18","nodeType":"YulIdentifier","src":"15698:1:18"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:18","nodeType":"YulIdentifier","src":"15675:6:18"},"nativeSrc":"15675:25:18","nodeType":"YulFunctionCall","src":"15675:25:18"},"nativeSrc":"15675:25:18","nodeType":"YulExpressionStatement","src":"15675:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:18","nodeType":"YulIdentifier","src":"15724:3:18"},{"kind":"number","nativeSrc":"15729:4:18","nodeType":"YulLiteral","src":"15729:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:18","nodeType":"YulIdentifier","src":"15720:3:18"},"nativeSrc":"15720:14:18","nodeType":"YulFunctionCall","src":"15720:14:18"},{"name":"e","nativeSrc":"15736:1:18","nodeType":"YulIdentifier","src":"15736:1:18"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:18","nodeType":"YulIdentifier","src":"15713:6:18"},"nativeSrc":"15713:25:18","nodeType":"YulFunctionCall","src":"15713:25:18"},"nativeSrc":"15713:25:18","nodeType":"YulExpressionStatement","src":"15713:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:18","nodeType":"YulIdentifier","src":"15762:3:18"},{"kind":"number","nativeSrc":"15767:4:18","nodeType":"YulLiteral","src":"15767:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:18","nodeType":"YulIdentifier","src":"15758:3:18"},"nativeSrc":"15758:14:18","nodeType":"YulFunctionCall","src":"15758:14:18"},{"name":"m","nativeSrc":"15774:1:18","nodeType":"YulIdentifier","src":"15774:1:18"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:18","nodeType":"YulIdentifier","src":"15751:6:18"},"nativeSrc":"15751:25:18","nodeType":"YulFunctionCall","src":"15751:25:18"},"nativeSrc":"15751:25:18","nodeType":"YulExpressionStatement","src":"15751:25:18"},{"nativeSrc":"15938:57:18","nodeType":"YulAssignment","src":"15938:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:18","nodeType":"YulIdentifier","src":"15960:3:18"},"nativeSrc":"15960:5:18","nodeType":"YulFunctionCall","src":"15960:5:18"},{"kind":"number","nativeSrc":"15967:4:18","nodeType":"YulLiteral","src":"15967:4:18","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:18","nodeType":"YulIdentifier","src":"15973:3:18"},{"kind":"number","nativeSrc":"15978:4:18","nodeType":"YulLiteral","src":"15978:4:18","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:18","nodeType":"YulLiteral","src":"15984:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:18","nodeType":"YulLiteral","src":"15990:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:18","nodeType":"YulIdentifier","src":"15949:10:18"},"nativeSrc":"15949:46:18","nodeType":"YulFunctionCall","src":"15949:46:18"},"variableNames":[{"name":"success","nativeSrc":"15938:7:18","nodeType":"YulIdentifier","src":"15938:7:18"}]},{"nativeSrc":"16008:21:18","nodeType":"YulAssignment","src":"16008:21:18","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:18","nodeType":"YulLiteral","src":"16024:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:18","nodeType":"YulIdentifier","src":"16018:5:18"},"nativeSrc":"16018:11:18","nodeType":"YulFunctionCall","src":"16018:11:18"},"variableNames":[{"name":"result","nativeSrc":"16008:6:18","nodeType":"YulIdentifier","src":"16008:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3043,"isOffset":false,"isSlot":false,"src":"15698:1:18","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"15736:1:18","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"15774:1:18","valueSize":1},{"declaration":3052,"isOffset":false,"isSlot":false,"src":"16008:6:18","valueSize":1},{"declaration":3050,"isOffset":false,"isSlot":false,"src":"15938:7:18","valueSize":1}],"flags":["memory-safe"],"id":3062,"nodeType":"InlineAssembly","src":"14601:1438:18"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"13704:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:18","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"b","nameLocation":"14474:1:18","nodeType":"VariableDeclaration","scope":3064,"src":"14466:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"e","nameLocation":"14485:1:18","nodeType":"VariableDeclaration","scope":3064,"src":"14477:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"m","nameLocation":"14496:1:18","nodeType":"VariableDeclaration","scope":3064,"src":"14488:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:18"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"success","nameLocation":"14527:7:18","nodeType":"VariableDeclaration","scope":3064,"src":"14522:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3049,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"result","nameLocation":"14544:6:18","nodeType":"VariableDeclaration","scope":3064,"src":"14536:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:18"},"scope":4019,"src":"14447:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"16242:179:18","statements":[{"assignments":[3077,3079],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"success","nameLocation":"16258:7:18","nodeType":"VariableDeclaration","scope":3099,"src":"16253:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3076,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"result","nameLocation":"16280:6:18","nodeType":"VariableDeclaration","scope":3099,"src":"16267:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3078,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3085,"initialValue":{"arguments":[{"id":3081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"16300:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3082,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"16303:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3083,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"16306:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3080,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3064,3146],"referencedDeclaration":3146,"src":"16290:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:18"},{"condition":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:18","subExpression":{"id":3086,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"16323:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3096,"nodeType":"IfStatement","src":"16318:74:18","trueBody":{"id":3095,"nodeType":"Block","src":"16332:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":3091,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"16358:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"16358:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3088,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"16346:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1077_$","typeString":"type(library Panic)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"16346:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3094,"nodeType":"ExpressionStatement","src":"16346:35:18"}]}},{"expression":{"id":3097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"16408:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3075,"id":3098,"nodeType":"Return","src":"16401:13:18"}]},"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"16051:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:18","nodeType":"FunctionDefinition","parameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"b","nameLocation":"16170:1:18","nodeType":"VariableDeclaration","scope":3100,"src":"16157:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3066,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"e","nameLocation":"16186:1:18","nodeType":"VariableDeclaration","scope":3100,"src":"16173:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3071,"mutability":"mutable","name":"m","nameLocation":"16202:1:18","nodeType":"VariableDeclaration","scope":3100,"src":"16189:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3070,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:18"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"16228:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3073,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:18"},"scope":4019,"src":"16141:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"16675:771:18","statements":[{"condition":{"arguments":[{"id":3115,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"16700:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3114,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"16689:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3124,"nodeType":"IfStatement","src":"16685:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3118,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3113,"id":3123,"nodeType":"Return","src":"16704:28:18"}},{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:18","nodeType":"VariableDeclaration","scope":3145,"src":"16743:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3129,"initialValue":{"expression":{"id":3127,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"16758:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:18","memberName":"length","nodeType":"MemberAccess","src":"16758:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:18"},{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"16848:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"16874:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:18","memberName":"length","nodeType":"MemberAccess","src":"16874:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3135,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"16884:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:18","memberName":"length","nodeType":"MemberAccess","src":"16884:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3137,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"16894:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"16900:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3139,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"16903:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3140,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"16906:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3131,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3143,"nodeType":"ExpressionStatement","src":"16848:60:18"},{"AST":{"nativeSrc":"16944:496:18","nodeType":"YulBlock","src":"16944:496:18","statements":[{"nativeSrc":"16958:32:18","nodeType":"YulVariableDeclaration","src":"16958:32:18","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:18","nodeType":"YulIdentifier","src":"16977:6:18"},{"kind":"number","nativeSrc":"16985:4:18","nodeType":"YulLiteral","src":"16985:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:18","nodeType":"YulIdentifier","src":"16973:3:18"},"nativeSrc":"16973:17:18","nodeType":"YulFunctionCall","src":"16973:17:18"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:18","nodeType":"YulTypedName","src":"16962:7:18","type":""}]},{"nativeSrc":"17080:73:18","nodeType":"YulAssignment","src":"17080:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:18","nodeType":"YulIdentifier","src":"17102:3:18"},"nativeSrc":"17102:5:18","nodeType":"YulFunctionCall","src":"17102:5:18"},{"kind":"number","nativeSrc":"17109:4:18","nodeType":"YulLiteral","src":"17109:4:18","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:18","nodeType":"YulIdentifier","src":"17115:7:18"},{"arguments":[{"name":"result","nativeSrc":"17130:6:18","nodeType":"YulIdentifier","src":"17130:6:18"}],"functionName":{"name":"mload","nativeSrc":"17124:5:18","nodeType":"YulIdentifier","src":"17124:5:18"},"nativeSrc":"17124:13:18","nodeType":"YulFunctionCall","src":"17124:13:18"},{"name":"dataPtr","nativeSrc":"17139:7:18","nodeType":"YulIdentifier","src":"17139:7:18"},{"name":"mLen","nativeSrc":"17148:4:18","nodeType":"YulIdentifier","src":"17148:4:18"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:18","nodeType":"YulIdentifier","src":"17091:10:18"},"nativeSrc":"17091:62:18","nodeType":"YulFunctionCall","src":"17091:62:18"},"variableNames":[{"name":"success","nativeSrc":"17080:7:18","nodeType":"YulIdentifier","src":"17080:7:18"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:18","nodeType":"YulIdentifier","src":"17309:6:18"},{"name":"mLen","nativeSrc":"17317:4:18","nodeType":"YulIdentifier","src":"17317:4:18"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:18","nodeType":"YulIdentifier","src":"17302:6:18"},"nativeSrc":"17302:20:18","nodeType":"YulFunctionCall","src":"17302:20:18"},"nativeSrc":"17302:20:18","nodeType":"YulExpressionStatement","src":"17302:20:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:18","nodeType":"YulLiteral","src":"17405:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:18","nodeType":"YulIdentifier","src":"17415:7:18"},{"name":"mLen","nativeSrc":"17424:4:18","nodeType":"YulIdentifier","src":"17424:4:18"}],"functionName":{"name":"add","nativeSrc":"17411:3:18","nodeType":"YulIdentifier","src":"17411:3:18"},"nativeSrc":"17411:18:18","nodeType":"YulFunctionCall","src":"17411:18:18"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:18","nodeType":"YulIdentifier","src":"17398:6:18"},"nativeSrc":"17398:32:18","nodeType":"YulFunctionCall","src":"17398:32:18"},"nativeSrc":"17398:32:18","nodeType":"YulExpressionStatement","src":"17398:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3126,"isOffset":false,"isSlot":false,"src":"17148:4:18","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"17317:4:18","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"17424:4:18","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"16977:6:18","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"17130:6:18","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"17309:6:18","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"17080:7:18","valueSize":1}],"flags":["memory-safe"],"id":3144,"nodeType":"InlineAssembly","src":"16919:521:18"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"16427:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:18","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"b","nameLocation":"16561:1:18","nodeType":"VariableDeclaration","scope":3146,"src":"16548:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"e","nameLocation":"16585:1:18","nodeType":"VariableDeclaration","scope":3146,"src":"16572:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3104,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"m","nameLocation":"16609:1:18","nodeType":"VariableDeclaration","scope":3146,"src":"16596:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3106,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:18"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"success","nameLocation":"16645:7:18","nodeType":"VariableDeclaration","scope":3146,"src":"16640:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3109,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"result","nameLocation":"16667:6:18","nodeType":"VariableDeclaration","scope":3146,"src":"16654:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:18"},"scope":4019,"src":"16520:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3178,"nodeType":"Block","src":"17601:176:18","statements":[{"body":{"id":3174,"nodeType":"Block","src":"17658:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3165,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17676:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3167,"indexExpression":{"id":3166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"17686:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"IfStatement","src":"17672:68:18","trueBody":{"id":3172,"nodeType":"Block","src":"17695:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3153,"id":3171,"nodeType":"Return","src":"17713:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"17631:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3159,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"17635:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:18","memberName":"length","nodeType":"MemberAccess","src":"17635:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"initializationExpression":{"assignments":[3155],"declarations":[{"constant":false,"id":3155,"mutability":"mutable","name":"i","nameLocation":"17624:1:18","nodeType":"VariableDeclaration","scope":3175,"src":"17616:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3157,"initialValue":{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:18","subExpression":{"id":3162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"17655:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"17653:3:18"},"nodeType":"ForStatement","src":"17611:139:18"},{"expression":{"hexValue":"74727565","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3153,"id":3177,"nodeType":"Return","src":"17759:11:18"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"17452:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":3179,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:18","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:18","nodeType":"VariableDeclaration","scope":3179,"src":"17549:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3148,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:18"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"17595:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3151,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:18"},"scope":4019,"src":"17529:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3397,"nodeType":"Block","src":"18137:5124:18","statements":[{"id":3396,"nodeType":"UncheckedBlock","src":"18147:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"18241:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"nodeType":"IfStatement","src":"18237:53:18","trueBody":{"id":3192,"nodeType":"Block","src":"18249:41:18","statements":[{"expression":{"id":3190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"18274:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3191,"nodeType":"Return","src":"18267:8:18"}]}},{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"aa","nameLocation":"19225:2:18","nodeType":"VariableDeclaration","scope":3396,"src":"19217:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3197,"initialValue":{"id":3196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"19230:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:18"},{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"xn","nameLocation":"19253:2:18","nodeType":"VariableDeclaration","scope":3396,"src":"19245:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"hexValue":"31","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"19274:92:18","trueBody":{"id":3216,"nodeType":"Block","src":"19296:70:18","statements":[{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19314:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"nodeType":"ExpressionStatement","src":"19314:10:18"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19342:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"19342:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19383:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"19379:90:18","trueBody":{"id":3232,"nodeType":"Block","src":"19400:69:18","statements":[{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19418:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"nodeType":"ExpressionStatement","src":"19418:9:18"},{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19445:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"19445:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19486:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3249,"nodeType":"IfStatement","src":"19482:90:18","trueBody":{"id":3248,"nodeType":"Block","src":"19503:69:18","statements":[{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3240,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19521:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"19521:9:18"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19548:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"19548:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19589:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"19585:89:18","trueBody":{"id":3264,"nodeType":"Block","src":"19606:68:18","statements":[{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3256,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19624:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3259,"nodeType":"ExpressionStatement","src":"19624:9:18"},{"expression":{"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3260,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19651:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3263,"nodeType":"ExpressionStatement","src":"19651:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19691:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3281,"nodeType":"IfStatement","src":"19687:87:18","trueBody":{"id":3280,"nodeType":"Block","src":"19707:67:18","statements":[{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19725:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"19725:8:18"},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19751:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"19751:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19791:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3297,"nodeType":"IfStatement","src":"19787:87:18","trueBody":{"id":3296,"nodeType":"Block","src":"19807:67:18","statements":[{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3288,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19825:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"19825:8:18"},{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19851:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"19851:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"19891:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3309,"nodeType":"IfStatement","src":"19887:61:18","trueBody":{"id":3308,"nodeType":"Block","src":"19907:41:18","statements":[{"expression":{"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"19925:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3307,"nodeType":"ExpressionStatement","src":"19925:8:18"}]}},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"20368:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"20378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ExpressionStatement","src":"20368:18:18"},{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22273:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22279:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22284:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22288:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"22273:23:18"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3330,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22382:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22388:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22393:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3333,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22397:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"22382:23:18"},{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3341,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22493:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22499:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22504:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3344,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22508:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3351,"nodeType":"ExpressionStatement","src":"22493:23:18"},{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22602:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22608:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22613:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22617:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3362,"nodeType":"ExpressionStatement","src":"22602:23:18"},{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3363,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22712:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22718:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22723:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22727:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"22712:23:18"},{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3374,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22822:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22828:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22833:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"22837:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3384,"nodeType":"ExpressionStatement","src":"22822:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"23211:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"23232:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"23237:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"23241:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3386,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"23216:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"23216:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3395,"nodeType":"Return","src":"23204:40:18"}]}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"17783:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:18","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"a","nameLocation":"18102:1:18","nodeType":"VariableDeclaration","scope":3398,"src":"18094:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:18"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"18128:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:18"},"scope":4019,"src":"18080:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"23434:171:18","statements":[{"id":3430,"nodeType":"UncheckedBlock","src":"23444:155:18","statements":[{"assignments":[3410],"declarations":[{"constant":false,"id":3410,"mutability":"mutable","name":"result","nameLocation":"23476:6:18","nodeType":"VariableDeclaration","scope":3430,"src":"23468:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3414,"initialValue":{"arguments":[{"id":3412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"23490:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3411,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3398,3432],"referencedDeclaration":3398,"src":"23485:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"23513:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3419,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"23555:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":3418,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"23538:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2425_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"23568:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"23577:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"23586:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"23522:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"23522:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3429,"nodeType":"Return","src":"23506:82:18"}]}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"23267:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:18","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"a","nameLocation":"23380:1:18","nodeType":"VariableDeclaration","scope":3432,"src":"23372:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:18","nodeType":"VariableDeclaration","scope":3432,"src":"23383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":3403,"nodeType":"UserDefinedTypeName","pathNode":{"id":3402,"name":"Rounding","nameLocations":["23383:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"23383:8:18"},"referencedDeclaration":2425,"src":"23383:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:18"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3432,"src":"23425:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:18"},"scope":4019,"src":"23358:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"23796:981:18","statements":[{"assignments":[3441],"declarations":[{"constant":false,"id":3441,"mutability":"mutable","name":"result","nameLocation":"23814:6:18","nodeType":"VariableDeclaration","scope":3627,"src":"23806:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3443,"initialValue":{"hexValue":"30","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:18"},{"assignments":[3445],"declarations":[{"constant":false,"id":3445,"mutability":"mutable","name":"exp","nameLocation":"23842:3:18","nodeType":"VariableDeclaration","scope":3627,"src":"23834:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3446,"nodeType":"VariableDeclarationStatement","src":"23834:11:18"},{"id":3624,"nodeType":"UncheckedBlock","src":"23855:893:18","statements":[{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3447,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"23879:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"23907:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3449,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"23891:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"23891:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"23879:51:18"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"23944:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3464,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"23954:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"23944:13:18"},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"23971:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3468,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"23981:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"23971:13:18"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"23999:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24026:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3473,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24010:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24010:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"23999:49:18"},{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24062:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3488,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24072:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"nodeType":"ExpressionStatement","src":"24062:13:18"},{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24089:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3492,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24099:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3494,"nodeType":"ExpressionStatement","src":"24089:13:18"},{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3495,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24117:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24144:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3497,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24128:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24128:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3510,"nodeType":"ExpressionStatement","src":"24117:49:18"},{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24180:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3512,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24190:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3514,"nodeType":"ExpressionStatement","src":"24180:13:18"},{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24207:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3516,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24217:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3518,"nodeType":"ExpressionStatement","src":"24207:13:18"},{"expression":{"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24235:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24262:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3521,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24246:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24246:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3534,"nodeType":"ExpressionStatement","src":"24235:49:18"},{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24298:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3536,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24308:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3538,"nodeType":"ExpressionStatement","src":"24298:13:18"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24325:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3540,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24335:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"24325:13:18"},{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3543,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24353:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3545,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24363:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24363:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"24353:47:18"},{"expression":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24414:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3560,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24424:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3562,"nodeType":"ExpressionStatement","src":"24414:13:18"},{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24441:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3564,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24451:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"24441:13:18"},{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24469:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24495:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3569,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24479:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24479:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ExpressionStatement","src":"24469:47:18"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24530:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3584,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24540:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"24530:13:18"},{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24557:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3588,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24567:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3590,"nodeType":"ExpressionStatement","src":"24557:13:18"},{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3591,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24585:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24611:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3593,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24595:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24595:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"24585:47:18"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24646:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3608,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24656:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3610,"nodeType":"ExpressionStatement","src":"24646:13:18"},{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24673:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3612,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"24683:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"24673:13:18"},{"expression":{"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24701:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"24727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3616,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"24711:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"24711:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3623,"nodeType":"ExpressionStatement","src":"24701:36:18"}]},{"expression":{"id":3625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"24764:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3439,"id":3626,"nodeType":"Return","src":"24757:13:18"}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"23611:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:18","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"value","nameLocation":"23757:5:18","nodeType":"VariableDeclaration","scope":3628,"src":"23749:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:18"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"23787:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:18"},"scope":4019,"src":"23735:1042:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"25010:175:18","statements":[{"id":3660,"nodeType":"UncheckedBlock","src":"25020:159:18","statements":[{"assignments":[3640],"declarations":[{"constant":false,"id":3640,"mutability":"mutable","name":"result","nameLocation":"25052:6:18","nodeType":"VariableDeclaration","scope":3660,"src":"25044:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3644,"initialValue":{"arguments":[{"id":3642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"25066:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3641,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3628,3662],"referencedDeclaration":3628,"src":"25061:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"25093:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3649,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"25135:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":3648,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"25118:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2425_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"25153:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"25162:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3646,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"25102:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"25102:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3638,"id":3659,"nodeType":"Return","src":"25086:82:18"}]}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"24783:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:18","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"value","nameLocation":"24952:5:18","nodeType":"VariableDeclaration","scope":3662,"src":"24944:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:18","nodeType":"VariableDeclaration","scope":3662,"src":"24959:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":3633,"nodeType":"UserDefinedTypeName","pathNode":{"id":3632,"name":"Rounding","nameLocations":["24959:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"24959:8:18"},"referencedDeclaration":2425,"src":"24959:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:18"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"25001:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:18"},"scope":4019,"src":"24930:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3790,"nodeType":"Block","src":"25378:854:18","statements":[{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"result","nameLocation":"25396:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"25388:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:18"},{"id":3787,"nodeType":"UncheckedBlock","src":"25416:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25444:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"IfStatement","src":"25440:103:18","trueBody":{"id":3689,"nodeType":"Block","src":"25463:80:18","statements":[{"expression":{"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25481:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ExpressionStatement","src":"25481:17:18"},{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"25516:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"25516:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25560:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3707,"nodeType":"IfStatement","src":"25556:103:18","trueBody":{"id":3706,"nodeType":"Block","src":"25579:80:18","statements":[{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25597:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"25597:17:18"},{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"25632:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3705,"nodeType":"ExpressionStatement","src":"25632:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25676:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"25672:103:18","trueBody":{"id":3723,"nodeType":"Block","src":"25695:80:18","statements":[{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25713:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"25713:17:18"},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"25748:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ExpressionStatement","src":"25748:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25792:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3741,"nodeType":"IfStatement","src":"25788:100:18","trueBody":{"id":3740,"nodeType":"Block","src":"25810:78:18","statements":[{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25828:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ExpressionStatement","src":"25828:16:18"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"25862:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"25862:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25905:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"IfStatement","src":"25901:100:18","trueBody":{"id":3757,"nodeType":"Block","src":"25923:78:18","statements":[{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"25941:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3752,"nodeType":"ExpressionStatement","src":"25941:16:18"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"25975:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"25975:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"26018:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3775,"nodeType":"IfStatement","src":"26014:100:18","trueBody":{"id":3774,"nodeType":"Block","src":"26036:78:18","statements":[{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"26054:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"26054:16:18"},{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"26088:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"26088:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"26131:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3786,"nodeType":"IfStatement","src":"26127:66:18","trueBody":{"id":3785,"nodeType":"Block","src":"26149:44:18","statements":[{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"26167:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"26167:11:18"}]}}]},{"expression":{"id":3788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"26219:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3669,"id":3789,"nodeType":"Return","src":"26212:13:18"}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"25191:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:18","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"25339:5:18","nodeType":"VariableDeclaration","scope":3791,"src":"25331:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:18"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"25369:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:18"},"scope":4019,"src":"25316:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"26467:177:18","statements":[{"id":3823,"nodeType":"UncheckedBlock","src":"26477:161:18","statements":[{"assignments":[3803],"declarations":[{"constant":false,"id":3803,"mutability":"mutable","name":"result","nameLocation":"26509:6:18","nodeType":"VariableDeclaration","scope":3823,"src":"26501:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3807,"initialValue":{"arguments":[{"id":3805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"26524:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3791,3825],"referencedDeclaration":3791,"src":"26518:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"26551:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3812,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"26593:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":3811,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"26576:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2425_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"26612:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"26621:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3809,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"26560:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"26560:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3801,"id":3822,"nodeType":"Return","src":"26544:83:18"}]}]},"documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"26238:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:18","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"value","nameLocation":"26409:5:18","nodeType":"VariableDeclaration","scope":3825,"src":"26401:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:18","nodeType":"VariableDeclaration","scope":3825,"src":"26416:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"Rounding","nameLocations":["26416:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"26416:8:18"},"referencedDeclaration":2425,"src":"26416:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:18"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"26458:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:18"},"scope":4019,"src":"26386:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"26964:674:18","statements":[{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"result","nameLocation":"26982:6:18","nodeType":"VariableDeclaration","scope":3961,"src":"26974:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"initialValue":{"hexValue":"30","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:18"},{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:18","nodeType":"VariableDeclaration","scope":3961,"src":"27002:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3839,"nodeType":"VariableDeclarationStatement","src":"27002:12:18"},{"id":3958,"nodeType":"UncheckedBlock","src":"27024:585:18","statements":[{"expression":{"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3840,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27048:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27071:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3841,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27055:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27055:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3853,"nodeType":"ExpressionStatement","src":"27048:46:18"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27108:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27118:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ExpressionStatement","src":"27108:20:18"},{"expression":{"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27142:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27152:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3865,"nodeType":"ExpressionStatement","src":"27142:19:18"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3866,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27176:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27183:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27183:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"27176:45:18"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27235:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27245:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"27235:19:18"},{"expression":{"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27268:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27278:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3891,"nodeType":"ExpressionStatement","src":"27268:18:18"},{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3892,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27301:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27324:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3893,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27308:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27308:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"27301:45:18"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27360:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27370:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"27360:19:18"},{"expression":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27393:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27403:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3917,"nodeType":"ExpressionStatement","src":"27393:18:18"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27426:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27449:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27433:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27433:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"27426:45:18"},{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27485:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27495:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"27485:19:18"},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27518:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"27528:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3943,"nodeType":"ExpressionStatement","src":"27518:18:18"},{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"27577:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3945,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27561:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27561:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"nodeType":"ExpressionStatement","src":"27551:47:18"}]},{"expression":{"id":3959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"27625:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3832,"id":3960,"nodeType":"Return","src":"27618:13:18"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"26650:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:18","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"value","nameLocation":"26925:5:18","nodeType":"VariableDeclaration","scope":3962,"src":"26917:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:18"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"26955:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:18"},"scope":4019,"src":"26901:737:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"27875:184:18","statements":[{"id":3997,"nodeType":"UncheckedBlock","src":"27885:168:18","statements":[{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"result","nameLocation":"27917:6:18","nodeType":"VariableDeclaration","scope":3997,"src":"27909:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3978,"initialValue":{"arguments":[{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"27933:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3975,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3962,3999],"referencedDeclaration":3962,"src":"27926:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"27960:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3983,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"28002:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":3982,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"27985:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2425_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"28021:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"28036:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3980,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"27969:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"27969:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3972,"id":3996,"nodeType":"Return","src":"27953:89:18"}]}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"27644:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:18","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"value","nameLocation":"27817:5:18","nodeType":"VariableDeclaration","scope":3999,"src":"27809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:18","nodeType":"VariableDeclaration","scope":3999,"src":"27824:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":3967,"nodeType":"UserDefinedTypeName","pathNode":{"id":3966,"name":"Rounding","nameLocations":["27824:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"27824:8:18"},"referencedDeclaration":2425,"src":"27824:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:18"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"27866:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:18"},"scope":4019,"src":"27793:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4017,"nodeType":"Block","src":"28257:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4010,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"28280:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4008,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:18","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4007,"id":4016,"nodeType":"Return","src":"28267:31:18"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"28065:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:18","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:18","nodeType":"VariableDeclaration","scope":4018,"src":"28209:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"},"typeName":{"id":4002,"nodeType":"UserDefinedTypeName","pathNode":{"id":4001,"name":"Rounding","nameLocations":["28209:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"28209:8:18"},"referencedDeclaration":2425,"src":"28209:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2425","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:18"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4018,"src":"28251:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4005,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:18"},"scope":4019,"src":"28183:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4020,"src":"281:28026:18","usedErrors":[],"usedEvents":[]}],"src":"103:28205:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5784]},"id":5785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4021,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5784,"linearizedBaseContracts":[5784],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4023,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4029,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":4029,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4024,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":4029,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4034,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":4034,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4041,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":4041,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4036,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":4041,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4038,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4046,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":4046,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":4073,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4056,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4055,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4067,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":4066,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4061,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4065,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":4070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4068,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4053,"id":4072,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":4074,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4051,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":5784,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4101,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4084,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4095,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":4094,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4089,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4093,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4096,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4081,"id":4100,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":4102,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4102,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4079,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":5784,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4112,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4111,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4123,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":4122,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4117,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4121,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4124,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4109,"id":4128,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":4130,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4107,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":5784,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4140,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":4150,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4145,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4149,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":4154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4152,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4137,"id":4156,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":4158,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4135,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":5784,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4185,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4168,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":4178,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4177,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4180,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4165,"id":4184,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":4186,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4186,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4163,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":5784,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4196,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":4206,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4201,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4205,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4208,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4193,"id":4212,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":4187,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":4214,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4191,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":5784,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4224,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":4234,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4229,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4233,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4236,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4221,"id":4240,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":4242,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4219,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":5784,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4252,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":4262,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4257,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4261,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4264,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4249,"id":4268,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":4270,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4247,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":5784,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4280,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":4290,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4285,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4289,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4292,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4277,"id":4296,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":4298,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4275,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":5784,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4308,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4319,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":4318,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4313,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4317,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4320,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4305,"id":4324,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":4326,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4326,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4303,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":5784,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4353,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4336,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4347,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":4346,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4341,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4345,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4348,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4333,"id":4352,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":4354,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4331,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":5784,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4364,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":4374,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4369,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4373,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4376,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4361,"id":4380,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":4382,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4359,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":5784,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4392,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4403,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":4402,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4401,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4404,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4389,"id":4408,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":4410,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4387,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":5784,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4420,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":4430,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4429,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4432,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4417,"id":4436,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":4438,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4415,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":5784,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4465,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4448,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":4458,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4457,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4460,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4445,"id":4464,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":4466,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4466,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4443,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":5784,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4476,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":4486,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4485,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4488,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4473,"id":4492,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":4494,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4471,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":5784,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4504,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4515,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":4514,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4513,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4516,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4501,"id":4520,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":4522,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4499,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":5784,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4532,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":4542,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4541,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4544,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4529,"id":4548,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":4550,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4527,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":5784,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4577,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4560,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":4570,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4569,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4572,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4557,"id":4576,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":4578,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4555,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":5784,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4588,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":4598,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4597,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4600,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4585,"id":4604,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":4606,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4606,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4583,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":5784,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4616,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":4626,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4625,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4628,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4613,"id":4632,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":4634,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4611,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":5784,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4644,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":4654,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4653,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4656,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4641,"id":4660,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":4662,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4639,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":5784,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4672,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":4682,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4681,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4684,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4669,"id":4688,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":4690,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4667,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":5784,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4700,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":4710,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4709,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4712,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4697,"id":4716,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":4718,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4695,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":5784,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4728,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4739,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":4738,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4737,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4740,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4725,"id":4744,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":4746,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4723,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":5784,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4756,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":4766,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4765,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4768,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4753,"id":4772,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":4774,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4751,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":5784,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4784,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":4794,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4793,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4796,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4781,"id":4800,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":4802,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4779,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":5784,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4812,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":4822,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4821,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4824,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4809,"id":4828,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":4830,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4807,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":5784,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4840,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":4850,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4849,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4852,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4837,"id":4856,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":4858,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4835,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":5784,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4868,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":4878,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4877,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4880,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":4886,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4863,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":5784,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4896,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4907,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":4906,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4905,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4908,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4893,"id":4912,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":4914,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4891,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":5784,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4936,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4930,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":4929,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4925,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4928,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4921,"id":4935,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":4937,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4916,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4937,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":5784,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4962,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4946,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4951,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4961,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":4960,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4955,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4959,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":4938,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4963,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":4963,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4939,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":4963,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4942,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":5784,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4972,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4977,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4987,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":4986,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4981,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4985,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":4964,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":4989,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4965,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":4989,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4968,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":5784,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5014,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4998,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5003,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":5012,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5007,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5011,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5015,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":5015,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4991,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":5015,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4994,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":5784,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5024,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5029,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5039,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":5038,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5033,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5037,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":5016,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":5041,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5017,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":5041,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5020,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":5784,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5066,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5050,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5055,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5065,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":5064,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5059,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5063,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":5067,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5043,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":5067,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5046,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":5784,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5092,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5076,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5081,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5091,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":5090,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5085,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5089,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":5068,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":5093,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5069,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":5093,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5072,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":5784,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5118,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5102,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5107,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5117,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":5116,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5111,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5115,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":5094,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":5119,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5095,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":5119,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5098,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":5784,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5128,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5133,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5143,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":5142,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5137,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5141,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":5145,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5121,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":5145,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5124,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":5784,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5170,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5154,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5159,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":5168,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5163,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5167,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":5171,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5147,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":5171,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5150,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":5784,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5196,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5180,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5185,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":5194,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5189,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5193,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5197,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":5197,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5173,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":5197,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5176,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":5784,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5222,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5206,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5211,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5221,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":5220,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5215,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5219,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":5223,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5199,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":5223,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5202,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":5784,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5248,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5232,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5237,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5247,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":5246,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5241,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5245,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":5224,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5249,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":5249,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5225,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":5249,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5228,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":5784,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5258,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5263,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5273,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":5272,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5267,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5271,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":5250,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":5275,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5251,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5255,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":5275,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5254,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":5784,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5300,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5284,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5289,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":5298,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5293,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5297,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5301,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":5301,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5277,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":5301,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5280,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":5784,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5310,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5315,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5325,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":5324,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5319,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5323,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":5327,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5303,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":5327,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5306,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":5784,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5352,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5336,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5341,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5351,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":5350,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5345,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5349,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5353,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":5353,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5329,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":5353,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5332,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":5784,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5378,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5362,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5367,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5377,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":5376,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5371,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5375,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":5354,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5379,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":5379,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5355,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":5379,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5358,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":5784,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5388,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5393,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5403,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":5402,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5397,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5401,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":5380,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":5383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":5405,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5381,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":5405,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5384,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":5784,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5430,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5414,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5419,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5429,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":5428,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5423,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5427,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5431,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":5431,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5407,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":5431,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5410,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":5784,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5456,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5440,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5445,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5455,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":5454,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5449,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5453,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":5432,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5457,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":5457,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5433,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":5457,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5436,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":5784,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5466,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5471,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5481,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":5480,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5475,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5479,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":5458,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":5483,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5459,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":5483,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5462,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":5784,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5508,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5492,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5497,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5507,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":5506,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5501,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5505,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5509,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":5509,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5485,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":5509,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5488,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":5784,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5518,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5523,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":5532,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5527,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5531,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":5535,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5511,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":5535,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5514,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":5784,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5560,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5544,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5549,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":5558,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5557,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5561,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":5561,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5537,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":5561,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5540,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":5784,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5586,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5570,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5575,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":5584,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5579,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5583,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5587,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":5587,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5563,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":5587,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5566,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":5784,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5612,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5596,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5601,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5611,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":5610,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5605,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5609,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":5588,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5613,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":5613,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5589,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":5613,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5592,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":5784,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5622,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5627,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5637,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":5636,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5631,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5635,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":5614,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":5639,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5615,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":5639,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5618,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":5784,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5664,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5648,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5653,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":5662,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5661,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":5665,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5641,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":5665,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5644,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":5784,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5690,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5674,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5679,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5689,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":5688,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5683,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5687,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":5666,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5691,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":5691,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5667,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":5691,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5670,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":5784,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5716,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5700,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5705,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5715,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":5714,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5709,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5713,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":5692,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5717,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":5717,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5693,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":5717,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5696,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":5784,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5726,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5731,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5741,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":5740,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5735,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5739,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":5743,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5719,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5723,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":5743,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5722,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":5784,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5755,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5766,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":5765,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5761,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5764,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5767,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5750,"id":5771,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":5744,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":5773,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5773,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5748,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":5784,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nativeSrc":"34888:46:19","nodeType":"YulBlock","src":"34888:46:19","statements":[{"nativeSrc":"34902:22:19","nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:19","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:19","nodeType":"YulIdentifier","src":"34914:6:19"},"nativeSrc":"34914:9:19","nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:19","nodeType":"YulIdentifier","src":"34907:6:19"},"nativeSrc":"34907:17:19","nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nativeSrc":"34902:1:19","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5776,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":5779,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":5781,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":5783,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5775,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":5783,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5778,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":5784,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5785,"src":"769:34173:19","usedErrors":[4029,4034,4041,4046],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5784],"SignedMath":[5928]},"id":5929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5786,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5929,"sourceUnit":5785,"src":"135:40:20","symbolAliases":[{"foreign":{"id":5787,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5928,"linearizedBaseContracts":[5928],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5818,"nodeType":"Block","src":"746:215:20","statements":[{"id":5817,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5810,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5808,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5784_$","typeString":"type(library SafeCast)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5783,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5806,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5800,"id":5816,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":5790,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":5819,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5791,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5794,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":5819,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5793,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5796,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":5819,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5795,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5798,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":5928,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5824,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5829,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5828,"id":5836,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":5838,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5821,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":5838,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5823,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5838,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5826,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":5928,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5856,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5848,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5847,"id":5855,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":5857,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":5857,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5840,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5843,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":5857,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5842,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5857,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5845,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":5928,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5900,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[5868],"declarations":[{"constant":false,"id":5868,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":5900,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5881,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5883,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5893,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5866,"id":5899,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":5858,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5901,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":5863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":5901,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5859,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5862,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":5901,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5861,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5901,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5864,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":5928,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"1843:767:20","statements":[{"id":5925,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[5910],"declarations":[{"constant":false,"id":5910,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":5925,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5909,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5914,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5918,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5921,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5908,"id":5924,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":5927,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5903,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":5928,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5929,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/contract1.sol":{"ast":{"absolutePath":"contracts/contract1.sol","exportedSymbols":{"ContextUpgradeable":[7917],"ERC1967Utils":[493],"IERC1822Proxiable":[62],"Initializable":[6439],"OurUpgradeableNFT1":[5969],"OwnableUpgradeable":[6185],"UUPSUpgradeable":[6621]},"id":5970,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5930,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":5931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5970,"sourceUnit":6186,"src":"58:88:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5970,"sourceUnit":6440,"src":"147:88:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5970,"sourceUnit":6622,"src":"236:90:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5934,"name":"Initializable","nameLocations":["363:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"363:13:21"},"id":5935,"nodeType":"InheritanceSpecifier","src":"363:13:21"},{"baseName":{"id":5936,"name":"UUPSUpgradeable","nameLocations":["382:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":6621,"src":"382:15:21"},"id":5937,"nodeType":"InheritanceSpecifier","src":"382:15:21"},{"baseName":{"id":5938,"name":"OwnableUpgradeable","nameLocations":["403:18:21"],"nodeType":"IdentifierPath","referencedDeclaration":6185,"src":"403:18:21"},"id":5939,"nodeType":"InheritanceSpecifier","src":"403:18:21"}],"canonicalName":"OurUpgradeableNFT1","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5969,"linearizedBaseContracts":[5969,6185,7917,6621,62,6439],"name":"OurUpgradeableNFT1","nameLocation":"337:18:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ef690cc0","id":5941,"mutability":"mutable","name":"greeting","nameLocation":"442:8:21","nodeType":"VariableDeclaration","scope":5969,"src":"428:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5940,"name":"string","nodeType":"ElementaryTypeName","src":"428:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":5958,"nodeType":"Block","src":"523:97:21","statements":[{"expression":{"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"533:8:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5949,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"544:9:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"533:20:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5951,"nodeType":"ExpressionStatement","src":"533:20:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5952,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"563:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"563:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5954,"nodeType":"ExpressionStatement","src":"563:24:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5955,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"597:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"597:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5957,"nodeType":"ExpressionStatement","src":"597:16:21"}]},"functionSelector":"f62d1888","id":5959,"implemented":true,"kind":"function","modifiers":[{"id":5946,"kind":"modifierInvocation","modifierName":{"id":5945,"name":"initializer","nameLocations":["511:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":6293,"src":"511:11:21"},"nodeType":"ModifierInvocation","src":"511:11:21"}],"name":"initialize","nameLocation":"466:10:21","nodeType":"FunctionDefinition","parameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"_greeting","nameLocation":"493:9:21","nodeType":"VariableDeclaration","scope":5959,"src":"477:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5942,"name":"string","nodeType":"ElementaryTypeName","src":"477:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"476:27:21"},"returnParameters":{"id":5947,"nodeType":"ParameterList","parameters":[],"src":"523:0:21"},"scope":5969,"src":"457:163:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6575],"body":{"id":5967,"nodeType":"Block","src":"736:2:21","statements":[]},"id":5968,"implemented":true,"kind":"function","modifiers":[{"id":5965,"kind":"modifierInvocation","modifierName":{"id":5964,"name":"onlyOwner","nameLocations":["722:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":6130,"src":"722:9:21"},"nodeType":"ModifierInvocation","src":"722:9:21"}],"name":"_authorizeUpgrade","nameLocation":"635:17:21","nodeType":"FunctionDefinition","overrides":{"id":5963,"nodeType":"OverrideSpecifier","overrides":[],"src":"705:8:21"},"parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"newImplementation","nameLocation":"661:17:21","nodeType":"VariableDeclaration","scope":5968,"src":"653:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5960,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"652:27:21"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[],"src":"736:0:21"},"scope":5969,"src":"626:112:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5970,"src":"328:412:21","usedErrors":[219,232,753,1016,6202,6205,6466,6471],"usedEvents":[11,6071,6210]}],"src":"32:708:21"},"id":21},"contracts/contract2.sol":{"ast":{"absolutePath":"contracts/contract2.sol","exportedSymbols":{"ContextUpgradeable":[7917],"CountersUpgradeable":[7991],"ERC1967Utils":[493],"ERC721URIStorageUpgradeable":[7871],"ERC721Upgradeable":[7701],"IERC165":[2413],"IERC1822Proxiable":[62],"IERC4906":[48],"Initializable":[6439],"OurUpgradeableNFT1":[5969],"OurUpgradeableNFT2":[6054],"OwnableUpgradeable":[6185],"Strings":[2401],"UUPSUpgradeable":[6621]},"id":6055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5971,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol","file":"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol","id":5972,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6055,"sourceUnit":7872,"src":"61:114:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":5973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6055,"sourceUnit":7992,"src":"177:88:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/contract1.sol","file":"./contract1.sol","id":5974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6055,"sourceUnit":5970,"src":"269:25:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5975,"name":"OurUpgradeableNFT1","nameLocations":["329:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":5969,"src":"329:18:22"},"id":5976,"nodeType":"InheritanceSpecifier","src":"329:18:22"},{"baseName":{"id":5977,"name":"ERC721URIStorageUpgradeable","nameLocations":["349:27:22"],"nodeType":"IdentifierPath","referencedDeclaration":7871,"src":"349:27:22"},"id":5978,"nodeType":"InheritanceSpecifier","src":"349:27:22"}],"canonicalName":"OurUpgradeableNFT2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6054,"linearizedBaseContracts":[6054,7871,7701,152,666,48,620,8031,2413,5969,6185,7917,6621,62,6439],"name":"OurUpgradeableNFT2","nameLocation":"307:18:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5982,"libraryName":{"id":5979,"name":"CountersUpgradeable","nameLocations":["390:19:22"],"nodeType":"IdentifierPath","referencedDeclaration":7991,"src":"390:19:22"},"nodeType":"UsingForDirective","src":"384:58:22","typeName":{"id":5981,"nodeType":"UserDefinedTypeName","pathNode":{"id":5980,"name":"CountersUpgradeable.Counter","nameLocations":["414:19:22","434:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"414:27:22"},"referencedDeclaration":7923,"src":"414:27:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":5985,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"486:15:22","nodeType":"VariableDeclaration","scope":6054,"src":"450:51:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":5984,"nodeType":"UserDefinedTypeName","pathNode":{"id":5983,"name":"CountersUpgradeable.Counter","nameLocations":["450:19:22","470:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"450:27:22"},"referencedDeclaration":7923,"src":"450:27:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"body":{"id":5999,"nodeType":"Block","src":"558:96:22","statements":[{"expression":{"arguments":[{"hexValue":"4f75725570677261646561626c654e4654","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"583:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_66566f5eefe9869f32975e3909c3561805c1ac4ed2c52efc5c542bccb7a5c516","typeString":"literal_string \"OurUpgradeableNFT\""},"value":"OurUpgradeableNFT"},{"hexValue":"4f554e","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"604:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4c069b120e858f5bdfca5ebb4d2cd760e31bcbc1fafb0e7feaec2399bc4ab33","typeString":"literal_string \"OUN\""},"value":"OUN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_66566f5eefe9869f32975e3909c3561805c1ac4ed2c52efc5c542bccb7a5c516","typeString":"literal_string \"OurUpgradeableNFT\""},{"typeIdentifier":"t_stringliteral_e4c069b120e858f5bdfca5ebb4d2cd760e31bcbc1fafb0e7feaec2399bc4ab33","typeString":"literal_string \"OUN\""}],"id":5991,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"569:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"ExpressionStatement","src":"569:41:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5996,"name":"__ERC721URIStorage_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"621:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"621:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5998,"nodeType":"ExpressionStatement","src":"621:25:22"}]},"functionSelector":"2de23337","id":6000,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"32","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"555:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"id":5989,"kind":"modifierInvocation","modifierName":{"id":5987,"name":"reinitializer","nameLocations":["541:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":6340,"src":"541:13:22"},"nodeType":"ModifierInvocation","src":"541:16:22"}],"name":"reInitialize","nameLocation":"519:12:22","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[],"src":"531:2:22"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[],"src":"558:0:22"},"scope":6054,"src":"510:144:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6007,"nodeType":"Block","src":"721:50:22","statements":[{"expression":{"hexValue":"4e6577205570677261646561626c6520576f726c6421","id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"739:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab14eb252b41d751c84b53f8ad421b232f1685744c41aff8ff2294391a953e53","typeString":"literal_string \"New Upgradeable World!\""},"value":"New Upgradeable World!"},"functionReturnParameters":6004,"id":6006,"nodeType":"Return","src":"732:31:22"}]},"functionSelector":"d7b518a8","id":6008,"implemented":true,"kind":"function","modifiers":[],"name":"greetingNew","nameLocation":"671:11:22","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[],"src":"682:2:22"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6008,"src":"706:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6002,"name":"string","nodeType":"ElementaryTypeName","src":"706:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"705:15:22"},"scope":6054,"src":"662:109:22","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6038,"nodeType":"Block","src":"853:170:22","statements":[{"assignments":[6018],"declarations":[{"constant":false,"id":6018,"mutability":"mutable","name":"tokenId","nameLocation":"872:7:22","nodeType":"VariableDeclaration","scope":6038,"src":"864:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6022,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6019,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"882:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":6020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"898:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":7935,"src":"882:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$7923_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$7923_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"882:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"864:43:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6023,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"918:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":6025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"934:9:22","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":7949,"src":"918:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$7923_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$7923_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6027,"nodeType":"ExpressionStatement","src":"918:27:22"},{"expression":{"arguments":[{"id":6029,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"966:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6030,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"970:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6028,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[7363,7393],"referencedDeclaration":7363,"src":"956:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6032,"nodeType":"ExpressionStatement","src":"956:22:22"},{"expression":{"arguments":[{"id":6034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"1002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6035,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"1011:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6033,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"989:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6037,"nodeType":"ExpressionStatement","src":"989:26:22"}]},"functionSelector":"d204c45e","id":6039,"implemented":true,"kind":"function","modifiers":[{"id":6015,"kind":"modifierInvocation","modifierName":{"id":6014,"name":"onlyOwner","nameLocations":["843:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":6130,"src":"843:9:22"},"nodeType":"ModifierInvocation","src":"843:9:22"}],"name":"safeMint","nameLocation":"788:8:22","nodeType":"FunctionDefinition","parameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"to","nameLocation":"805:2:22","nodeType":"VariableDeclaration","scope":6039,"src":"797:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6009,"name":"address","nodeType":"ElementaryTypeName","src":"797:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"uri","nameLocation":"823:3:22","nodeType":"VariableDeclaration","scope":6039,"src":"809:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6011,"name":"string","nodeType":"ElementaryTypeName","src":"809:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"796:31:22"},"returnParameters":{"id":6016,"nodeType":"ParameterList","parameters":[],"src":"853:0:22"},"scope":6054,"src":"779:244:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[7843],"body":{"id":6052,"nodeType":"Block","src":"1222:49:22","statements":[{"expression":{"arguments":[{"id":6049,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"1255:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6047,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1240:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_OurUpgradeableNFT2_$6054_$","typeString":"type(contract super OurUpgradeableNFT2)"}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1246:8:22","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":7843,"src":"1240:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6046,"id":6051,"nodeType":"Return","src":"1233:30:22"}]},"functionSelector":"c87b56dd","id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1110:8:22","nodeType":"FunctionDefinition","overrides":{"id":6043,"nodeType":"OverrideSpecifier","overrides":[],"src":"1175:8:22"},"parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"tokenId","nameLocation":"1127:7:22","nodeType":"VariableDeclaration","scope":6053,"src":"1119:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1118:17:22"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"1202:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6044,"name":"string","nodeType":"ElementaryTypeName","src":"1202:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1201:15:22"},"scope":6054,"src":"1101:170:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6055,"src":"298:978:22","usedErrors":[110,115,124,129,134,141,146,151,219,232,753,1016,6202,6205,6466,6471],"usedEvents":[11,40,47,519,528,537,6071,6210]}],"src":"33:1243:22"},"id":22},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[7917],"Initializable":[6439],"OwnableUpgradeable":[6185]},"id":6186,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6056,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:23"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":6057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6186,"sourceUnit":7918,"src":"58:41:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":6058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6186,"sourceUnit":6440,"src":"100:42:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6060,"name":"Initializable","nameLocations":["678:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"678:13:23"},"id":6061,"nodeType":"InheritanceSpecifier","src":"678:13:23"},{"baseName":{"id":6062,"name":"ContextUpgradeable","nameLocations":["693:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":7917,"src":"693:18:23"},"id":6063,"nodeType":"InheritanceSpecifier","src":"693:18:23"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6059,"nodeType":"StructuredDocumentation","src":"143:494:23","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":6185,"linearizedBaseContracts":[6185,7917,6439],"name":"OwnableUpgradeable","nameLocation":"656:18:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6065,"mutability":"mutable","name":"_owner","nameLocation":"734:6:23","nodeType":"VariableDeclaration","scope":6185,"src":"718:22:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6064,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":6071,"name":"OwnershipTransferred","nameLocation":"753:20:23","nodeType":"EventDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"790:13:23","nodeType":"VariableDeclaration","scope":6071,"src":"774:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6066,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6069,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"821:8:23","nodeType":"VariableDeclaration","scope":6071,"src":"805:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6068,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"773:57:23"},"src":"747:84:23"},{"body":{"id":6083,"nodeType":"Block","src":"980:79:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6077,"name":"__Context_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"990:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"ExpressionStatement","src":"990:26:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6080,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"1026:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6082,"nodeType":"ExpressionStatement","src":"1026:26:23"}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"837:91:23","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":6084,"implemented":true,"kind":"function","modifiers":[{"id":6075,"kind":"modifierInvocation","modifierName":{"id":6074,"name":"initializer","nameLocations":["968:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":6293,"src":"968:11:23"},"nodeType":"ModifierInvocation","src":"968:11:23"}],"name":"__Ownable_init","nameLocation":"942:14:23","nodeType":"FunctionDefinition","parameters":{"id":6073,"nodeType":"ParameterList","parameters":[],"src":"956:2:23"},"returnParameters":{"id":6076,"nodeType":"ParameterList","parameters":[],"src":"980:0:23"},"scope":6185,"src":"933:126:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6106,"nodeType":"Block","src":"1122:135:23","statements":[{"assignments":[6090],"declarations":[{"constant":false,"id":6090,"mutability":"mutable","name":"msgSender","nameLocation":"1140:9:23","nodeType":"VariableDeclaration","scope":6106,"src":"1132:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6089,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6093,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6091,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"1152:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1152:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1132:32:23"},{"expression":{"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6094,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1174:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6095,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"1183:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1174:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6097,"nodeType":"ExpressionStatement","src":"1174:18:23"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1228:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6099,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:23","typeDescriptions":{}}},"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6103,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"1240:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6098,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"1207:20:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1207:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6105,"nodeType":"EmitStatement","src":"1202:48:23"}]},"id":6107,"implemented":true,"kind":"function","modifiers":[{"id":6087,"kind":"modifierInvocation","modifierName":{"id":6086,"name":"initializer","nameLocations":["1110:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":6293,"src":"1110:11:23"},"nodeType":"ModifierInvocation","src":"1110:11:23"}],"name":"__Ownable_init_unchained","nameLocation":"1074:24:23","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[],"src":"1098:2:23"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[],"src":"1122:0:23"},"scope":6185,"src":"1065:192:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6115,"nodeType":"Block","src":"1388:30:23","statements":[{"expression":{"id":6113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"1405:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6112,"id":6114,"nodeType":"Return","src":"1398:13:23"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"1263:65:23","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":6116,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1342:5:23","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[],"src":"1347:2:23"},"returnParameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6116,"src":"1379:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6110,"name":"address","nodeType":"ElementaryTypeName","src":"1379:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1378:9:23"},"scope":6185,"src":"1333:85:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":6129,"nodeType":"Block","src":"1527:96:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6120,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"1545:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6122,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"1556:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1556:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1545:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1570:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":6119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1537:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6127,"nodeType":"ExpressionStatement","src":"1537:68:23"},{"id":6128,"nodeType":"PlaceholderStatement","src":"1615:1:23"}]},"documentation":{"id":6117,"nodeType":"StructuredDocumentation","src":"1424:77:23","text":" @dev Throws if called by any account other than the owner."},"id":6130,"name":"onlyOwner","nameLocation":"1515:9:23","nodeType":"ModifierDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[],"src":"1524:2:23"},"src":"1506:117:23","virtual":false,"visibility":"internal"},{"body":{"id":6151,"nodeType":"Block","src":"2019:91:23","statements":[{"eventCall":{"arguments":[{"id":6137,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"2055:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2071:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2063:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6138,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:23","typeDescriptions":{}}},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6136,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"2034:20:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2034:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6143,"nodeType":"EmitStatement","src":"2029:45:23"},{"expression":{"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6144,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"2084:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2101:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2093:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6145,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:23","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2084:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6150,"nodeType":"ExpressionStatement","src":"2084:19:23"}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"1629:331:23","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":6152,"implemented":true,"kind":"function","modifiers":[{"id":6134,"kind":"modifierInvocation","modifierName":{"id":6133,"name":"onlyOwner","nameLocations":["2009:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6130,"src":"2009:9:23"},"nodeType":"ModifierInvocation","src":"2009:9:23"}],"name":"renounceOwnership","nameLocation":"1974:17:23","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[],"src":"1991:2:23"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[],"src":"2019:0:23"},"scope":6185,"src":"1965:145:23","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6179,"nodeType":"Block","src":"2329:170:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"2347:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2367:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2359:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6162,"name":"address","nodeType":"ElementaryTypeName","src":"2359:7:23","typeDescriptions":{}}},"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2347:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2371:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":6160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2339:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2339:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"ExpressionStatement","src":"2339:73:23"},{"eventCall":{"arguments":[{"id":6171,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"2448:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6172,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"2456:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6170,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"2427:20:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"EmitStatement","src":"2422:43:23"},{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"2475:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6176,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"2484:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6178,"nodeType":"ExpressionStatement","src":"2475:17:23"}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"2116:138:23","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":6180,"implemented":true,"kind":"function","modifiers":[{"id":6158,"kind":"modifierInvocation","modifierName":{"id":6157,"name":"onlyOwner","nameLocations":["2319:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6130,"src":"2319:9:23"},"nodeType":"ModifierInvocation","src":"2319:9:23"}],"name":"transferOwnership","nameLocation":"2268:17:23","nodeType":"FunctionDefinition","parameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"newOwner","nameLocation":"2294:8:23","nodeType":"VariableDeclaration","scope":6180,"src":"2286:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6154,"name":"address","nodeType":"ElementaryTypeName","src":"2286:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2285:18:23"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[],"src":"2329:0:23"},"scope":6185,"src":"2259:240:23","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"id":6184,"mutability":"mutable","name":"__gap","nameLocation":"2524:5:23","nodeType":"VariableDeclaration","scope":6185,"src":"2504:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2504:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6183,"length":{"hexValue":"3439","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2512:2:23","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2504:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":6186,"src":"638:1894:23","usedErrors":[6202,6205],"usedEvents":[6071,6210]}],"src":"33:2500:23"},"id":23},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[6439]},"id":6440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6187,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:24"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"139:2209:24","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":6439,"linearizedBaseContracts":[6439],"name":"Initializable","nameLocation":"2367:13:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":6189,"nodeType":"StructuredDocumentation","src":"2387:293:24","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":6196,"members":[{"constant":false,"id":6192,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:24","nodeType":"VariableDeclaration","scope":6196,"src":"2813:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6191,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:24","nodeType":"VariableDeclaration","scope":6196,"src":"2950:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6194,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:24","nodeType":"StructDefinition","scope":6439,"src":"2685:290:24","visibility":"public"},{"constant":true,"id":6199,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:24","nodeType":"VariableDeclaration","scope":6439,"src":"3098:115:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:24","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"3220:60:24","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":6202,"name":"InvalidInitialization","nameLocation":"3291:21:24","nodeType":"ErrorDefinition","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[],"src":"3312:2:24"},"src":"3285:30:24"},{"documentation":{"id":6203,"nodeType":"StructuredDocumentation","src":"3321:57:24","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":6205,"name":"NotInitializing","nameLocation":"3389:15:24","nodeType":"ErrorDefinition","parameters":{"id":6204,"nodeType":"ParameterList","parameters":[],"src":"3404:2:24"},"src":"3383:24:24"},{"anonymous":false,"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"3413:90:24","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":6210,"name":"Initialized","nameLocation":"3514:11:24","nodeType":"EventDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:24","nodeType":"VariableDeclaration","scope":6210,"src":"3526:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6207,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:24"},"src":"3508:34:24"},{"body":{"id":6292,"nodeType":"Block","src":"4092:1081:24","statements":[{"assignments":[6215],"declarations":[{"constant":false,"id":6215,"mutability":"mutable","name":"$","nameLocation":"4187:1:24","nodeType":"VariableDeclaration","scope":6292,"src":"4158:30:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":6214,"nodeType":"UserDefinedTypeName","pathNode":{"id":6213,"name":"InitializableStorage","nameLocations":["4158:20:24"],"nodeType":"IdentifierPath","referencedDeclaration":6196,"src":"4158:20:24"},"referencedDeclaration":6196,"src":"4158:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":6218,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6216,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"4191:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$6196_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:24"},{"assignments":[6220],"declarations":[{"constant":false,"id":6220,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:24","nodeType":"VariableDeclaration","scope":6292,"src":"4279:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6219,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6224,"initialValue":{"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:24","subExpression":{"expression":{"id":6221,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4302:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"4302:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:24"},{"assignments":[6226],"declarations":[{"constant":false,"id":6226,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:24","nodeType":"VariableDeclaration","scope":6292,"src":"4327:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6225,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":6229,"initialValue":{"expression":{"id":6227,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4348:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"4348:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:24"},{"assignments":[6231],"declarations":[{"constant":false,"id":6231,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:24","nodeType":"VariableDeclaration","scope":6292,"src":"4706:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6230,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6237,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6232,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"4726:11:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6235,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"4746:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:24"},{"assignments":[6239],"declarations":[{"constant":false,"id":6239,"mutability":"mutable","name":"construction","nameLocation":"4775:12:24","nodeType":"VariableDeclaration","scope":6292,"src":"4770:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6238,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6252,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"4790:11:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":6245,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$6439","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$6439","typeString":"contract Initializable"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6243,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:24","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:24","memberName":"code","nodeType":"MemberAccess","src":"4810:18:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:24","memberName":"length","nodeType":"MemberAccess","src":"4810:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:24","subExpression":{"id":6253,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"4856:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:24","subExpression":{"id":6255,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"4873:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6262,"nodeType":"IfStatement","src":"4851:91:24","trueBody":{"id":6261,"nodeType":"Block","src":"4887:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6258,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"4908:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6260,"nodeType":"RevertStatement","src":"4901:30:24"}]}},{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6263,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4951:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"4951:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6268,"nodeType":"ExpressionStatement","src":"4951:18:24"},{"condition":{"id":6269,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"4983:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6277,"nodeType":"IfStatement","src":"4979:67:24","trueBody":{"id":6276,"nodeType":"Block","src":"4999:47:24","statements":[{"expression":{"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6270,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"5013:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"5013:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"ExpressionStatement","src":"5013:22:24"}]}},{"id":6278,"nodeType":"PlaceholderStatement","src":"5055:1:24"},{"condition":{"id":6279,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"5070:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6291,"nodeType":"IfStatement","src":"5066:101:24","trueBody":{"id":6290,"nodeType":"Block","src":"5086:81:24","statements":[{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6280,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"5100:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"5100:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6285,"nodeType":"ExpressionStatement","src":"5100:23:24"},{"eventCall":{"arguments":[{"hexValue":"31","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6286,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"5142:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6289,"nodeType":"EmitStatement","src":"5137:19:24"}]}}]},"documentation":{"id":6211,"nodeType":"StructuredDocumentation","src":"3548:516:24","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":6293,"name":"initializer","nameLocation":"4078:11:24","nodeType":"ModifierDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[],"src":"4089:2:24"},"src":"4069:1104:24","virtual":false,"visibility":"internal"},{"body":{"id":6339,"nodeType":"Block","src":"6291:392:24","statements":[{"assignments":[6300],"declarations":[{"constant":false,"id":6300,"mutability":"mutable","name":"$","nameLocation":"6386:1:24","nodeType":"VariableDeclaration","scope":6339,"src":"6357:30:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":6299,"nodeType":"UserDefinedTypeName","pathNode":{"id":6298,"name":"InitializableStorage","nameLocations":["6357:20:24"],"nodeType":"IdentifierPath","referencedDeclaration":6196,"src":"6357:20:24"},"referencedDeclaration":6196,"src":"6357:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":6303,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6301,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"6390:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$6196_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6304,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"6431:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"6431:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6306,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"6450:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"6450:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6308,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"6468:7:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6315,"nodeType":"IfStatement","src":"6427:105:24","trueBody":{"id":6314,"nodeType":"Block","src":"6477:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6311,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"6498:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6313,"nodeType":"RevertStatement","src":"6491:30:24"}]}},{"expression":{"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6316,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"6541:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"6541:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6319,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"6558:7:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6321,"nodeType":"ExpressionStatement","src":"6541:24:24"},{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6322,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"6575:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"6575:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"ExpressionStatement","src":"6575:22:24"},{"id":6328,"nodeType":"PlaceholderStatement","src":"6607:1:24"},{"expression":{"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6329,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"6618:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"6618:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6334,"nodeType":"ExpressionStatement","src":"6618:23:24"},{"eventCall":{"arguments":[{"id":6336,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"6668:7:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6335,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"6656:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6338,"nodeType":"EmitStatement","src":"6651:25:24"}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"5179:1068:24","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":6340,"name":"reinitializer","nameLocation":"6261:13:24","nodeType":"ModifierDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"version","nameLocation":"6282:7:24","nodeType":"VariableDeclaration","scope":6340,"src":"6275:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6295,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:24"},"src":"6252:431:24","virtual":false,"visibility":"internal"},{"body":{"id":6347,"nodeType":"Block","src":"6921:48:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6343,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"6931:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6345,"nodeType":"ExpressionStatement","src":"6931:20:24"},{"id":6346,"nodeType":"PlaceholderStatement","src":"6961:1:24"}]},"documentation":{"id":6341,"nodeType":"StructuredDocumentation","src":"6689:199:24","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":6348,"name":"onlyInitializing","nameLocation":"6902:16:24","nodeType":"ModifierDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[],"src":"6918:2:24"},"src":"6893:76:24","virtual":false,"visibility":"internal"},{"body":{"id":6360,"nodeType":"Block","src":"7136:89:24","statements":[{"condition":{"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6352,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"7151:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"7146:73:24","trueBody":{"id":6358,"nodeType":"Block","src":"7170:49:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6355,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"7191:15:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6357,"nodeType":"RevertStatement","src":"7184:24:24"}]}}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"6975:104:24","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":6361,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:24","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[],"src":"7111:2:24"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[],"src":"7136:0:24"},"scope":6439,"src":"7084:141:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"7760:373:24","statements":[{"assignments":[6367],"declarations":[{"constant":false,"id":6367,"mutability":"mutable","name":"$","nameLocation":"7855:1:24","nodeType":"VariableDeclaration","scope":6406,"src":"7826:30:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":6366,"nodeType":"UserDefinedTypeName","pathNode":{"id":6365,"name":"InitializableStorage","nameLocations":["7826:20:24"],"nodeType":"IdentifierPath","referencedDeclaration":6196,"src":"7826:20:24"},"referencedDeclaration":6196,"src":"7826:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":6370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6368,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"7859:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$6196_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:24"},{"condition":{"expression":{"id":6371,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7900:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"7900:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"IfStatement","src":"7896:76:24","trueBody":{"id":6376,"nodeType":"Block","src":"7917:55:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6373,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"7938:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6375,"nodeType":"RevertStatement","src":"7931:30:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6378,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7985:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"7985:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6381,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:24","memberName":"max","nodeType":"MemberAccess","src":"8003:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6405,"nodeType":"IfStatement","src":"7981:146:24","trueBody":{"id":6404,"nodeType":"Block","src":"8021:106:24","statements":[{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6386,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"8035:1:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"8035:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:24","memberName":"max","nodeType":"MemberAccess","src":"8052:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6395,"nodeType":"ExpressionStatement","src":"8035:33:24"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6398,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:24","memberName":"max","nodeType":"MemberAccess","src":"8099:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6396,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"8087:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6403,"nodeType":"EmitStatement","src":"8082:34:24"}]}}]},"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"7231:475:24","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:24","nodeType":"FunctionDefinition","parameters":{"id":6363,"nodeType":"ParameterList","parameters":[],"src":"7740:2:24"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[],"src":"7760:0:24"},"scope":6439,"src":"7711:422:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6417,"nodeType":"Block","src":"8308:63:24","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6413,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"8325:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$6196_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:24","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"8325:39:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6412,"id":6416,"nodeType":"Return","src":"8318:46:24"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"8139:99:24","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:24","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[],"src":"8274:2:24"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6418,"src":"8300:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6410,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:24"},"scope":6439,"src":"8243:128:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6428,"nodeType":"Block","src":"8543:64:24","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6424,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"8560:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$6196_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":6426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:24","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":6195,"src":"8560:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6423,"id":6427,"nodeType":"Return","src":"8553:47:24"}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"8377:105:24","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":6429,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:24","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[],"src":"8511:2:24"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"8537:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6421,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:24"},"scope":6439,"src":"8487:120:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"8827:80:24","statements":[{"AST":{"nativeSrc":"8846:55:24","nodeType":"YulBlock","src":"8846:55:24","statements":[{"nativeSrc":"8860:31:24","nodeType":"YulAssignment","src":"8860:31:24","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:24","nodeType":"YulIdentifier","src":"8870:21:24"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:24","nodeType":"YulIdentifier","src":"8860:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6434,"isOffset":false,"isSlot":true,"src":"8860:6:24","suffix":"slot","valueSize":1},{"declaration":6199,"isOffset":false,"isSlot":false,"src":"8870:21:24","valueSize":1}],"id":6436,"nodeType":"InlineAssembly","src":"8837:64:24"}]},"documentation":{"id":6430,"nodeType":"StructuredDocumentation","src":"8613:67:24","text":" @dev Returns a pointer to the storage namespace."},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:24","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[],"src":"8770:2:24"},"returnParameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"$","nameLocation":"8824:1:24","nodeType":"VariableDeclaration","scope":6438,"src":"8795:30:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":6433,"nodeType":"UserDefinedTypeName","pathNode":{"id":6432,"name":"InitializableStorage","nameLocations":["8795:20:24"],"nodeType":"IdentifierPath","referencedDeclaration":6196,"src":"8795:20:24"},"referencedDeclaration":6196,"src":"8795:20:24","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$6196_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:24"},"scope":6439,"src":"8737:170:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6440,"src":"2349:6560:24","usedErrors":[6202,6205],"usedEvents":[6210]}],"src":"113:8797:24"},"id":24},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[493],"IERC1822Proxiable":[62],"Initializable":[6439],"UUPSUpgradeable":[6621]},"id":6622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6441,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:25"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":6443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6622,"sourceUnit":63,"src":"141:88:25","symbolAliases":[{"foreign":{"id":6442,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"149:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":6445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6622,"sourceUnit":494,"src":"230:84:25","symbolAliases":[{"foreign":{"id":6444,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"238:12:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":6447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6622,"sourceUnit":6440,"src":"315:50:25","symbolAliases":[{"foreign":{"id":6446,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"323:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6449,"name":"Initializable","nameLocations":["1023:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"1023:13:25"},"id":6450,"nodeType":"InheritanceSpecifier","src":"1023:13:25"},{"baseName":{"id":6451,"name":"IERC1822Proxiable","nameLocations":["1038:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"1038:17:25"},"id":6452,"nodeType":"InheritanceSpecifier","src":"1038:17:25"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6448,"nodeType":"StructuredDocumentation","src":"367:618:25","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":6621,"linearizedBaseContracts":[6621,62,6439],"name":"UUPSUpgradeable","nameLocation":"1004:15:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"1062:61:25","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":6459,"mutability":"immutable","name":"__self","nameLocation":"1154:6:25","nodeType":"VariableDeclaration","scope":6621,"src":"1128:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":6457,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}],"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6455,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:25","typeDescriptions":{}}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"1183:631:25","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":6463,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:25","nodeType":"VariableDeclaration","scope":6621,"src":"1819:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6461,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":6464,"nodeType":"StructuredDocumentation","src":"1884:65:25","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":6466,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:25","nodeType":"ErrorDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[],"src":"1987:2:25"},"src":"1954:36:25"},{"documentation":{"id":6467,"nodeType":"StructuredDocumentation","src":"1996:68:25","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":6471,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:25","nodeType":"ErrorDefinition","parameters":{"id":6470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"slot","nameLocation":"2112:4:25","nodeType":"VariableDeclaration","scope":6471,"src":"2104:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:25"},"src":"2069:49:25"},{"body":{"id":6478,"nodeType":"Block","src":"2645:41:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6474,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"2655:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6476,"nodeType":"ExpressionStatement","src":"2655:13:25"},{"id":6477,"nodeType":"PlaceholderStatement","src":"2678:1:25"}]},"documentation":{"id":6472,"nodeType":"StructuredDocumentation","src":"2124:495:25","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":6479,"name":"onlyProxy","nameLocation":"2633:9:25","nodeType":"ModifierDefinition","parameters":{"id":6473,"nodeType":"ParameterList","parameters":[],"src":"2642:2:25"},"src":"2624:62:25","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"2916:48:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6482,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"2926:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6484,"nodeType":"ExpressionStatement","src":"2926:20:25"},{"id":6485,"nodeType":"PlaceholderStatement","src":"2956:1:25"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"2692:195:25","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":6487,"name":"notDelegated","nameLocation":"2901:12:25","nodeType":"ModifierDefinition","parameters":{"id":6481,"nodeType":"ParameterList","parameters":[],"src":"2913:2:25"},"src":"2892:72:25","virtual":false,"visibility":"internal"},{"body":{"id":6492,"nodeType":"Block","src":"3030:7:25","statements":[]},"id":6493,"implemented":true,"kind":"function","modifiers":[{"id":6490,"kind":"modifierInvocation","modifierName":{"id":6489,"name":"onlyInitializing","nameLocations":["3013:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"3013:16:25"},"nodeType":"ModifierInvocation","src":"3013:16:25"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:25","nodeType":"FunctionDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[],"src":"3001:2:25"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[],"src":"3030:0:25"},"scope":6621,"src":"2970:67:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6498,"nodeType":"Block","src":"3113:7:25","statements":[]},"id":6499,"implemented":true,"kind":"function","modifiers":[{"id":6496,"kind":"modifierInvocation","modifierName":{"id":6495,"name":"onlyInitializing","nameLocations":["3096:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"3096:16:25"},"nodeType":"ModifierInvocation","src":"3096:16:25"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:25","nodeType":"FunctionDefinition","parameters":{"id":6494,"nodeType":"ParameterList","parameters":[],"src":"3084:2:25"},"returnParameters":{"id":6497,"nodeType":"ParameterList","parameters":[],"src":"3113:0:25"},"scope":6621,"src":"3043:77:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[61],"body":{"id":6510,"nodeType":"Block","src":"3786:56:25","statements":[{"expression":{"expression":{"id":6507,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3803:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$493_$","typeString":"type(library ERC1967Utils)"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:25","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":214,"src":"3803:32:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6506,"id":6509,"nodeType":"Return","src":"3796:39:25"}]},"documentation":{"id":6500,"nodeType":"StructuredDocumentation","src":"3125:578:25","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":6511,"implemented":true,"kind":"function","modifiers":[{"id":6503,"kind":"modifierInvocation","modifierName":{"id":6502,"name":"notDelegated","nameLocations":["3755:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6487,"src":"3755:12:25"},"nodeType":"ModifierInvocation","src":"3755:12:25"}],"name":"proxiableUUID","nameLocation":"3717:13:25","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[],"src":"3730:2:25"},"returnParameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6511,"src":"3777:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:25"},"scope":6621,"src":"3708:134:25","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":6530,"nodeType":"Block","src":"4266:109:25","statements":[{"expression":{"arguments":[{"id":6522,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"4294:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6521,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"4276:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6524,"nodeType":"ExpressionStatement","src":"4276:36:25"},{"expression":{"arguments":[{"id":6526,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"4344:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6527,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"4363:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6525,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"4322:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6529,"nodeType":"ExpressionStatement","src":"4322:46:25"}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"3848:308:25","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":6531,"implemented":true,"kind":"function","modifiers":[{"id":6519,"kind":"modifierInvocation","modifierName":{"id":6518,"name":"onlyProxy","nameLocations":["4256:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"4256:9:25"},"nodeType":"ModifierInvocation","src":"4256:9:25"}],"name":"upgradeToAndCall","nameLocation":"4170:16:25","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:25","nodeType":"VariableDeclaration","scope":6531,"src":"4187:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6513,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6516,"mutability":"mutable","name":"data","nameLocation":"4227:4:25","nodeType":"VariableDeclaration","scope":6531,"src":"4214:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:25"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[],"src":"4266:0:25"},"scope":6621,"src":"4161:214:25","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":6552,"nodeType":"Block","src":"4648:267:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6537,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4683:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}],"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4675:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6535,"name":"address","nodeType":"ElementaryTypeName","src":"4675:7:25","typeDescriptions":{}}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6539,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"4692:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4675:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6541,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"4753:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$493_$","typeString":"type(library ERC1967Utils)"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:17:25","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":245,"src":"4753:30:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6544,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"4789:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4753:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4675:120:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6551,"nodeType":"IfStatement","src":"4658:251:25","trueBody":{"id":6550,"nodeType":"Block","src":"4848:61:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6547,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"4869:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6549,"nodeType":"RevertStatement","src":"4862:36:25"}]}}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"4381:217:25","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."},"id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4612:11:25","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[],"src":"4623:2:25"},"returnParameters":{"id":6534,"nodeType":"ParameterList","parameters":[],"src":"4648:0:25"},"scope":6621,"src":"4603:312:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":6568,"nodeType":"Block","src":"5084:161:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5106:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$6621","typeString":"contract UUPSUpgradeable"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6557,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:25","typeDescriptions":{}}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6561,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"5115:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5098:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6567,"nodeType":"IfStatement","src":"5094:145:25","trueBody":{"id":6566,"nodeType":"Block","src":"5123:116:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6563,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5199:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6565,"nodeType":"RevertStatement","src":"5192:36:25"}]}}]},"documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"4921:106:25","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5041:18:25","nodeType":"FunctionDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[],"src":"5059:2:25"},"returnParameters":{"id":6556,"nodeType":"ParameterList","parameters":[],"src":"5084:0:25"},"scope":6621,"src":"5032:213:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"5251:372:25","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":6575,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5637:17:25","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"newImplementation","nameLocation":"5663:17:25","nodeType":"VariableDeclaration","scope":6575,"src":"5655:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5654:27:25"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[],"src":"5698:0:25"},"scope":6621,"src":"5628:71:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"6142:453:25","statements":[{"clauses":[{"block":{"id":6608,"nodeType":"Block","src":"6232:212:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"6250:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6592,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6258:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$493_$","typeString":"type(library ERC1967Utils)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6271:19:25","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":214,"src":"6258:32:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6250:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6600,"nodeType":"IfStatement","src":"6246:120:25","trueBody":{"id":6599,"nodeType":"Block","src":"6292:74:25","statements":[{"errorCall":{"arguments":[{"id":6596,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"6346:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6595,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"6317:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6598,"nodeType":"RevertStatement","src":"6310:41:25"}]}},{"expression":{"arguments":[{"id":6604,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"6409:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6605,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"6428:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6379:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$493_$","typeString":"type(library ERC1967Utils)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:16:25","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":308,"src":"6379:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6607,"nodeType":"ExpressionStatement","src":"6379:54:25"}]},"errorName":"","id":6609,"nodeType":"TryCatchClause","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"slot","nameLocation":"6226:4:25","nodeType":"VariableDeclaration","scope":6609,"src":"6218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:14:25"},"src":"6209:235:25"},{"block":{"id":6616,"nodeType":"Block","src":"6451:138:25","statements":[{"errorCall":{"arguments":[{"id":6613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"6560:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6518:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$493_$","typeString":"type(library ERC1967Utils)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:28:25","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":219,"src":"6518:41:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6518:60:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6615,"nodeType":"RevertStatement","src":"6511:67:25"}]},"errorName":"","id":6617,"nodeType":"TryCatchClause","src":"6445:144:25"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6584,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"6174:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6583,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"6156:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$62_$","typeString":"type(contract IERC1822Proxiable)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$62","typeString":"contract IERC1822Proxiable"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:13:25","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":61,"src":"6156:50:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:52:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6618,"nodeType":"TryStatement","src":"6152:437:25"}]},"documentation":{"id":6576,"nodeType":"StructuredDocumentation","src":"5705:347:25","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6066:21:25","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"newImplementation","nameLocation":"6096:17:25","nodeType":"VariableDeclaration","scope":6620,"src":"6088:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"data","nameLocation":"6128:4:25","nodeType":"VariableDeclaration","scope":6620,"src":"6115:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6579,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6087:46:25"},"returnParameters":{"id":6582,"nodeType":"ParameterList","parameters":[],"src":"6142:0:25"},"scope":6621,"src":"6057:538:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":6622,"src":"986:5611:25","usedErrors":[219,232,753,1016,6202,6205,6466,6471],"usedEvents":[11,6210]}],"src":"115:6483:25"},"id":25},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[7917],"ERC165Upgradeable":[8031],"ERC721Upgradeable":[7701],"ERC721Utils":[743],"IERC165":[2413],"IERC721":[620],"IERC721Errors":[152],"IERC721Metadata":[666],"Initializable":[6439],"Strings":[2401]},"id":7702,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6623,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":6625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":621,"src":"133:73:26","symbolAliases":[{"foreign":{"id":6624,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"141:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":6627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":667,"src":"207:100:26","symbolAliases":[{"foreign":{"id":6626,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"215:15:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":6629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":744,"src":"308:87:26","symbolAliases":[{"foreign":{"id":6628,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"316:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":6631,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":7918,"src":"396:70:26","symbolAliases":[{"foreign":{"id":6630,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"404:18:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":2402,"src":"467:66:26","symbolAliases":[{"foreign":{"id":6632,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"475:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":6635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":2414,"src":"534:80:26","symbolAliases":[{"foreign":{"id":6634,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"542:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":6637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":8032,"src":"615:82:26","symbolAliases":[{"foreign":{"id":6636,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"623:17:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":6639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":200,"src":"698:84:26","symbolAliases":[{"foreign":{"id":6638,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"706:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":6641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7702,"sourceUnit":6440,"src":"783:66:26","symbolAliases":[{"foreign":{"id":6640,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"791:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6643,"name":"Initializable","nameLocations":["1138:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"1138:13:26"},"id":6644,"nodeType":"InheritanceSpecifier","src":"1138:13:26"},{"baseName":{"id":6645,"name":"ContextUpgradeable","nameLocations":["1153:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":7917,"src":"1153:18:26"},"id":6646,"nodeType":"InheritanceSpecifier","src":"1153:18:26"},{"baseName":{"id":6647,"name":"ERC165Upgradeable","nameLocations":["1173:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":8031,"src":"1173:17:26"},"id":6648,"nodeType":"InheritanceSpecifier","src":"1173:17:26"},{"baseName":{"id":6649,"name":"IERC721","nameLocations":["1192:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":620,"src":"1192:7:26"},"id":6650,"nodeType":"InheritanceSpecifier","src":"1192:7:26"},{"baseName":{"id":6651,"name":"IERC721Metadata","nameLocations":["1201:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1201:15:26"},"id":6652,"nodeType":"InheritanceSpecifier","src":"1201:15:26"},{"baseName":{"id":6653,"name":"IERC721Errors","nameLocations":["1218:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":152,"src":"1218:13:26"},"id":6654,"nodeType":"InheritanceSpecifier","src":"1218:13:26"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"851:247:26","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":7701,"linearizedBaseContracts":[7701,152,666,620,8031,2413,7917,6439],"name":"ERC721Upgradeable","nameLocation":"1117:17:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6657,"libraryName":{"id":6655,"name":"Strings","nameLocations":["1244:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"1244:7:26"},"nodeType":"UsingForDirective","src":"1238:26:26","typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"1270:64:26","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":6681,"members":[{"constant":false,"id":6660,"mutability":"mutable","name":"_name","nameLocation":"1399:5:26","nodeType":"VariableDeclaration","scope":6681,"src":"1392:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6659,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"_symbol","nameLocation":"1446:7:26","nodeType":"VariableDeclaration","scope":6681,"src":"1439:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6661,"name":"string","nodeType":"ElementaryTypeName","src":"1439:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"_owners","nameLocation":"1500:7:26","nodeType":"VariableDeclaration","scope":6681,"src":"1464:43:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":6665,"keyName":"tokenId","keyNameLocation":"1480:7:26","keyType":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:35:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6664,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":6670,"mutability":"mutable","name":"_balances","nameLocation":"1552:9:26","nodeType":"VariableDeclaration","scope":6681,"src":"1518:43:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6669,"keyName":"owner","keyNameLocation":"1534:5:26","keyType":{"id":6667,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1518:33:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":6674,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1608:15:26","nodeType":"VariableDeclaration","scope":6681,"src":"1572:51:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":6673,"keyName":"tokenId","keyNameLocation":"1588:7:26","keyType":{"id":6671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1572:35:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6672,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":6680,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1694:18:26","nodeType":"VariableDeclaration","scope":6681,"src":"1634:78:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":6679,"keyName":"owner","keyNameLocation":"1650:5:26","keyType":{"id":6675,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1634:59:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6678,"keyName":"operator","keyNameLocation":"1675:8:26","keyType":{"id":6676,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:33:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6677,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1346:13:26","nodeType":"StructDefinition","scope":7701,"src":"1339:380:26","visibility":"public"},{"constant":true,"id":6684,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1860:21:26","nodeType":"VariableDeclaration","scope":7701,"src":"1835:115:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1835:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:66:26","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":6691,"nodeType":"Block","src":"2033:80:26","statements":[{"AST":{"nativeSrc":"2052:55:26","nodeType":"YulBlock","src":"2052:55:26","statements":[{"nativeSrc":"2066:31:26","nodeType":"YulAssignment","src":"2066:31:26","value":{"name":"ERC721StorageLocation","nativeSrc":"2076:21:26","nodeType":"YulIdentifier","src":"2076:21:26"},"variableNames":[{"name":"$.slot","nativeSrc":"2066:6:26","nodeType":"YulIdentifier","src":"2066:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6688,"isOffset":false,"isSlot":true,"src":"2066:6:26","suffix":"slot","valueSize":1},{"declaration":6684,"isOffset":false,"isSlot":false,"src":"2076:21:26","valueSize":1}],"id":6690,"nodeType":"InlineAssembly","src":"2043:64:26"}]},"id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1966:17:26","nodeType":"FunctionDefinition","parameters":{"id":6685,"nodeType":"ParameterList","parameters":[],"src":"1983:2:26"},"returnParameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"$","nameLocation":"2030:1:26","nodeType":"VariableDeclaration","scope":6692,"src":"2008:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6687,"nodeType":"UserDefinedTypeName","pathNode":{"id":6686,"name":"ERC721Storage","nameLocations":["2008:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"2008:13:26"},"referencedDeclaration":6681,"src":"2008:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2007:25:26"},"scope":7701,"src":"1957:156:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6707,"nodeType":"Block","src":"2325:56:26","statements":[{"expression":{"arguments":[{"id":6703,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"2359:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6704,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"2366:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6702,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"2335:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6706,"nodeType":"ExpressionStatement","src":"2335:39:26"}]},"documentation":{"id":6693,"nodeType":"StructuredDocumentation","src":"2119:108:26","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":6708,"implemented":true,"kind":"function","modifiers":[{"id":6700,"kind":"modifierInvocation","modifierName":{"id":6699,"name":"onlyInitializing","nameLocations":["2308:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"2308:16:26"},"nodeType":"ModifierInvocation","src":"2308:16:26"}],"name":"__ERC721_init","nameLocation":"2241:13:26","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"name_","nameLocation":"2269:5:26","nodeType":"VariableDeclaration","scope":6708,"src":"2255:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6694,"name":"string","nodeType":"ElementaryTypeName","src":"2255:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"symbol_","nameLocation":"2290:7:26","nodeType":"VariableDeclaration","scope":6708,"src":"2276:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6696,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2254:44:26"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[],"src":"2325:0:26"},"scope":7701,"src":"2232:149:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6735,"nodeType":"Block","src":"2490:116:26","statements":[{"assignments":[6719],"declarations":[{"constant":false,"id":6719,"mutability":"mutable","name":"$","nameLocation":"2522:1:26","nodeType":"VariableDeclaration","scope":6735,"src":"2500:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6718,"nodeType":"UserDefinedTypeName","pathNode":{"id":6717,"name":"ERC721Storage","nameLocations":["2500:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"2500:13:26"},"referencedDeclaration":6681,"src":"2500:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":6722,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6720,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"2526:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2500:45:26"},{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6723,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"2555:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2557:5:26","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":6660,"src":"2555:7:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6726,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"2565:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2555:15:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6728,"nodeType":"ExpressionStatement","src":"2555:15:26"},{"expression":{"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6729,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"2580:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2582:7:26","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":6662,"src":"2580:9:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6732,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"2592:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2580:19:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6734,"nodeType":"ExpressionStatement","src":"2580:19:26"}]},"id":6736,"implemented":true,"kind":"function","modifiers":[{"id":6715,"kind":"modifierInvocation","modifierName":{"id":6714,"name":"onlyInitializing","nameLocations":["2473:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"2473:16:26"},"nodeType":"ModifierInvocation","src":"2473:16:26"}],"name":"__ERC721_init_unchained","nameLocation":"2396:23:26","nodeType":"FunctionDefinition","parameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"name_","nameLocation":"2434:5:26","nodeType":"VariableDeclaration","scope":6736,"src":"2420:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6709,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"symbol_","nameLocation":"2455:7:26","nodeType":"VariableDeclaration","scope":6736,"src":"2441:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6711,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2419:44:26"},"returnParameters":{"id":6716,"nodeType":"ParameterList","parameters":[],"src":"2490:0:26"},"scope":7701,"src":"2387:219:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2412,8030],"body":{"id":6766,"nodeType":"Block","src":"2792:192:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2821:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6749,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"2841:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$620_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$620_$","typeString":"type(contract IERC721)"}],"id":6748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2836:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$620","typeString":"type(contract IERC721)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2850:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"2836:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2821:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2877:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6755,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"2897:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$666_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$666_$","typeString":"type(contract IERC721Metadata)"}],"id":6754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2892:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$666","typeString":"type(contract IERC721Metadata)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2914:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"2892:33:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2877:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:104:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":6762,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2965:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6760,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2941:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$7701_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2947:17:26","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":8030,"src":"2941:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2821:156:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6746,"id":6765,"nodeType":"Return","src":"2802:175:26"}]},"documentation":{"id":6737,"nodeType":"StructuredDocumentation","src":"2612:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2682:17:26","nodeType":"FunctionDefinition","overrides":{"id":6743,"nodeType":"OverrideSpecifier","overrides":[{"id":6741,"name":"ERC165Upgradeable","nameLocations":["2749:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":8031,"src":"2749:17:26"},{"id":6742,"name":"IERC165","nameLocations":["2768:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"2768:7:26"}],"src":"2740:36:26"},"parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"interfaceId","nameLocation":"2707:11:26","nodeType":"VariableDeclaration","scope":6767,"src":"2700:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6738,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2700:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2699:20:26"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"2786:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6744,"name":"bool","nodeType":"ElementaryTypeName","src":"2786:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2785:6:26"},"scope":7701,"src":"2673:311:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":6801,"nodeType":"Block","src":"3115:193:26","statements":[{"assignments":[6777],"declarations":[{"constant":false,"id":6777,"mutability":"mutable","name":"$","nameLocation":"3147:1:26","nodeType":"VariableDeclaration","scope":6801,"src":"3125:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6776,"nodeType":"UserDefinedTypeName","pathNode":{"id":6775,"name":"ERC721Storage","nameLocations":["3125:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"3125:13:26"},"referencedDeclaration":6681,"src":"3125:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":6780,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6778,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"3151:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3151:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3125:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6781,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3184:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3193:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6782,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:26","typeDescriptions":{}}},"id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3193:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3184:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"3180:87:26","trueBody":{"id":6794,"nodeType":"Block","src":"3205:62:26","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3245:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6788,"name":"address","nodeType":"ElementaryTypeName","src":"3245:7:26","typeDescriptions":{}}},"id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6787,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3226:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6793,"nodeType":"RevertStatement","src":"3219:37:26"}]}},{"expression":{"baseExpression":{"expression":{"id":6796,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"3283:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3285:9:26","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"3283:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6799,"indexExpression":{"id":6798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3295:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3283:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6774,"id":6800,"nodeType":"Return","src":"3276:25:26"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"2990:48:26","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3052:9:26","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"owner","nameLocation":"3070:5:26","nodeType":"VariableDeclaration","scope":6802,"src":"3062:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6769,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3061:15:26"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6802,"src":"3106:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3105:9:26"},"scope":7701,"src":"3043:265:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[553],"body":{"id":6814,"nodeType":"Block","src":"3437:46:26","statements":[{"expression":{"arguments":[{"id":6811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"3468:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"3454:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3454:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6809,"id":6813,"nodeType":"Return","src":"3447:29:26"}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"3314:46:26","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":6815,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3374:7:26","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"tokenId","nameLocation":"3390:7:26","nodeType":"VariableDeclaration","scope":6815,"src":"3382:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3382:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3381:17:26"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6815,"src":"3428:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6807,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:9:26"},"scope":7701,"src":"3365:118:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":6830,"nodeType":"Block","src":"3605:86:26","statements":[{"assignments":[6823],"declarations":[{"constant":false,"id":6823,"mutability":"mutable","name":"$","nameLocation":"3637:1:26","nodeType":"VariableDeclaration","scope":6830,"src":"3615:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6822,"nodeType":"UserDefinedTypeName","pathNode":{"id":6821,"name":"ERC721Storage","nameLocations":["3615:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"3615:13:26"},"referencedDeclaration":6681,"src":"3615:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":6826,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6824,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"3641:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3615:45:26"},{"expression":{"expression":{"id":6827,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"3677:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3679:5:26","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":6660,"src":"3677:7:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6820,"id":6829,"nodeType":"Return","src":"3670:14:26"}]},"documentation":{"id":6816,"nodeType":"StructuredDocumentation","src":"3489:51:26","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3554:4:26","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[],"src":"3558:2:26"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6831,"src":"3590:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6818,"name":"string","nodeType":"ElementaryTypeName","src":"3590:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3589:15:26"},"scope":7701,"src":"3545:146:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[657],"body":{"id":6846,"nodeType":"Block","src":"3817:88:26","statements":[{"assignments":[6839],"declarations":[{"constant":false,"id":6839,"mutability":"mutable","name":"$","nameLocation":"3849:1:26","nodeType":"VariableDeclaration","scope":6846,"src":"3827:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6838,"nodeType":"UserDefinedTypeName","pathNode":{"id":6837,"name":"ERC721Storage","nameLocations":["3827:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"3827:13:26"},"referencedDeclaration":6681,"src":"3827:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":6842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6840,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"3853:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3827:45:26"},{"expression":{"expression":{"id":6843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"3889:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3891:7:26","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":6662,"src":"3889:9:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6836,"id":6845,"nodeType":"Return","src":"3882:16:26"}]},"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"3697:53:26","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3764:6:26","nodeType":"FunctionDefinition","parameters":{"id":6833,"nodeType":"ParameterList","parameters":[],"src":"3770:2:26"},"returnParameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6847,"src":"3802:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6834,"name":"string","nodeType":"ElementaryTypeName","src":"3802:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3801:15:26"},"scope":7701,"src":"3755:150:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[665],"body":{"id":6882,"nodeType":"Block","src":"4050:176:26","statements":[{"expression":{"arguments":[{"id":6856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"4074:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6855,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"4060:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6858,"nodeType":"ExpressionStatement","src":"4060:22:26"},{"assignments":[6860],"declarations":[{"constant":false,"id":6860,"mutability":"mutable","name":"baseURI","nameLocation":"4107:7:26","nodeType":"VariableDeclaration","scope":6882,"src":"4093:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6859,"name":"string","nodeType":"ElementaryTypeName","src":"4093:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6861,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"4117:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4093:34:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6866,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"4150:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6864,"name":"bytes","nodeType":"ElementaryTypeName","src":"4144:5:26","typeDescriptions":{}}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:6:26","memberName":"length","nodeType":"MemberAccess","src":"4144:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4144:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4217:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4144:75:26","trueExpression":{"arguments":[{"id":6874,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"4186:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"4195:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4203:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"4195:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4172:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6871,"name":"string","nodeType":"ElementaryTypeName","src":"4172:6:26","typeDescriptions":{}}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4179:6:26","memberName":"concat","nodeType":"MemberAccess","src":"4172:13:26","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6854,"id":6881,"nodeType":"Return","src":"4137:82:26"}]},"documentation":{"id":6848,"nodeType":"StructuredDocumentation","src":"3911:55:26","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":6883,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3980:8:26","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"tokenId","nameLocation":"3997:7:26","nodeType":"VariableDeclaration","scope":6883,"src":"3989:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3989:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3988:17:26"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6883,"src":"4035:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6852,"name":"string","nodeType":"ElementaryTypeName","src":"4035:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:15:26"},"scope":7701,"src":"3971:255:26","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":6891,"nodeType":"Block","src":"4534:26:26","statements":[{"expression":{"hexValue":"","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4551:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":6888,"id":6890,"nodeType":"Return","src":"4544:9:26"}]},"documentation":{"id":6884,"nodeType":"StructuredDocumentation","src":"4232:231:26","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4477:8:26","nodeType":"FunctionDefinition","parameters":{"id":6885,"nodeType":"ParameterList","parameters":[],"src":"4485:2:26"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6892,"src":"4519:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6886,"name":"string","nodeType":"ElementaryTypeName","src":"4519:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4518:15:26"},"scope":7701,"src":"4468:92:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[593],"body":{"id":6907,"nodeType":"Block","src":"4678:52:26","statements":[{"expression":{"arguments":[{"id":6901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"4697:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"4701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6903,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"4710:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6900,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[7552,7626],"referencedDeclaration":7552,"src":"4688:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6906,"nodeType":"ExpressionStatement","src":"4688:35:26"}]},"documentation":{"id":6893,"nodeType":"StructuredDocumentation","src":"4566:46:26","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":6908,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4626:7:26","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"to","nameLocation":"4642:2:26","nodeType":"VariableDeclaration","scope":6908,"src":"4634:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6894,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6897,"mutability":"mutable","name":"tokenId","nameLocation":"4654:7:26","nodeType":"VariableDeclaration","scope":6908,"src":"4646:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"4646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:29:26"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[],"src":"4678:0:26"},"scope":7701,"src":"4617:113:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[609],"body":{"id":6924,"nodeType":"Block","src":"4867:78:26","statements":[{"expression":{"arguments":[{"id":6917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"4891:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6916,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"4877:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6919,"nodeType":"ExpressionStatement","src":"4877:22:26"},{"expression":{"arguments":[{"id":6921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"4930:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6920,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"4917:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6915,"id":6923,"nodeType":"Return","src":"4910:28:26"}]},"documentation":{"id":6909,"nodeType":"StructuredDocumentation","src":"4736:50:26","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":6925,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4800:11:26","nodeType":"FunctionDefinition","parameters":{"id":6912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6911,"mutability":"mutable","name":"tokenId","nameLocation":"4820:7:26","nodeType":"VariableDeclaration","scope":6925,"src":"4812:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6910,"name":"uint256","nodeType":"ElementaryTypeName","src":"4812:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:17:26"},"returnParameters":{"id":6915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6925,"src":"4858:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6913,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4857:9:26"},"scope":7701,"src":"4791:154:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[601],"body":{"id":6940,"nodeType":"Block","src":"5087:69:26","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6934,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"5116:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6936,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"5130:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6937,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"5140:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6933,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5097:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6939,"nodeType":"ExpressionStatement","src":"5097:52:26"}]},"documentation":{"id":6926,"nodeType":"StructuredDocumentation","src":"4951:56:26","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":6941,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5021:17:26","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"operator","nameLocation":"5047:8:26","nodeType":"VariableDeclaration","scope":6941,"src":"5039:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6927,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6930,"mutability":"mutable","name":"approved","nameLocation":"5062:8:26","nodeType":"VariableDeclaration","scope":6941,"src":"5057:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6929,"name":"bool","nodeType":"ElementaryTypeName","src":"5057:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5038:33:26"},"returnParameters":{"id":6932,"nodeType":"ParameterList","parameters":[],"src":"5087:0:26"},"scope":7701,"src":"5012:144:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[619],"body":{"id":6964,"nodeType":"Block","src":"5316:116:26","statements":[{"assignments":[6953],"declarations":[{"constant":false,"id":6953,"mutability":"mutable","name":"$","nameLocation":"5348:1:26","nodeType":"VariableDeclaration","scope":6964,"src":"5326:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":6952,"nodeType":"UserDefinedTypeName","pathNode":{"id":6951,"name":"ERC721Storage","nameLocations":["5326:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"5326:13:26"},"referencedDeclaration":6681,"src":"5326:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":6956,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6954,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"5352:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5352:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5326:45:26"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":6957,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"5388:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":6958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5390:18:26","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":6680,"src":"5388:20:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":6960,"indexExpression":{"id":6959,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"5409:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6962,"indexExpression":{"id":6961,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"5416:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6950,"id":6963,"nodeType":"Return","src":"5381:44:26"}]},"documentation":{"id":6942,"nodeType":"StructuredDocumentation","src":"5162:55:26","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":6965,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5231:16:26","nodeType":"FunctionDefinition","parameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6944,"mutability":"mutable","name":"owner","nameLocation":"5256:5:26","nodeType":"VariableDeclaration","scope":6965,"src":"5248:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6943,"name":"address","nodeType":"ElementaryTypeName","src":"5248:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6946,"mutability":"mutable","name":"operator","nameLocation":"5271:8:26","nodeType":"VariableDeclaration","scope":6965,"src":"5263:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6945,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:33:26"},"returnParameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6965,"src":"5310:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6948,"name":"bool","nodeType":"ElementaryTypeName","src":"5310:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5309:6:26"},"scope":7701,"src":"5222:210:26","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[585],"body":{"id":7010,"nodeType":"Block","src":"5574:498:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"5588:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5602:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5594:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6976,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:26","typeDescriptions":{}}},"id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5594:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5588:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6989,"nodeType":"IfStatement","src":"5584:87:26","trueBody":{"id":6988,"nodeType":"Block","src":"5606:65:26","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5657:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5649:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6982,"name":"address","nodeType":"ElementaryTypeName","src":"5649:7:26","typeDescriptions":{}}},"id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5649:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6981,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"5627:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6987,"nodeType":"RevertStatement","src":"5620:40:26"}]}},{"assignments":[6991],"declarations":[{"constant":false,"id":6991,"mutability":"mutable","name":"previousOwner","nameLocation":"5897:13:26","nodeType":"VariableDeclaration","scope":7010,"src":"5889:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6990,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6998,"initialValue":{"arguments":[{"id":6993,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"5921:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"5925:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6995,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"5934:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6992,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"5913:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5889:58:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"5961:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7000,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"5978:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5961:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7009,"nodeType":"IfStatement","src":"5957:109:26","trueBody":{"id":7008,"nodeType":"Block","src":"5984:82:26","statements":[{"errorCall":{"arguments":[{"id":7003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"6026:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7004,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"6032:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7005,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"6041:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7002,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"6005:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7007,"nodeType":"RevertStatement","src":"5998:57:26"}]}}]},"documentation":{"id":6966,"nodeType":"StructuredDocumentation","src":"5438:51:26","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":7011,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5503:12:26","nodeType":"FunctionDefinition","parameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"from","nameLocation":"5524:4:26","nodeType":"VariableDeclaration","scope":7011,"src":"5516:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6967,"name":"address","nodeType":"ElementaryTypeName","src":"5516:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6970,"mutability":"mutable","name":"to","nameLocation":"5538:2:26","nodeType":"VariableDeclaration","scope":7011,"src":"5530:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6969,"name":"address","nodeType":"ElementaryTypeName","src":"5530:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6972,"mutability":"mutable","name":"tokenId","nameLocation":"5550:7:26","nodeType":"VariableDeclaration","scope":7011,"src":"5542:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5542:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5515:43:26"},"returnParameters":{"id":6974,"nodeType":"ParameterList","parameters":[],"src":"5574:0:26"},"scope":7701,"src":"5494:578:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[575],"body":{"id":7028,"nodeType":"Block","src":"6214:56:26","statements":[{"expression":{"arguments":[{"id":7022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"6241:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"6247:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"6251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6260:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7021,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[7029,7059],"referencedDeclaration":7059,"src":"6224:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7027,"nodeType":"ExpressionStatement","src":"6224:39:26"}]},"documentation":{"id":7012,"nodeType":"StructuredDocumentation","src":"6078:55:26","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":7029,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6147:16:26","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"from","nameLocation":"6172:4:26","nodeType":"VariableDeclaration","scope":7029,"src":"6164:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7013,"name":"address","nodeType":"ElementaryTypeName","src":"6164:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"to","nameLocation":"6186:2:26","nodeType":"VariableDeclaration","scope":7029,"src":"6178:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7015,"name":"address","nodeType":"ElementaryTypeName","src":"6178:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7018,"mutability":"mutable","name":"tokenId","nameLocation":"6198:7:26","nodeType":"VariableDeclaration","scope":7029,"src":"6190:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6190:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6163:43:26"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[],"src":"6214:0:26"},"scope":7701,"src":"6138:132:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[565],"body":{"id":7058,"nodeType":"Block","src":"6439:130:26","statements":[{"expression":{"arguments":[{"id":7042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6462:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"6468:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7044,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"6472:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7041,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"6449:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6449:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7046,"nodeType":"ExpressionStatement","src":"6449:31:26"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7050,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"6524:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6538:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"6544:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"6548:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"6557:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7047,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6490:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$743_$","typeString":"type(library ERC721Utils)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6502:21:26","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":742,"src":"6490:33:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6490:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7057,"nodeType":"ExpressionStatement","src":"6490:72:26"}]},"documentation":{"id":7030,"nodeType":"StructuredDocumentation","src":"6276:55:26","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":7059,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6345:16:26","nodeType":"FunctionDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"from","nameLocation":"6370:4:26","nodeType":"VariableDeclaration","scope":7059,"src":"6362:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7031,"name":"address","nodeType":"ElementaryTypeName","src":"6362:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"to","nameLocation":"6384:2:26","nodeType":"VariableDeclaration","scope":7059,"src":"6376:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7033,"name":"address","nodeType":"ElementaryTypeName","src":"6376:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"tokenId","nameLocation":"6396:7:26","nodeType":"VariableDeclaration","scope":7059,"src":"6388:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7035,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7038,"mutability":"mutable","name":"data","nameLocation":"6418:4:26","nodeType":"VariableDeclaration","scope":7059,"src":"6405:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7037,"name":"bytes","nodeType":"ElementaryTypeName","src":"6405:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6361:62:26"},"returnParameters":{"id":7040,"nodeType":"ParameterList","parameters":[],"src":"6439:0:26"},"scope":7701,"src":"6336:233:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7078,"nodeType":"Block","src":"7159:97:26","statements":[{"assignments":[7069],"declarations":[{"constant":false,"id":7069,"mutability":"mutable","name":"$","nameLocation":"7191:1:26","nodeType":"VariableDeclaration","scope":7078,"src":"7169:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7068,"nodeType":"UserDefinedTypeName","pathNode":{"id":7067,"name":"ERC721Storage","nameLocations":["7169:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"7169:13:26"},"referencedDeclaration":6681,"src":"7169:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7070,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"7195:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7195:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7169:45:26"},{"expression":{"baseExpression":{"expression":{"id":7073,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"7231:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7233:7:26","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":6666,"src":"7231:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":7076,"indexExpression":{"id":7075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"7241:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7231:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7066,"id":7077,"nodeType":"Return","src":"7224:25:26"}]},"documentation":{"id":7060,"nodeType":"StructuredDocumentation","src":"6575:504:26","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":7079,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7093:8:26","nodeType":"FunctionDefinition","parameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"tokenId","nameLocation":"7110:7:26","nodeType":"VariableDeclaration","scope":7079,"src":"7102:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7061,"name":"uint256","nodeType":"ElementaryTypeName","src":"7102:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7101:17:26"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7079,"src":"7150:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7064,"name":"address","nodeType":"ElementaryTypeName","src":"7150:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7149:9:26"},"scope":7701,"src":"7084:172:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7098,"nodeType":"Block","src":"7451:105:26","statements":[{"assignments":[7089],"declarations":[{"constant":false,"id":7089,"mutability":"mutable","name":"$","nameLocation":"7483:1:26","nodeType":"VariableDeclaration","scope":7098,"src":"7461:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7088,"nodeType":"UserDefinedTypeName","pathNode":{"id":7087,"name":"ERC721Storage","nameLocations":["7461:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"7461:13:26"},"referencedDeclaration":6681,"src":"7461:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7092,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7090,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"7487:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7487:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7461:45:26"},{"expression":{"baseExpression":{"expression":{"id":7093,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"7523:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:15:26","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":6674,"src":"7523:17:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":7096,"indexExpression":{"id":7095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"7541:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7086,"id":7097,"nodeType":"Return","src":"7516:33:26"}]},"documentation":{"id":7080,"nodeType":"StructuredDocumentation","src":"7262:105:26","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":7099,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7381:12:26","nodeType":"FunctionDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7082,"mutability":"mutable","name":"tokenId","nameLocation":"7402:7:26","nodeType":"VariableDeclaration","scope":7099,"src":"7394:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7393:17:26"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7099,"src":"7442:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7084,"name":"address","nodeType":"ElementaryTypeName","src":"7442:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7441:9:26"},"scope":7701,"src":"7372:184:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7134,"nodeType":"Block","src":"7976:163:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"8005:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8024:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8016:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7112,"name":"address","nodeType":"ElementaryTypeName","src":"8016:7:26","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8016:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8005:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7117,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"8043:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7118,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"8052:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8043:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7121,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"8080:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"8087:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7120,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"8063:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8063:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:52:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"8112:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7125,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"8099:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7128,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"8124:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8099:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8043:88:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8042:90:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8005:127:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7110,"id":7133,"nodeType":"Return","src":"7986:146:26"}]},"documentation":{"id":7100,"nodeType":"StructuredDocumentation","src":"7562:300:26","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":7135,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7876:13:26","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"owner","nameLocation":"7898:5:26","nodeType":"VariableDeclaration","scope":7135,"src":"7890:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7101,"name":"address","nodeType":"ElementaryTypeName","src":"7890:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7104,"mutability":"mutable","name":"spender","nameLocation":"7913:7:26","nodeType":"VariableDeclaration","scope":7135,"src":"7905:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7103,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7106,"mutability":"mutable","name":"tokenId","nameLocation":"7930:7:26","nodeType":"VariableDeclaration","scope":7135,"src":"7922:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"7922:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7889:49:26"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7135,"src":"7970:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7108,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:26"},"scope":7701,"src":"7867:272:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7171,"nodeType":"Block","src":"8668:271:26","statements":[{"condition":{"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8682:39:26","subExpression":{"arguments":[{"id":7146,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"8697:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7147,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8704:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"8713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7145,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"8683:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8683:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7170,"nodeType":"IfStatement","src":"8678:255:26","trueBody":{"id":7169,"nodeType":"Block","src":"8723:210:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"8741:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8758:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7152,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:26","typeDescriptions":{}}},"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8741:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7167,"nodeType":"Block","src":"8839:84:26","statements":[{"errorCall":{"arguments":[{"id":7163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8891:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7164,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"8900:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7162,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"8864:26:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7166,"nodeType":"RevertStatement","src":"8857:51:26"}]},"id":7168,"nodeType":"IfStatement","src":"8737:186:26","trueBody":{"id":7161,"nodeType":"Block","src":"8762:71:26","statements":[{"errorCall":{"arguments":[{"id":7158,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"8810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7157,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"8787:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8787:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7160,"nodeType":"RevertStatement","src":"8780:38:26"}]}}]}}]},"documentation":{"id":7136,"nodeType":"StructuredDocumentation","src":"8145:421:26","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":7172,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8580:16:26","nodeType":"FunctionDefinition","parameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"owner","nameLocation":"8605:5:26","nodeType":"VariableDeclaration","scope":7172,"src":"8597:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7137,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7140,"mutability":"mutable","name":"spender","nameLocation":"8620:7:26","nodeType":"VariableDeclaration","scope":7172,"src":"8612:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7139,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7142,"mutability":"mutable","name":"tokenId","nameLocation":"8637:7:26","nodeType":"VariableDeclaration","scope":7172,"src":"8629:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8629:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:49:26"},"returnParameters":{"id":7144,"nodeType":"ParameterList","parameters":[],"src":"8668:0:26"},"scope":7701,"src":"8571:368:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7195,"nodeType":"Block","src":"9656:135:26","statements":[{"assignments":[7182],"declarations":[{"constant":false,"id":7182,"mutability":"mutable","name":"$","nameLocation":"9688:1:26","nodeType":"VariableDeclaration","scope":7195,"src":"9666:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7181,"nodeType":"UserDefinedTypeName","pathNode":{"id":7180,"name":"ERC721Storage","nameLocations":["9666:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"9666:13:26"},"referencedDeclaration":6681,"src":"9666:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7185,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7183,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"9692:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9666:45:26"},{"id":7194,"nodeType":"UncheckedBlock","src":"9721:64:26","statements":[{"expression":{"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7186,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"9745:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9747:9:26","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"9745:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7190,"indexExpression":{"id":7188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"9757:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9745:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"9769:5:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9745:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7193,"nodeType":"ExpressionStatement","src":"9745:29:26"}]}]},"documentation":{"id":7173,"nodeType":"StructuredDocumentation","src":"8945:631:26","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9590:16:26","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"account","nameLocation":"9615:7:26","nodeType":"VariableDeclaration","scope":7196,"src":"9607:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7174,"name":"address","nodeType":"ElementaryTypeName","src":"9607:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7177,"mutability":"mutable","name":"value","nameLocation":"9632:5:26","nodeType":"VariableDeclaration","scope":7196,"src":"9624:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7176,"name":"uint128","nodeType":"ElementaryTypeName","src":"9624:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9606:32:26"},"returnParameters":{"id":7179,"nodeType":"ParameterList","parameters":[],"src":"9656:0:26"},"scope":7701,"src":"9581:210:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7297,"nodeType":"Block","src":"10479:761:26","statements":[{"assignments":[7210],"declarations":[{"constant":false,"id":7210,"mutability":"mutable","name":"$","nameLocation":"10511:1:26","nodeType":"VariableDeclaration","scope":7297,"src":"10489:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7209,"nodeType":"UserDefinedTypeName","pathNode":{"id":7208,"name":"ERC721Storage","nameLocations":["10489:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"10489:13:26"},"referencedDeclaration":6681,"src":"10489:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7211,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"10515:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10515:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10489:45:26"},{"assignments":[7215],"declarations":[{"constant":false,"id":7215,"mutability":"mutable","name":"from","nameLocation":"10552:4:26","nodeType":"VariableDeclaration","scope":7297,"src":"10544:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7214,"name":"address","nodeType":"ElementaryTypeName","src":"10544:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7219,"initialValue":{"arguments":[{"id":7217,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"10568:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"10559:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10559:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10544:32:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7220,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"10636:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7221,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:26","typeDescriptions":{}}},"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7233,"nodeType":"IfStatement","src":"10632:86:26","trueBody":{"id":7232,"nodeType":"Block","src":"10656:62:26","statements":[{"expression":{"arguments":[{"id":7227,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"10687:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7228,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"10693:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"10699:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7226,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"10670:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7231,"nodeType":"ExpressionStatement","src":"10670:37:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7234,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"10762:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10778:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10770:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7235,"name":"address","nodeType":"ElementaryTypeName","src":"10770:7:26","typeDescriptions":{}}},"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10770:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10762:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"10758:258:26","trueBody":{"id":7262,"nodeType":"Block","src":"10782:234:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10895:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10887:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"10887:7:26","typeDescriptions":{}}},"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10887:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"10899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":7248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10908:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7246,"name":"address","nodeType":"ElementaryTypeName","src":"10908:7:26","typeDescriptions":{}}},"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10908:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10920:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7240,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[7552,7626],"referencedDeclaration":7626,"src":"10878:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10878:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7252,"nodeType":"ExpressionStatement","src":"10878:48:26"},{"id":7261,"nodeType":"UncheckedBlock","src":"10941:65:26","statements":[{"expression":{"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7253,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"10969:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10971:9:26","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"10969:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7257,"indexExpression":{"id":7255,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"10981:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10969:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10990:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10969:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7260,"nodeType":"ExpressionStatement","src":"10969:22:26"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"11030:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11044:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11036:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7265,"name":"address","nodeType":"ElementaryTypeName","src":"11036:7:26","typeDescriptions":{}}},"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11036:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11030:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7280,"nodeType":"IfStatement","src":"11026:109:26","trueBody":{"id":7279,"nodeType":"Block","src":"11048:87:26","statements":[{"id":7278,"nodeType":"UncheckedBlock","src":"11062:63:26","statements":[{"expression":{"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7270,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"11090:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11092:9:26","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"11090:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7274,"indexExpression":{"id":7272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"11102:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11090:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11109:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11090:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7277,"nodeType":"ExpressionStatement","src":"11090:20:26"}]}]}},{"expression":{"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7281,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"11145:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11147:7:26","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":6666,"src":"11145:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":7285,"indexExpression":{"id":7283,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"11155:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11145:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"11166:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11145:23:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7288,"nodeType":"ExpressionStatement","src":"11145:23:26"},{"eventCall":{"arguments":[{"id":7290,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"11193:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"11199:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7292,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"11203:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7289,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"11184:8:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11184:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7294,"nodeType":"EmitStatement","src":"11179:32:26"},{"expression":{"id":7295,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"11229:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7207,"id":7296,"nodeType":"Return","src":"11222:11:26"}]},"documentation":{"id":7197,"nodeType":"StructuredDocumentation","src":"9797:582:26","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":7298,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10393:7:26","nodeType":"FunctionDefinition","parameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"to","nameLocation":"10409:2:26","nodeType":"VariableDeclaration","scope":7298,"src":"10401:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7198,"name":"address","nodeType":"ElementaryTypeName","src":"10401:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7201,"mutability":"mutable","name":"tokenId","nameLocation":"10421:7:26","nodeType":"VariableDeclaration","scope":7298,"src":"10413:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7200,"name":"uint256","nodeType":"ElementaryTypeName","src":"10413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7203,"mutability":"mutable","name":"auth","nameLocation":"10438:4:26","nodeType":"VariableDeclaration","scope":7298,"src":"10430:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7202,"name":"address","nodeType":"ElementaryTypeName","src":"10430:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10400:43:26"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7298,"src":"10470:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7205,"name":"address","nodeType":"ElementaryTypeName","src":"10470:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10469:9:26"},"scope":7701,"src":"10384:856:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7347,"nodeType":"Block","src":"11615:274:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"11629:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11643:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11635:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7307,"name":"address","nodeType":"ElementaryTypeName","src":"11635:7:26","typeDescriptions":{}}},"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11635:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11629:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"11625:87:26","trueBody":{"id":7319,"nodeType":"Block","src":"11647:65:26","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11698:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11690:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7313,"name":"address","nodeType":"ElementaryTypeName","src":"11690:7:26","typeDescriptions":{}}},"id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11690:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7312,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"11668:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11668:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7318,"nodeType":"RevertStatement","src":"11661:40:26"}]}},{"assignments":[7322],"declarations":[{"constant":false,"id":7322,"mutability":"mutable","name":"previousOwner","nameLocation":"11729:13:26","nodeType":"VariableDeclaration","scope":7347,"src":"11721:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7321,"name":"address","nodeType":"ElementaryTypeName","src":"11721:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7331,"initialValue":{"arguments":[{"id":7324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"11753:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"11757:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11774:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11766:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7326,"name":"address","nodeType":"ElementaryTypeName","src":"11766:7:26","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11766:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7323,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"11745:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11721:56:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7332,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"11791:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11816:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11808:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7333,"name":"address","nodeType":"ElementaryTypeName","src":"11808:7:26","typeDescriptions":{}}},"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11808:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11791:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7346,"nodeType":"IfStatement","src":"11787:96:26","trueBody":{"id":7345,"nodeType":"Block","src":"11820:63:26","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11869:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11861:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7339,"name":"address","nodeType":"ElementaryTypeName","src":"11861:7:26","typeDescriptions":{}}},"id":7342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11861:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7338,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"11841:19:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11841:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7344,"nodeType":"RevertStatement","src":"11834:38:26"}]}}]},"documentation":{"id":7299,"nodeType":"StructuredDocumentation","src":"11246:311:26","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":7348,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11571:5:26","nodeType":"FunctionDefinition","parameters":{"id":7304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"to","nameLocation":"11585:2:26","nodeType":"VariableDeclaration","scope":7348,"src":"11577:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"11577:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7303,"mutability":"mutable","name":"tokenId","nameLocation":"11597:7:26","nodeType":"VariableDeclaration","scope":7348,"src":"11589:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"11589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11576:29:26"},"returnParameters":{"id":7305,"nodeType":"ParameterList","parameters":[],"src":"11615:0:26"},"scope":7701,"src":"11562:327:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7362,"nodeType":"Block","src":"12297:43:26","statements":[{"expression":{"arguments":[{"id":7357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"12317:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7358,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"12321:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12330:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7356,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[7363,7393],"referencedDeclaration":7393,"src":"12307:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12307:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7361,"nodeType":"ExpressionStatement","src":"12307:26:26"}]},"documentation":{"id":7349,"nodeType":"StructuredDocumentation","src":"11895:340:26","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":7363,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12249:9:26","nodeType":"FunctionDefinition","parameters":{"id":7354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"to","nameLocation":"12267:2:26","nodeType":"VariableDeclaration","scope":7363,"src":"12259:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7350,"name":"address","nodeType":"ElementaryTypeName","src":"12259:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7353,"mutability":"mutable","name":"tokenId","nameLocation":"12279:7:26","nodeType":"VariableDeclaration","scope":7363,"src":"12271:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7352,"name":"uint256","nodeType":"ElementaryTypeName","src":"12271:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12258:29:26"},"returnParameters":{"id":7355,"nodeType":"ParameterList","parameters":[],"src":"12297:0:26"},"scope":7701,"src":"12240:100:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7392,"nodeType":"Block","src":"12645:123:26","statements":[{"expression":{"arguments":[{"id":7374,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"12661:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"12665:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7373,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"12655:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12655:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7377,"nodeType":"ExpressionStatement","src":"12655:18:26"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7381,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"12717:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12717:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12739:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12731:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7383,"name":"address","nodeType":"ElementaryTypeName","src":"12731:7:26","typeDescriptions":{}}},"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12731:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"12743:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"12747:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7389,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"12756:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7378,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"12683:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$743_$","typeString":"type(library ERC721Utils)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12695:21:26","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":742,"src":"12683:33:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:78:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7391,"nodeType":"ExpressionStatement","src":"12683:78:26"}]},"documentation":{"id":7364,"nodeType":"StructuredDocumentation","src":"12346:210:26","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":7393,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12570:9:26","nodeType":"FunctionDefinition","parameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"to","nameLocation":"12588:2:26","nodeType":"VariableDeclaration","scope":7393,"src":"12580:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7365,"name":"address","nodeType":"ElementaryTypeName","src":"12580:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7368,"mutability":"mutable","name":"tokenId","nameLocation":"12600:7:26","nodeType":"VariableDeclaration","scope":7393,"src":"12592:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"12592:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7370,"mutability":"mutable","name":"data","nameLocation":"12622:4:26","nodeType":"VariableDeclaration","scope":7393,"src":"12609:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7369,"name":"bytes","nodeType":"ElementaryTypeName","src":"12609:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12579:48:26"},"returnParameters":{"id":7372,"nodeType":"ParameterList","parameters":[],"src":"12645:0:26"},"scope":7701,"src":"12561:207:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"13135:186:26","statements":[{"assignments":[7400],"declarations":[{"constant":false,"id":7400,"mutability":"mutable","name":"previousOwner","nameLocation":"13153:13:26","nodeType":"VariableDeclaration","scope":7425,"src":"13145:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7399,"name":"address","nodeType":"ElementaryTypeName","src":"13145:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7412,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13185:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13177:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7402,"name":"address","nodeType":"ElementaryTypeName","src":"13177:7:26","typeDescriptions":{}}},"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13177:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"13189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13206:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13198:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"13198:7:26","typeDescriptions":{}}},"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13198:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7401,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"13169:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13169:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13145:64:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"13223:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13248:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13240:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7414,"name":"address","nodeType":"ElementaryTypeName","src":"13240:7:26","typeDescriptions":{}}},"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13223:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7424,"nodeType":"IfStatement","src":"13219:96:26","trueBody":{"id":7423,"nodeType":"Block","src":"13252:63:26","statements":[{"errorCall":{"arguments":[{"id":7420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"13296:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7419,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"13273:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13273:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7422,"nodeType":"RevertStatement","src":"13266:38:26"}]}}]},"documentation":{"id":7394,"nodeType":"StructuredDocumentation","src":"12774:315:26","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13103:5:26","nodeType":"FunctionDefinition","parameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"tokenId","nameLocation":"13117:7:26","nodeType":"VariableDeclaration","scope":7426,"src":"13109:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"13109:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13108:17:26"},"returnParameters":{"id":7398,"nodeType":"ParameterList","parameters":[],"src":"13135:0:26"},"scope":7701,"src":"13094:227:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7485,"nodeType":"Block","src":"13716:389:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"13730:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13744:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13736:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7437,"name":"address","nodeType":"ElementaryTypeName","src":"13736:7:26","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13736:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13730:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7450,"nodeType":"IfStatement","src":"13726:87:26","trueBody":{"id":7449,"nodeType":"Block","src":"13748:65:26","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13799:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13791:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7443,"name":"address","nodeType":"ElementaryTypeName","src":"13791:7:26","typeDescriptions":{}}},"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13791:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7442,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"13769:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13769:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7448,"nodeType":"RevertStatement","src":"13762:40:26"}]}},{"assignments":[7452],"declarations":[{"constant":false,"id":7452,"mutability":"mutable","name":"previousOwner","nameLocation":"13830:13:26","nodeType":"VariableDeclaration","scope":7485,"src":"13822:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7451,"name":"address","nodeType":"ElementaryTypeName","src":"13822:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7461,"initialValue":{"arguments":[{"id":7454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"13854:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"13858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13875:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13867:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7456,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:26","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13867:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7453,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"13846:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13846:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13822:56:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"13892:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13917:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13909:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7463,"name":"address","nodeType":"ElementaryTypeName","src":"13909:7:26","typeDescriptions":{}}},"id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13909:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13892:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7473,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"13994:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"14011:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13994:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7483,"nodeType":"IfStatement","src":"13990:109:26","trueBody":{"id":7482,"nodeType":"Block","src":"14017:82:26","statements":[{"errorCall":{"arguments":[{"id":7477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"14059:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"14065:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7479,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"14074:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7476,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"14038:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14038:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7481,"nodeType":"RevertStatement","src":"14031:57:26"}]}},"id":7484,"nodeType":"IfStatement","src":"13888:211:26","trueBody":{"id":7472,"nodeType":"Block","src":"13921:63:26","statements":[{"errorCall":{"arguments":[{"id":7469,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"13965:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7468,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"13942:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13942:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7471,"nodeType":"RevertStatement","src":"13935:38:26"}]}}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"13327:313:26","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13654:9:26","nodeType":"FunctionDefinition","parameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"from","nameLocation":"13672:4:26","nodeType":"VariableDeclaration","scope":7486,"src":"13664:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7428,"name":"address","nodeType":"ElementaryTypeName","src":"13664:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7431,"mutability":"mutable","name":"to","nameLocation":"13686:2:26","nodeType":"VariableDeclaration","scope":7486,"src":"13678:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7430,"name":"address","nodeType":"ElementaryTypeName","src":"13678:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7433,"mutability":"mutable","name":"tokenId","nameLocation":"13698:7:26","nodeType":"VariableDeclaration","scope":7486,"src":"13690:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"13690:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13663:43:26"},"returnParameters":{"id":7435,"nodeType":"ParameterList","parameters":[],"src":"13716:0:26"},"scope":7701,"src":"13645:460:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7503,"nodeType":"Block","src":"15114:53:26","statements":[{"expression":{"arguments":[{"id":7497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"15138:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"15144:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"15148:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":7500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15157:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7496,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[7504,7534],"referencedDeclaration":7534,"src":"15124:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7502,"nodeType":"ExpressionStatement","src":"15124:36:26"}]},"documentation":{"id":7487,"nodeType":"StructuredDocumentation","src":"14111:923:26","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":7504,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15048:13:26","nodeType":"FunctionDefinition","parameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"from","nameLocation":"15070:4:26","nodeType":"VariableDeclaration","scope":7504,"src":"15062:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7488,"name":"address","nodeType":"ElementaryTypeName","src":"15062:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7491,"mutability":"mutable","name":"to","nameLocation":"15084:2:26","nodeType":"VariableDeclaration","scope":7504,"src":"15076:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7490,"name":"address","nodeType":"ElementaryTypeName","src":"15076:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7493,"mutability":"mutable","name":"tokenId","nameLocation":"15096:7:26","nodeType":"VariableDeclaration","scope":7504,"src":"15088:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7492,"name":"uint256","nodeType":"ElementaryTypeName","src":"15088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15061:43:26"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[],"src":"15114:0:26"},"scope":7701,"src":"15039:128:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7533,"nodeType":"Block","src":"15506:127:26","statements":[{"expression":{"arguments":[{"id":7517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"15526:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"15532:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"15536:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7516,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"15516:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15516:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7521,"nodeType":"ExpressionStatement","src":"15516:28:26"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"15588:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15588:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7527,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"15602:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"15608:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"15612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7530,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"15621:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7522,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"15554:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$743_$","typeString":"type(library ERC721Utils)"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15566:21:26","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":742,"src":"15554:33:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15554:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7532,"nodeType":"ExpressionStatement","src":"15554:72:26"}]},"documentation":{"id":7505,"nodeType":"StructuredDocumentation","src":"15173:226:26","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":7534,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15413:13:26","nodeType":"FunctionDefinition","parameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7507,"mutability":"mutable","name":"from","nameLocation":"15435:4:26","nodeType":"VariableDeclaration","scope":7534,"src":"15427:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7506,"name":"address","nodeType":"ElementaryTypeName","src":"15427:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7509,"mutability":"mutable","name":"to","nameLocation":"15449:2:26","nodeType":"VariableDeclaration","scope":7534,"src":"15441:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7508,"name":"address","nodeType":"ElementaryTypeName","src":"15441:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7511,"mutability":"mutable","name":"tokenId","nameLocation":"15461:7:26","nodeType":"VariableDeclaration","scope":7534,"src":"15453:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7510,"name":"uint256","nodeType":"ElementaryTypeName","src":"15453:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7513,"mutability":"mutable","name":"data","nameLocation":"15483:4:26","nodeType":"VariableDeclaration","scope":7534,"src":"15470:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7512,"name":"bytes","nodeType":"ElementaryTypeName","src":"15470:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15426:62:26"},"returnParameters":{"id":7515,"nodeType":"ParameterList","parameters":[],"src":"15506:0:26"},"scope":7701,"src":"15404:229:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7551,"nodeType":"Block","src":"16146:50:26","statements":[{"expression":{"arguments":[{"id":7545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"16165:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"16169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7547,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"16178:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16184:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7544,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[7552,7626],"referencedDeclaration":7626,"src":"16156:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16156:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7550,"nodeType":"ExpressionStatement","src":"16156:33:26"}]},"documentation":{"id":7535,"nodeType":"StructuredDocumentation","src":"15639:432:26","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":7552,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16085:8:26","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7537,"mutability":"mutable","name":"to","nameLocation":"16102:2:26","nodeType":"VariableDeclaration","scope":7552,"src":"16094:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7536,"name":"address","nodeType":"ElementaryTypeName","src":"16094:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7539,"mutability":"mutable","name":"tokenId","nameLocation":"16114:7:26","nodeType":"VariableDeclaration","scope":7552,"src":"16106:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"16106:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7541,"mutability":"mutable","name":"auth","nameLocation":"16131:4:26","nodeType":"VariableDeclaration","scope":7552,"src":"16123:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7540,"name":"address","nodeType":"ElementaryTypeName","src":"16123:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16093:43:26"},"returnParameters":{"id":7543,"nodeType":"ParameterList","parameters":[],"src":"16146:0:26"},"scope":7701,"src":"16076:120:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7625,"nodeType":"Block","src":"16472:625:26","statements":[{"assignments":[7566],"declarations":[{"constant":false,"id":7566,"mutability":"mutable","name":"$","nameLocation":"16504:1:26","nodeType":"VariableDeclaration","scope":7625,"src":"16482:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7565,"nodeType":"UserDefinedTypeName","pathNode":{"id":7564,"name":"ERC721Storage","nameLocations":["16482:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"16482:13:26"},"referencedDeclaration":6681,"src":"16482:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7569,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7567,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"16508:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16508:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16482:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7570,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"16593:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7571,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"16606:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16622:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16614:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7572,"name":"address","nodeType":"ElementaryTypeName","src":"16614:7:26","typeDescriptions":{}}},"id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16614:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16606:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16593:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7616,"nodeType":"IfStatement","src":"16589:460:26","trueBody":{"id":7615,"nodeType":"Block","src":"16626:423:26","statements":[{"assignments":[7579],"declarations":[{"constant":false,"id":7579,"mutability":"mutable","name":"owner","nameLocation":"16648:5:26","nodeType":"VariableDeclaration","scope":7615,"src":"16640:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7578,"name":"address","nodeType":"ElementaryTypeName","src":"16640:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7583,"initialValue":{"arguments":[{"id":7581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"16670:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7580,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"16656:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16656:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16640:38:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7584,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"16806:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16822:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16814:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7585,"name":"address","nodeType":"ElementaryTypeName","src":"16814:7:26","typeDescriptions":{}}},"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16814:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16806:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"16828:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7591,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"16837:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16828:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16845:30:26","subExpression":{"arguments":[{"id":7595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"16863:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7596,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"16870:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7594,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"16846:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16846:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16806:69:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7605,"nodeType":"IfStatement","src":"16802:142:26","trueBody":{"id":7604,"nodeType":"Block","src":"16877:67:26","statements":[{"errorCall":{"arguments":[{"id":7601,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"16924:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7600,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"16902:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16902:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7603,"nodeType":"RevertStatement","src":"16895:34:26"}]}},{"condition":{"id":7606,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"16962:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"IfStatement","src":"16958:81:26","trueBody":{"id":7613,"nodeType":"Block","src":"16973:66:26","statements":[{"eventCall":{"arguments":[{"id":7608,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"17005:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"17012:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7610,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"17016:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7607,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"16996:8:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16996:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7612,"nodeType":"EmitStatement","src":"16991:33:26"}]}}]}},{"expression":{"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7617,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"17059:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17061:15:26","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":6674,"src":"17059:17:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":7621,"indexExpression":{"id":7619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"17077:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"17088:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17059:31:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7624,"nodeType":"ExpressionStatement","src":"17059:31:26"}]},"documentation":{"id":7553,"nodeType":"StructuredDocumentation","src":"16202:171:26","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":7626,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16387:8:26","nodeType":"FunctionDefinition","parameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"to","nameLocation":"16404:2:26","nodeType":"VariableDeclaration","scope":7626,"src":"16396:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7554,"name":"address","nodeType":"ElementaryTypeName","src":"16396:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7557,"mutability":"mutable","name":"tokenId","nameLocation":"16416:7:26","nodeType":"VariableDeclaration","scope":7626,"src":"16408:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"16408:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7559,"mutability":"mutable","name":"auth","nameLocation":"16433:4:26","nodeType":"VariableDeclaration","scope":7626,"src":"16425:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7558,"name":"address","nodeType":"ElementaryTypeName","src":"16425:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"emitEvent","nameLocation":"16444:9:26","nodeType":"VariableDeclaration","scope":7626,"src":"16439:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7560,"name":"bool","nodeType":"ElementaryTypeName","src":"16439:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16395:59:26"},"returnParameters":{"id":7563,"nodeType":"ParameterList","parameters":[],"src":"16472:0:26"},"scope":7701,"src":"16378:719:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7670,"nodeType":"Block","src":"17399:276:26","statements":[{"assignments":[7638],"declarations":[{"constant":false,"id":7638,"mutability":"mutable","name":"$","nameLocation":"17431:1:26","nodeType":"VariableDeclaration","scope":7670,"src":"17409:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":7637,"nodeType":"UserDefinedTypeName","pathNode":{"id":7636,"name":"ERC721Storage","nameLocations":["17409:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6681,"src":"17409:13:26"},"referencedDeclaration":6681,"src":"17409:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":7641,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7639,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"17435:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$6681_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17435:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17409:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7642,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"17468:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17488:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17480:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7643,"name":"address","nodeType":"ElementaryTypeName","src":"17480:7:26","typeDescriptions":{}}},"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17480:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17468:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7653,"nodeType":"IfStatement","src":"17464:91:26","trueBody":{"id":7652,"nodeType":"Block","src":"17492:63:26","statements":[{"errorCall":{"arguments":[{"id":7649,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"17535:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7648,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"17513:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17513:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7651,"nodeType":"RevertStatement","src":"17506:38:26"}]}},{"expression":{"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":7654,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"17564:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$6681_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":7658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17566:18:26","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":6680,"src":"17564:20:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":7659,"indexExpression":{"id":7656,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"17585:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17564:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7660,"indexExpression":{"id":7657,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"17592:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17564:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7661,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"17604:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17564:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7663,"nodeType":"ExpressionStatement","src":"17564:48:26"},{"eventCall":{"arguments":[{"id":7665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"17642:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7666,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"17649:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7667,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"17659:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7664,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"17627:14:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17627:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7669,"nodeType":"EmitStatement","src":"17622:46:26"}]},"documentation":{"id":7627,"nodeType":"StructuredDocumentation","src":"17103:198:26","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":7671,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"17315:18:26","nodeType":"FunctionDefinition","parameters":{"id":7634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"owner","nameLocation":"17342:5:26","nodeType":"VariableDeclaration","scope":7671,"src":"17334:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7628,"name":"address","nodeType":"ElementaryTypeName","src":"17334:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7631,"mutability":"mutable","name":"operator","nameLocation":"17357:8:26","nodeType":"VariableDeclaration","scope":7671,"src":"17349:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7630,"name":"address","nodeType":"ElementaryTypeName","src":"17349:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7633,"mutability":"mutable","name":"approved","nameLocation":"17372:8:26","nodeType":"VariableDeclaration","scope":7671,"src":"17367:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7632,"name":"bool","nodeType":"ElementaryTypeName","src":"17367:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17333:48:26"},"returnParameters":{"id":7635,"nodeType":"ParameterList","parameters":[],"src":"17399:0:26"},"scope":7701,"src":"17306:369:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7699,"nodeType":"Block","src":"17982:169:26","statements":[{"assignments":[7680],"declarations":[{"constant":false,"id":7680,"mutability":"mutable","name":"owner","nameLocation":"18000:5:26","nodeType":"VariableDeclaration","scope":7699,"src":"17992:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7679,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7684,"initialValue":{"arguments":[{"id":7682,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"18017:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7681,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"18008:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18008:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17992:33:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"18039:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18056:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18048:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7686,"name":"address","nodeType":"ElementaryTypeName","src":"18048:7:26","typeDescriptions":{}}},"id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18048:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18039:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7696,"nodeType":"IfStatement","src":"18035:88:26","trueBody":{"id":7695,"nodeType":"Block","src":"18060:63:26","statements":[{"errorCall":{"arguments":[{"id":7692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"18104:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7691,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"18081:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18081:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7694,"nodeType":"RevertStatement","src":"18074:38:26"}]}},{"expression":{"id":7697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"18139:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7678,"id":7698,"nodeType":"Return","src":"18132:12:26"}]},"documentation":{"id":7672,"nodeType":"StructuredDocumentation","src":"17681:224:26","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":7700,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17919:13:26","nodeType":"FunctionDefinition","parameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"tokenId","nameLocation":"17941:7:26","nodeType":"VariableDeclaration","scope":7700,"src":"17933:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7673,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17932:17:26"},"returnParameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7700,"src":"17973:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7676,"name":"address","nodeType":"ElementaryTypeName","src":"17973:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17972:9:26"},"scope":7701,"src":"17910:241:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7702,"src":"1099:17054:26","usedErrors":[110,115,124,129,134,141,146,151,6202,6205],"usedEvents":[519,528,537,6210]}],"src":"107:18047:26"},"id":26},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol","exportedSymbols":{"ERC721URIStorageUpgradeable":[7871],"ERC721Upgradeable":[7701],"IERC165":[2413],"IERC4906":[48],"Initializable":[6439],"Strings":[2401]},"id":7872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7703,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:27"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"../ERC721Upgradeable.sol","id":7705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7872,"sourceUnit":7702,"src":"154:59:27","symbolAliases":[{"foreign":{"id":7704,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"162:17:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7872,"sourceUnit":2402,"src":"214:66:27","symbolAliases":[{"foreign":{"id":7706,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"222:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"@openzeppelin/contracts/interfaces/IERC4906.sol","id":7709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7872,"sourceUnit":49,"src":"281:73:27","symbolAliases":[{"foreign":{"id":7708,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"289:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7872,"sourceUnit":2414,"src":"355:80:27","symbolAliases":[{"foreign":{"id":7710,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"363:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":7713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7872,"sourceUnit":6440,"src":"436:69:27","symbolAliases":[{"foreign":{"id":7712,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"444:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7715,"name":"Initializable","nameLocations":["627:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"627:13:27"},"id":7716,"nodeType":"InheritanceSpecifier","src":"627:13:27"},{"baseName":{"id":7717,"name":"IERC4906","nameLocations":["642:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":48,"src":"642:8:27"},"id":7718,"nodeType":"InheritanceSpecifier","src":"642:8:27"},{"baseName":{"id":7719,"name":"ERC721Upgradeable","nameLocations":["652:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":7701,"src":"652:17:27"},"id":7720,"nodeType":"InheritanceSpecifier","src":"652:17:27"}],"canonicalName":"ERC721URIStorageUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7714,"nodeType":"StructuredDocumentation","src":"507:70:27","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":7871,"linearizedBaseContracts":[7871,7701,152,666,48,620,8031,2413,7917,6439],"name":"ERC721URIStorageUpgradeable","nameLocation":"596:27:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7723,"libraryName":{"id":7721,"name":"Strings","nameLocations":["682:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"682:7:27"},"nodeType":"UsingForDirective","src":"676:26:27","typeName":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":7729,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"914:20:27","nodeType":"VariableDeclaration","scope":7871,"src":"890:65:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7724,"name":"bytes4","nodeType":"ElementaryTypeName","src":"890:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"944:10:27","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":7725,"name":"bytes4","nodeType":"ElementaryTypeName","src":"937:6:27","typeDescriptions":{}}},"id":7728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"937:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"canonicalName":"ERC721URIStorageUpgradeable.ERC721URIStorageStorage","documentation":{"id":7730,"nodeType":"StructuredDocumentation","src":"962:74:27","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage"},"id":7735,"members":[{"constant":false,"id":7734,"mutability":"mutable","name":"_tokenURIs","nameLocation":"1160:10:27","nodeType":"VariableDeclaration","scope":7735,"src":"1125:45:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":7733,"keyName":"tokenId","keyNameLocation":"1141:7:27","keyType":{"id":7731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1125:34:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7732,"name":"string","nodeType":"ElementaryTypeName","src":"1152:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"internal"}],"name":"ERC721URIStorageStorage","nameLocation":"1048:23:27","nodeType":"StructDefinition","scope":7871,"src":"1041:136:27","visibility":"public"},{"constant":true,"id":7738,"mutability":"constant","name":"ERC721URIStorageStorageLocation","nameLocation":"1328:31:27","nodeType":"VariableDeclaration","scope":7871,"src":"1303:125:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1303:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830353432613431383831656531323861333635613732376232383263383666613835393537393439306239626234356161623835303336343863386537393030","id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:66:27","typeDescriptions":{"typeIdentifier":"t_rational_2379308696314521910557677063879631722299242421128561970643328499819886835968_by_1","typeString":"int_const 2379...(68 digits omitted)...5968"},"value":"0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900"},"visibility":"private"},{"body":{"id":7745,"nodeType":"Block","src":"1531:90:27","statements":[{"AST":{"nativeSrc":"1550:65:27","nodeType":"YulBlock","src":"1550:65:27","statements":[{"nativeSrc":"1564:41:27","nodeType":"YulAssignment","src":"1564:41:27","value":{"name":"ERC721URIStorageStorageLocation","nativeSrc":"1574:31:27","nodeType":"YulIdentifier","src":"1574:31:27"},"variableNames":[{"name":"$.slot","nativeSrc":"1564:6:27","nodeType":"YulIdentifier","src":"1564:6:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7742,"isOffset":false,"isSlot":true,"src":"1564:6:27","suffix":"slot","valueSize":1},{"declaration":7738,"isOffset":false,"isSlot":false,"src":"1574:31:27","valueSize":1}],"id":7744,"nodeType":"InlineAssembly","src":"1541:74:27"}]},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721URIStorageStorage","nameLocation":"1444:27:27","nodeType":"FunctionDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[],"src":"1471:2:27"},"returnParameters":{"id":7743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7742,"mutability":"mutable","name":"$","nameLocation":"1528:1:27","nodeType":"VariableDeclaration","scope":7746,"src":"1496:33:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"},"typeName":{"id":7741,"nodeType":"UserDefinedTypeName","pathNode":{"id":7740,"name":"ERC721URIStorageStorage","nameLocations":["1496:23:27"],"nodeType":"IdentifierPath","referencedDeclaration":7735,"src":"1496:23:27"},"referencedDeclaration":7735,"src":"1496:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"}},"visibility":"internal"}],"src":"1495:35:27"},"scope":7871,"src":"1435:186:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7751,"nodeType":"Block","src":"1688:7:27","statements":[]},"id":7752,"implemented":true,"kind":"function","modifiers":[{"id":7749,"kind":"modifierInvocation","modifierName":{"id":7748,"name":"onlyInitializing","nameLocations":["1671:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"1671:16:27"},"nodeType":"ModifierInvocation","src":"1671:16:27"}],"name":"__ERC721URIStorage_init","nameLocation":"1636:23:27","nodeType":"FunctionDefinition","parameters":{"id":7747,"nodeType":"ParameterList","parameters":[],"src":"1659:2:27"},"returnParameters":{"id":7750,"nodeType":"ParameterList","parameters":[],"src":"1688:0:27"},"scope":7871,"src":"1627:68:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7757,"nodeType":"Block","src":"1772:7:27","statements":[]},"id":7758,"implemented":true,"kind":"function","modifiers":[{"id":7755,"kind":"modifierInvocation","modifierName":{"id":7754,"name":"onlyInitializing","nameLocations":["1755:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"1755:16:27"},"nodeType":"ModifierInvocation","src":"1755:16:27"}],"name":"__ERC721URIStorage_init_unchained","nameLocation":"1710:33:27","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[],"src":"1743:2:27"},"returnParameters":{"id":7756,"nodeType":"ParameterList","parameters":[],"src":"1772:0:27"},"scope":7871,"src":"1701:78:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2412,6767],"body":{"id":7778,"nodeType":"Block","src":"1963:99:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"1980:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7770,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"1995:20:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1980:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7774,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"2043:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7772,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2019:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorageUpgradeable_$7871_$","typeString":"type(contract super ERC721URIStorageUpgradeable)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2025:17:27","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6767,"src":"2019:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2019:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1980:75:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7768,"id":7777,"nodeType":"Return","src":"1973:82:27"}]},"documentation":{"id":7759,"nodeType":"StructuredDocumentation","src":"1784:55:27","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":7779,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1853:17:27","nodeType":"FunctionDefinition","overrides":{"id":7765,"nodeType":"OverrideSpecifier","overrides":[{"id":7763,"name":"ERC721Upgradeable","nameLocations":["1920:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":7701,"src":"1920:17:27"},{"id":7764,"name":"IERC165","nameLocations":["1939:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"1939:7:27"}],"src":"1911:36:27"},"parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"interfaceId","nameLocation":"1878:11:27","nodeType":"VariableDeclaration","scope":7779,"src":"1871:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7760,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1871:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1870:20:27"},"returnParameters":{"id":7768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7779,"src":"1957:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7766,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1956:6:27"},"scope":7871,"src":"1844:218:27","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[6883],"body":{"id":7842,"nodeType":"Block","src":"2216:582:27","statements":[{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"$","nameLocation":"2258:1:27","nodeType":"VariableDeclaration","scope":7842,"src":"2226:33:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"},"typeName":{"id":7789,"nodeType":"UserDefinedTypeName","pathNode":{"id":7788,"name":"ERC721URIStorageStorage","nameLocations":["2226:23:27"],"nodeType":"IdentifierPath","referencedDeclaration":7735,"src":"2226:23:27"},"referencedDeclaration":7735,"src":"2226:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"}},"visibility":"internal"}],"id":7793,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7791,"name":"_getERC721URIStorageStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"2262:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721URIStorageStorage_$7735_storage_ptr_$","typeString":"function () pure returns (struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer)"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2226:65:27"},{"expression":{"arguments":[{"id":7795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"2315:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7794,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"2301:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7797,"nodeType":"ExpressionStatement","src":"2301:22:27"},{"assignments":[7799],"declarations":[{"constant":false,"id":7799,"mutability":"mutable","name":"_tokenURI","nameLocation":"2348:9:27","nodeType":"VariableDeclaration","scope":7842,"src":"2334:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7798,"name":"string","nodeType":"ElementaryTypeName","src":"2334:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7804,"initialValue":{"baseExpression":{"expression":{"id":7800,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2360:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"}},"id":7801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2362:10:27","memberName":"_tokenURIs","nodeType":"MemberAccess","referencedDeclaration":7734,"src":"2360:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":7803,"indexExpression":{"id":7802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"2373:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2360:21:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2334:47:27"},{"assignments":[7806],"declarations":[{"constant":false,"id":7806,"mutability":"mutable","name":"base","nameLocation":"2405:4:27","nodeType":"VariableDeclaration","scope":7842,"src":"2391:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7805,"name":"string","nodeType":"ElementaryTypeName","src":"2391:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7809,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7807,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"2412:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2412:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2391:31:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7812,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"2501:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2495:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7810,"name":"bytes","nodeType":"ElementaryTypeName","src":"2495:5:27","typeDescriptions":{}}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2495:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2507:6:27","memberName":"length","nodeType":"MemberAccess","src":"2495:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2495:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7820,"nodeType":"IfStatement","src":"2491:70:27","trueBody":{"id":7819,"nodeType":"Block","src":"2520:41:27","statements":[{"expression":{"id":7817,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"2541:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7787,"id":7818,"nodeType":"Return","src":"2534:16:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7823,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"2666:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2660:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7821,"name":"bytes","nodeType":"ElementaryTypeName","src":"2660:5:27","typeDescriptions":{}}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2677:6:27","memberName":"length","nodeType":"MemberAccess","src":"2660:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2686:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2660:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"2656:95:27","trueBody":{"id":7835,"nodeType":"Block","src":"2689:62:27","statements":[{"expression":{"arguments":[{"id":7831,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"2724:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7832,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"2730:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2710:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7828,"name":"string","nodeType":"ElementaryTypeName","src":"2710:6:27","typeDescriptions":{}}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:27","memberName":"concat","nodeType":"MemberAccess","src":"2710:13:27","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2710:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7787,"id":7834,"nodeType":"Return","src":"2703:37:27"}]}},{"expression":{"arguments":[{"id":7839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"2783:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7837,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2768:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorageUpgradeable_$7871_$","typeString":"type(contract super ERC721URIStorageUpgradeable)"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2774:8:27","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":6883,"src":"2768:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7787,"id":7841,"nodeType":"Return","src":"2761:30:27"}]},"documentation":{"id":7780,"nodeType":"StructuredDocumentation","src":"2068:55:27","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":7843,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2137:8:27","nodeType":"FunctionDefinition","overrides":{"id":7784,"nodeType":"OverrideSpecifier","overrides":[],"src":"2183:8:27"},"parameters":{"id":7783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"tokenId","nameLocation":"2154:7:27","nodeType":"VariableDeclaration","scope":7843,"src":"2146:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2146:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2145:17:27"},"returnParameters":{"id":7787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7843,"src":"2201:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7785,"name":"string","nodeType":"ElementaryTypeName","src":"2201:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2200:15:27"},"scope":7871,"src":"2128:670:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7869,"nodeType":"Block","src":"2998:163:27","statements":[{"assignments":[7853],"declarations":[{"constant":false,"id":7853,"mutability":"mutable","name":"$","nameLocation":"3040:1:27","nodeType":"VariableDeclaration","scope":7869,"src":"3008:33:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"},"typeName":{"id":7852,"nodeType":"UserDefinedTypeName","pathNode":{"id":7851,"name":"ERC721URIStorageStorage","nameLocations":["3008:23:27"],"nodeType":"IdentifierPath","referencedDeclaration":7735,"src":"3008:23:27"},"referencedDeclaration":7735,"src":"3008:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage"}},"visibility":"internal"}],"id":7856,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7854,"name":"_getERC721URIStorageStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"3044:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721URIStorageStorage_$7735_storage_ptr_$","typeString":"function () pure returns (struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3008:65:27"},{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7857,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"3083:1:27","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721URIStorageStorage_$7735_storage_ptr","typeString":"struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage storage pointer"}},"id":7860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3085:10:27","memberName":"_tokenURIs","nodeType":"MemberAccess","referencedDeclaration":7734,"src":"3083:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":7861,"indexExpression":{"id":7859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"3096:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3083:21:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7862,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"3107:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3083:33:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7864,"nodeType":"ExpressionStatement","src":"3083:33:27"},{"eventCall":{"arguments":[{"id":7866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"3146:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7865,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"3131:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"EmitStatement","src":"3126:28:27"}]},"documentation":{"id":7844,"nodeType":"StructuredDocumentation","src":"2804:108:27","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":7870,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"2926:12:27","nodeType":"FunctionDefinition","parameters":{"id":7849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7846,"mutability":"mutable","name":"tokenId","nameLocation":"2947:7:27","nodeType":"VariableDeclaration","scope":7870,"src":"2939:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7848,"mutability":"mutable","name":"_tokenURI","nameLocation":"2970:9:27","nodeType":"VariableDeclaration","scope":7870,"src":"2956:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7847,"name":"string","nodeType":"ElementaryTypeName","src":"2956:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2938:42:27"},"returnParameters":{"id":7850,"nodeType":"ParameterList","parameters":[],"src":"2998:0:27"},"scope":7871,"src":"2917:244:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":7872,"src":"578:2585:27","usedErrors":[110,115,124,129,134,141,146,151,6202,6205],"usedEvents":[40,47,519,528,537,6210]}],"src":"128:3036:27"},"id":27},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[7917],"Initializable":[6439]},"id":7918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7873,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:28"},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":7875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7918,"sourceUnit":6440,"src":"126:63:28","symbolAliases":[{"foreign":{"id":7874,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"134:13:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7877,"name":"Initializable","nameLocations":["728:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"728:13:28"},"id":7878,"nodeType":"InheritanceSpecifier","src":"728:13:28"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7876,"nodeType":"StructuredDocumentation","src":"191:496:28","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":7917,"linearizedBaseContracts":[7917,6439],"name":"ContextUpgradeable","nameLocation":"706:18:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7883,"nodeType":"Block","src":"800:7:28","statements":[]},"id":7884,"implemented":true,"kind":"function","modifiers":[{"id":7881,"kind":"modifierInvocation","modifierName":{"id":7880,"name":"onlyInitializing","nameLocations":["783:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"783:16:28"},"nodeType":"ModifierInvocation","src":"783:16:28"}],"name":"__Context_init","nameLocation":"757:14:28","nodeType":"FunctionDefinition","parameters":{"id":7879,"nodeType":"ParameterList","parameters":[],"src":"771:2:28"},"returnParameters":{"id":7882,"nodeType":"ParameterList","parameters":[],"src":"800:0:28"},"scope":7917,"src":"748:59:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7889,"nodeType":"Block","src":"875:7:28","statements":[]},"id":7890,"implemented":true,"kind":"function","modifiers":[{"id":7887,"kind":"modifierInvocation","modifierName":{"id":7886,"name":"onlyInitializing","nameLocations":["858:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"858:16:28"},"nodeType":"ModifierInvocation","src":"858:16:28"}],"name":"__Context_init_unchained","nameLocation":"822:24:28","nodeType":"FunctionDefinition","parameters":{"id":7885,"nodeType":"ParameterList","parameters":[],"src":"846:2:28"},"returnParameters":{"id":7888,"nodeType":"ParameterList","parameters":[],"src":"875:0:28"},"scope":7917,"src":"813:69:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7898,"nodeType":"Block","src":"949:34:28","statements":[{"expression":{"expression":{"id":7895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:28","memberName":"sender","nodeType":"MemberAccess","src":"966:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7894,"id":7897,"nodeType":"Return","src":"959:17:28"}]},"id":7899,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:28","nodeType":"FunctionDefinition","parameters":{"id":7891,"nodeType":"ParameterList","parameters":[],"src":"906:2:28"},"returnParameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7899,"src":"940:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7892,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:28"},"scope":7917,"src":"887:96:28","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7907,"nodeType":"Block","src":"1056:32:28","statements":[{"expression":{"expression":{"id":7904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:28","memberName":"data","nodeType":"MemberAccess","src":"1073:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":7903,"id":7906,"nodeType":"Return","src":"1066:15:28"}]},"id":7908,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:28","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[],"src":"1006:2:28"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7908,"src":"1040:14:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7901,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:28"},"scope":7917,"src":"989:99:28","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7915,"nodeType":"Block","src":"1166:25:28","statements":[{"expression":{"hexValue":"30","id":7913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7912,"id":7914,"nodeType":"Return","src":"1176:8:28"}]},"id":7916,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:28","nodeType":"FunctionDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[],"src":"1123:2:28"},"returnParameters":{"id":7912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7916,"src":"1157:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:28"},"scope":7917,"src":"1094:97:28","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":7918,"src":"688:505:28","usedErrors":[6202,6205],"usedEvents":[6210]}],"src":"101:1093:28"},"id":28},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[7991]},"id":7992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7919,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":7920,"nodeType":"StructuredDocumentation","src":"112:311:29","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":7991,"linearizedBaseContracts":[7991],"name":"CountersUpgradeable","nameLocation":"432:19:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":7923,"members":[{"constant":false,"id":7922,"mutability":"mutable","name":"_value","nameLocation":"805:6:29","nodeType":"VariableDeclaration","scope":7923,"src":"797:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7921,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:29","nodeType":"StructDefinition","scope":7991,"src":"458:374:29","visibility":"public"},{"body":{"id":7934,"nodeType":"Block","src":"912:38:29","statements":[{"expression":{"expression":{"id":7931,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"929:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":7932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"929:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7930,"id":7933,"nodeType":"Return","src":"922:21:29"}]},"id":7935,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:29","nodeType":"FunctionDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"counter","nameLocation":"871:7:29","nodeType":"VariableDeclaration","scope":7935,"src":"855:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":7925,"nodeType":"UserDefinedTypeName","pathNode":{"id":7924,"name":"Counter","nameLocations":["855:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"855:7:29"},"referencedDeclaration":7923,"src":"855:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:29"},"returnParameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7935,"src":"903:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7928,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:29"},"scope":7991,"src":"838:112:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7948,"nodeType":"Block","src":"1009:70:29","statements":[{"id":7947,"nodeType":"UncheckedBlock","src":"1019:54:29","statements":[{"expression":{"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7941,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"1043:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":7943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"1043:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7946,"nodeType":"ExpressionStatement","src":"1043:19:29"}]}]},"id":7949,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:29","nodeType":"FunctionDefinition","parameters":{"id":7939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7938,"mutability":"mutable","name":"counter","nameLocation":"991:7:29","nodeType":"VariableDeclaration","scope":7949,"src":"975:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":7937,"nodeType":"UserDefinedTypeName","pathNode":{"id":7936,"name":"Counter","nameLocations":["975:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"975:7:29"},"referencedDeclaration":7923,"src":"975:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:29"},"returnParameters":{"id":7940,"nodeType":"ParameterList","parameters":[],"src":"1009:0:29"},"scope":7991,"src":"956:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7976,"nodeType":"Block","src":"1138:176:29","statements":[{"assignments":[7956],"declarations":[{"constant":false,"id":7956,"mutability":"mutable","name":"value","nameLocation":"1156:5:29","nodeType":"VariableDeclaration","scope":7976,"src":"1148:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7955,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7959,"initialValue":{"expression":{"id":7957,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"1164:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":7958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"1164:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"1196:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":7964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":7960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1188:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7966,"nodeType":"ExpressionStatement","src":"1188:49:29"},{"id":7975,"nodeType":"UncheckedBlock","src":"1247:61:29","statements":[{"expression":{"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7967,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"1271:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":7969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"1271:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"1288:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7974,"nodeType":"ExpressionStatement","src":"1271:26:29"}]}]},"id":7977,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:29","nodeType":"FunctionDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"counter","nameLocation":"1120:7:29","nodeType":"VariableDeclaration","scope":7977,"src":"1104:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":7951,"nodeType":"UserDefinedTypeName","pathNode":{"id":7950,"name":"Counter","nameLocations":["1104:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"1104:7:29"},"referencedDeclaration":7923,"src":"1104:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:29"},"returnParameters":{"id":7954,"nodeType":"ParameterList","parameters":[],"src":"1138:0:29"},"scope":7991,"src":"1085:229:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7989,"nodeType":"Block","src":"1369:35:29","statements":[{"expression":{"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7983,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1379:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":7985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:29","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"1379:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7988,"nodeType":"ExpressionStatement","src":"1379:18:29"}]},"id":7990,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:29","nodeType":"FunctionDefinition","parameters":{"id":7981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7980,"mutability":"mutable","name":"counter","nameLocation":"1351:7:29","nodeType":"VariableDeclaration","scope":7990,"src":"1335:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":7979,"nodeType":"UserDefinedTypeName","pathNode":{"id":7978,"name":"Counter","nameLocations":["1335:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":7923,"src":"1335:7:29"},"referencedDeclaration":7923,"src":"1335:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$7923_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:29"},"returnParameters":{"id":7982,"nodeType":"ParameterList","parameters":[],"src":"1369:0:29"},"scope":7991,"src":"1320:84:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7992,"src":"424:982:29","usedErrors":[],"usedEvents":[]}],"src":"87:1320:29"},"id":29},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[8031],"IERC165":[2413],"Initializable":[6439]},"id":8032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7993,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8032,"sourceUnit":2414,"src":"140:80:30","symbolAliases":[{"foreign":{"id":7994,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"148:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":7997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8032,"sourceUnit":6440,"src":"221:66:30","symbolAliases":[{"foreign":{"id":7996,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"229:13:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7999,"name":"Initializable","nameLocations":["808:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":6439,"src":"808:13:30"},"id":8000,"nodeType":"InheritanceSpecifier","src":"808:13:30"},{"baseName":{"id":8001,"name":"IERC165","nameLocations":["823:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":2413,"src":"823:7:30"},"id":8002,"nodeType":"InheritanceSpecifier","src":"823:7:30"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7998,"nodeType":"StructuredDocumentation","src":"289:479:30","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":8031,"linearizedBaseContracts":[8031,2413,6439],"name":"ERC165Upgradeable","nameLocation":"787:17:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":8007,"nodeType":"Block","src":"888:7:30","statements":[]},"id":8008,"implemented":true,"kind":"function","modifiers":[{"id":8005,"kind":"modifierInvocation","modifierName":{"id":8004,"name":"onlyInitializing","nameLocations":["871:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"871:16:30"},"nodeType":"ModifierInvocation","src":"871:16:30"}],"name":"__ERC165_init","nameLocation":"846:13:30","nodeType":"FunctionDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[],"src":"859:2:30"},"returnParameters":{"id":8006,"nodeType":"ParameterList","parameters":[],"src":"888:0:30"},"scope":8031,"src":"837:58:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8013,"nodeType":"Block","src":"962:7:30","statements":[]},"id":8014,"implemented":true,"kind":"function","modifiers":[{"id":8011,"kind":"modifierInvocation","modifierName":{"id":8010,"name":"onlyInitializing","nameLocations":["945:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":6348,"src":"945:16:30"},"nodeType":"ModifierInvocation","src":"945:16:30"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:30","nodeType":"FunctionDefinition","parameters":{"id":8009,"nodeType":"ParameterList","parameters":[],"src":"933:2:30"},"returnParameters":{"id":8012,"nodeType":"ParameterList","parameters":[],"src":"962:0:30"},"scope":8031,"src":"901:68:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2412],"body":{"id":8029,"nodeType":"Block","src":"1117:64:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8022,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"1134:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":8024,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1154:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2413_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2413_$","typeString":"type(contract IERC165)"}],"id":8023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2413","typeString":"type(contract IERC165)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:30","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8021,"id":8028,"nodeType":"Return","src":"1127:47:30"}]},"documentation":{"id":8015,"nodeType":"StructuredDocumentation","src":"974:56:30","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":8030,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:30","nodeType":"FunctionDefinition","parameters":{"id":8018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8017,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:30","nodeType":"VariableDeclaration","scope":8030,"src":"1062:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8016,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:30"},"returnParameters":{"id":8021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8030,"src":"1111:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8019,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:30"},"scope":8031,"src":"1035:146:30","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":8032,"src":"769:414:30","usedErrors":[6202,6205],"usedEvents":[6210]}],"src":"114:1070:30"},"id":30}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220282d6e13f29150aea007485a29c89218031bb875cd2872ee118a69af5d9c60c364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2D PUSH15 0x13F29150AEA007485A29C89218031B 0xB8 PUSH22 0xCD2872EE118A69AF5D9C60C364736F6C634300081C00 CALLER ","sourceMap":"496:5741:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206404359a087c2b99ae5f8c99f62a39dd41630c53c3d9ba09067fde3ee2e3131464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4359A087C 0x2B SWAP10 0xAE PUSH0 DUP13 SWAP10 0xF6 0x2A CODECOPY 0xDD COINBASE PUSH4 0xC53C3D9 0xBA MULMOD MOD PUSH32 0xDE3EE2E3131464736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"431:1480:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206404359a087c2b99ae5f8c99f62a39dd41630c53c3d9ba09067fde3ee2e3131464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4359A087C 0x2B SWAP10 0xAE PUSH0 DUP13 SWAP10 0xF6 0x2A CODECOPY 0xDD COINBASE PUSH4 0xC53C3D9 0xBA MULMOD MOD PUSH32 0xDE3EE2E3131464736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"431:1480:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd6f7f92807443dc7e228416221bebd35dca6310896354927f3b5b5b186ab58764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH16 0x7F92807443DC7E228416221BEBD35DCA PUSH4 0x10896354 SWAP3 PUSH32 0x3B5B5B186AB58764736F6C634300081C00330000000000000000000000000000 ","sourceMap":"233:5815:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b93eefa26a1cecc5003f9a8a0abb4a23d8503ef65d8338e7fd9d3442221a9e9c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY 0xEF LOG2 PUSH11 0x1CECC5003F9A8A0ABB4A23 0xD8 POP RETURNDATACOPY 0xF6 TSTORE DUP4 CODESIZE 0xE7 REVERT SWAP14 CALLVALUE TIMESTAMP 0x22 BYTE SWAP15 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/contract1.sol":{"OurUpgradeableNFT1":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"greeting","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015604257600080fd5b50608051611b5861006c60003960008181610780015281816107d50152610a040152611b586000f3fe60806040526004361061007b5760003560e01c8063ad3cb1cc1161004e578063ad3cb1cc14610109578063ef690cc014610134578063f2fde38b1461015f578063f62d1888146101885761007b565b80634f1ef2861461008057806352d1902d1461009c578063715018a6146100c75780638da5cb5b146100de575b600080fd5b61009a600480360381019061009591906113dd565b6101b1565b005b3480156100a857600080fd5b506100b16101d0565b6040516100be9190611452565b60405180910390f35b3480156100d357600080fd5b506100dc610203565b005b3480156100ea57600080fd5b506100f361033d565b604051610100919061147c565b60405180910390f35b34801561011557600080fd5b5061011e610366565b60405161012b9190611516565b60405180910390f35b34801561014057600080fd5b5061014961039f565b6040516101569190611516565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190611538565b61042d565b005b34801561019457600080fd5b506101af60048036038101906101aa91906115c5565b6105d5565b005b6101b961077e565b6101c282610864565b6101cc82826108e3565b5050565b60006101da610a02565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b61020b610a89565b73ffffffffffffffffffffffffffffffffffffffff1661022961033d565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061165e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b603280546103ac906116ad565b80601f01602080910402602001604051908101604052809291908181526020018280546103d8906116ad565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b505050505081565b610435610a89565b73ffffffffffffffffffffffffffffffffffffffff1661045361033d565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a09061165e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90611750565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006105df610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561062d5750825b9050600060018367ffffffffffffffff16148015610662575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610670575080155b156106a7576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106f75760018560000160086101000a81548160ff0219169083151502179055505b868660329182610708929190611931565b50610711610ab9565b610719610ac3565b83156107755760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161076c9190611a50565b60405180910390a15b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061082b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610812610c58565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610862576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61086c610a89565b73ffffffffffffffffffffffffffffffffffffffff1661088a61033d565b73ffffffffffffffffffffffffffffffffffffffff16146108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d79061165e565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561094b57506040513d601f19601f820116820180604052508101906109489190611a97565b60015b61098c57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610983919061147c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146109f357806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016109ea9190611452565b60405180910390fd5b6109fd8383610caf565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610a87576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610ac1610d22565b565b6000610acd610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610b1b5750825b9050600060018367ffffffffffffffff16148015610b50575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b5e575080155b15610b95576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610be55760018560000160086101000a81548160ff0219169083151502179055505b610bed610d62565b610bf5610d6c565b8315610c515760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c489190611a50565b60405180910390a15b5050505050565b6000610c867f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f99565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610cb882610fa3565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610d1557610d0f8282611070565b50610d1e565b610d1d6110f4565b5b5050565b610d2a611131565b610d60576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610d6a610d22565b565b6000610d76610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610dc45750825b9050600060018367ffffffffffffffff16148015610df9575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e07575080155b15610e3e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e8e5760018560000160086101000a81548160ff0219169083151502179055505b6000610e98610a89565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508315610f925760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610f899190611a50565b60405180910390a15b5050505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610fff57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610ff6919061147c565b60405180910390fd5b8061102c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f99565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161109a9190611b0b565b600060405180830381855af49150503d80600081146110d5576040519150601f19603f3d011682016040523d82523d6000602084013e6110da565b606091505b50915091506110ea858383611151565b9250505092915050565b600034111561112f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061113b610a91565b60000160089054906101000a900460ff16905090565b60608261116657611161826111e0565b6111d8565b6000825114801561118e575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156111d057836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111c7919061147c565b60405180910390fd5b8190506111d9565b5b9392505050565b6000815111156111f35780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126482611239565b9050919050565b61127481611259565b811461127f57600080fd5b50565b6000813590506112918161126b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112ea826112a1565b810181811067ffffffffffffffff82111715611309576113086112b2565b5b80604052505050565b600061131c611225565b905061132882826112e1565b919050565b600067ffffffffffffffff821115611348576113476112b2565b5b611351826112a1565b9050602081019050919050565b82818337600083830152505050565b600061138061137b8461132d565b611312565b90508281526020810184848401111561139c5761139b61129c565b5b6113a784828561135e565b509392505050565b600082601f8301126113c4576113c3611297565b5b81356113d484826020860161136d565b91505092915050565b600080604083850312156113f4576113f361122f565b5b600061140285828601611282565b925050602083013567ffffffffffffffff81111561142357611422611234565b5b61142f858286016113af565b9150509250929050565b6000819050919050565b61144c81611439565b82525050565b60006020820190506114676000830184611443565b92915050565b61147681611259565b82525050565b6000602082019050611491600083018461146d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d15780820151818401526020810190506114b6565b60008484015250505050565b60006114e882611497565b6114f281856114a2565b93506115028185602086016114b3565b61150b816112a1565b840191505092915050565b6000602082019050818103600083015261153081846114dd565b905092915050565b60006020828403121561154e5761154d61122f565b5b600061155c84828501611282565b91505092915050565b600080fd5b600080fd5b60008083601f84011261158557611584611297565b5b8235905067ffffffffffffffff8111156115a2576115a1611565565b5b6020830191508360018202830111156115be576115bd61156a565b5b9250929050565b600080602083850312156115dc576115db61122f565b5b600083013567ffffffffffffffff8111156115fa576115f9611234565b5b6116068582860161156f565b92509250509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116486020836114a2565b915061165382611612565b602082019050919050565b600060208201905081810360008301526116778161163b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116c557607f821691505b6020821081036116d8576116d761167e565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061173a6026836114a2565b9150611745826116de565b604082019050919050565b600060208201905081810360008301526117698161172d565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117a0565b6117e786836117a0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061182e611829611824846117ff565b611809565b6117ff565b9050919050565b6000819050919050565b61184883611813565b61185c61185482611835565b8484546117ad565b825550505050565b600090565b611871611864565b61187c81848461183f565b505050565b5b818110156118a057611895600082611869565b600181019050611882565b5050565b601f8211156118e5576118b68161177b565b6118bf84611790565b810160208510156118ce578190505b6118e26118da85611790565b830182611881565b50505b505050565b600082821c905092915050565b6000611908600019846008026118ea565b1980831691505092915050565b600061192183836118f7565b9150826002028217905092915050565b61193b8383611770565b67ffffffffffffffff811115611954576119536112b2565b5b61195e82546116ad565b6119698282856118a4565b6000601f8311600181146119985760008415611986578287013590505b6119908582611915565b8655506119f8565b601f1984166119a68661177b565b60005b828110156119ce578489013582556001820191506020850194506020810190506119a9565b868310156119eb57848901356119e7601f8916826118f7565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611a3a611a35611a3084611a01565b611809565b611a0b565b9050919050565b611a4a81611a1f565b82525050565b6000602082019050611a656000830184611a41565b92915050565b611a7481611439565b8114611a7f57600080fd5b50565b600081519050611a9181611a6b565b92915050565b600060208284031215611aad57611aac61122f565b5b6000611abb84828501611a82565b91505092915050565b600081519050919050565b600081905092915050565b6000611ae582611ac4565b611aef8185611acf565b9350611aff8185602086016114b3565b80840191505092915050565b6000611b178284611ada565b91508190509291505056fea264697066735822122097025df6f5ed8645d8d74cbe1c1daf509dc565df79898ff0eb8378a50c42fa4264736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1B58 PUSH2 0x6C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x780 ADD MSTORE DUP2 DUP2 PUSH2 0x7D5 ADD MSTORE PUSH2 0xA04 ADD MSTORE PUSH2 0x1B58 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xEF690CC0 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x188 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1C2 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x1CC DUP3 DUP3 PUSH2 0x8E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA PUSH2 0xA02 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20B PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229 PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x16AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D8 SWAP1 PUSH2 0x16AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x425 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x425 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x408 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x453 PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x62D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x662 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP7 PUSH1 0x32 SWAP2 DUP3 PUSH2 0x708 SWAP3 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST POP PUSH2 0x711 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x719 PUSH2 0xAC3 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x82B JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x812 PUSH2 0xC58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x86C PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x94B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x98C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0xD22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACD PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB1B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBED PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0xD6C JUMP JUMPDEST DUP4 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC48 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC86 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB8 DUP3 PUSH2 0xFA3 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD0F DUP3 DUP3 PUSH2 0x1070 JUMP JUMPDEST POP PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xD1D PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2A PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD6A PUSH2 0xD22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD76 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDC4 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDF9 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0xE98 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xFFF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x102C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10EA DUP6 DUP4 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113B PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1166 JUMPI PUSH2 0x1161 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11D0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x11D9 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11F3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 DUP3 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP2 EQ PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1291 DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x12A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x1328 DUP3 DUP3 PUSH2 0x12E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST PUSH2 0x1351 DUP3 PUSH2 0x12A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 PUSH2 0x137B DUP5 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x129C JUMP JUMPDEST JUMPDEST PUSH2 0x13A7 DUP5 DUP3 DUP6 PUSH2 0x135E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x1297 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13D4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP6 DUP3 DUP7 ADD PUSH2 0x1282 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x1234 JUMP JUMPDEST JUMPDEST PUSH2 0x142F DUP6 DUP3 DUP7 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1467 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1491 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP3 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x14F2 DUP2 DUP6 PUSH2 0x14A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1502 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH2 0x154D PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x155C DUP5 DUP3 DUP6 ADD PUSH2 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0x1297 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15BE JUMPI PUSH2 0x15BD PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x1234 JUMP JUMPDEST JUMPDEST PUSH2 0x1606 DUP6 DUP3 DUP7 ADD PUSH2 0x156F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1648 PUSH1 0x20 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1653 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1677 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x167E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A PUSH1 0x26 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1745 DUP3 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1769 DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x17DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x17E7 DUP7 DUP4 PUSH2 0x17A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182E PUSH2 0x1829 PUSH2 0x1824 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1848 DUP4 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x185C PUSH2 0x1854 DUP3 PUSH2 0x1835 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x17AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1871 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x187C DUP2 DUP5 DUP5 PUSH2 0x183F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI PUSH2 0x1895 PUSH1 0x0 DUP3 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1882 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18B6 DUP2 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x18BF DUP5 PUSH2 0x1790 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x18CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x18E2 PUSH2 0x18DA DUP6 PUSH2 0x1790 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x18EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 DUP4 DUP4 PUSH2 0x18F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x193B DUP4 DUP4 PUSH2 0x1770 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP3 SLOAD PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1969 DUP3 DUP3 DUP6 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1998 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1986 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1990 DUP6 DUP3 PUSH2 0x1915 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19A6 DUP7 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19CE JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x19EB JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x19E7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x18F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3A PUSH2 0x1A35 PUSH2 0x1A30 DUP5 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A91 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP5 DUP3 DUP6 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE5 DUP3 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x1AEF DUP2 DUP6 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 POP PUSH2 0x1AFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP3 DUP5 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 MUL TSTORE 0xF6 CREATE2 0xED DUP7 GASLIMIT 0xD8 0xD7 0x4C 0xBE SHR SAR 0xAF POP SWAP14 0xC5 PUSH6 0xDF79898FF0EB DUP4 PUSH25 0xA50C42FA4264736F6C634300081C0033000000000000000000 ","sourceMap":"328:412:21:-:0;;;1171:4:25;1128:48;;;;;;;;;328:412:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_6463":{"entryPoint":870,"id":6463,"parameterSlots":0,"returnSlots":0},"@__Context_init_unchained_7890":{"entryPoint":3426,"id":7890,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_6084":{"entryPoint":2755,"id":6084,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_6107":{"entryPoint":3436,"id":6107,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_6493":{"entryPoint":2745,"id":6493,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_5968":{"entryPoint":2148,"id":5968,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_6361":{"entryPoint":3362,"id":6361,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_492":{"entryPoint":4340,"id":492,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_6569":{"entryPoint":2562,"id":6569,"parameterSlots":0,"returnSlots":0},"@_checkProxy_6553":{"entryPoint":1918,"id":6553,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_6438":{"entryPoint":2705,"id":6438,"parameterSlots":0,"returnSlots":1},"@_isInitializing_6429":{"entryPoint":4401,"id":6429,"parameterSlots":0,"returnSlots":1},"@_msgSender_7899":{"entryPoint":2697,"id":7899,"parameterSlots":0,"returnSlots":1},"@_revert_1002":{"entryPoint":4576,"id":1002,"parameterSlots":1,"returnSlots":0},"@_setImplementation_272":{"entryPoint":4003,"id":272,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_6620":{"entryPoint":2275,"id":6620,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_920":{"entryPoint":4208,"id":920,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1112":{"entryPoint":3993,"id":1112,"parameterSlots":1,"returnSlots":1},"@getImplementation_245":{"entryPoint":3160,"id":245,"parameterSlots":0,"returnSlots":1},"@greeting_5941":{"entryPoint":927,"id":5941,"parameterSlots":0,"returnSlots":0},"@initialize_5959":{"entryPoint":1493,"id":5959,"parameterSlots":2,"returnSlots":0},"@owner_6116":{"entryPoint":829,"id":6116,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_6511":{"entryPoint":464,"id":6511,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_6152":{"entryPoint":515,"id":6152,"parameterSlots":0,"returnSlots":0},"@transferOwnership_6180":{"entryPoint":1069,"id":6180,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_308":{"entryPoint":3247,"id":308,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_6531":{"entryPoint":433,"id":6531,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_960":{"entryPoint":4433,"id":960,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4973,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4738,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":6786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":5487,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":5432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":5085,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":5573,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5229,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5187,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":6721,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":5933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":5691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":6736,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5726,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":4882,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4645,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4909,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":6011,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6852,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":6000,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5271,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6863,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5282,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":6308,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4697,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5177,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":6657,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4665,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6143,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":6667,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":6273,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":6687,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":6163,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":6449,"id":null,"parameterSlots":3,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4958,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5299,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":6032,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5805,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":6421,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4833,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6153,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":6391,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":5758,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4786,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":6197,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5477,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4759,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5482,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4764,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4660,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4655,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4769,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":6048,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":6378,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":6249,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":5854,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":5650,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":6061,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":6207,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4715,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6763,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":6244,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:16796:31","nodeType":"YulBlock","src":"0:16796:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"379:81:31","nodeType":"YulBlock","src":"379:81:31","statements":[{"nativeSrc":"389:65:31","nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nativeSrc":"404:5:31","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nativeSrc":"411:42:31","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:31","nodeType":"YulIdentifier","src":"400:3:31"},"nativeSrc":"400:54:31","nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:31","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:31","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:31","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nativeSrc":"511:51:31","nodeType":"YulBlock","src":"511:51:31","statements":[{"nativeSrc":"521:35:31","nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nativeSrc":"550:5:31","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:31","nodeType":"YulIdentifier","src":"532:17:31"},"nativeSrc":"532:24:31","nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:31","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:31","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:31","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nativeSrc":"611:79:31","nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nativeSrc":"668:16:31","nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:31","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:31","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:31","nodeType":"YulIdentifier","src":"670:6:31"},"nativeSrc":"670:12:31","nodeType":"YulFunctionCall","src":"670:12:31"},"nativeSrc":"670:12:31","nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:31","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nativeSrc":"659:5:31","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:31","nodeType":"YulIdentifier","src":"641:17:31"},"nativeSrc":"641:24:31","nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nativeSrc":"631:2:31","nodeType":"YulIdentifier","src":"631:2:31"},"nativeSrc":"631:35:31","nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nativeSrc":"624:6:31","nodeType":"YulIdentifier","src":"624:6:31"},"nativeSrc":"624:43:31","nodeType":"YulFunctionCall","src":"624:43:31"},"nativeSrc":"621:63:31","nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:31","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nativeSrc":"748:87:31","nodeType":"YulBlock","src":"748:87:31","statements":[{"nativeSrc":"758:29:31","nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:31","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:31","nodeType":"YulIdentifier","src":"767:12:31"},"nativeSrc":"767:20:31","nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nativeSrc":"758:5:31","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:31","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:31","nodeType":"YulIdentifier","src":"796:26:31"},"nativeSrc":"796:33:31","nodeType":"YulFunctionCall","src":"796:33:31"},"nativeSrc":"796:33:31","nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:31","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nativeSrc":"734:3:31","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:31","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nativeSrc":"930:28:31","nodeType":"YulBlock","src":"930:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"947:1:31","nodeType":"YulLiteral","src":"947:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"950:1:31","nodeType":"YulLiteral","src":"950:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"940:6:31","nodeType":"YulIdentifier","src":"940:6:31"},"nativeSrc":"940:12:31","nodeType":"YulFunctionCall","src":"940:12:31"},"nativeSrc":"940:12:31","nodeType":"YulExpressionStatement","src":"940:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"841:117:31","nodeType":"YulFunctionDefinition","src":"841:117:31"},{"body":{"nativeSrc":"1053:28:31","nodeType":"YulBlock","src":"1053:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1070:1:31","nodeType":"YulLiteral","src":"1070:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1073:1:31","nodeType":"YulLiteral","src":"1073:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1063:6:31","nodeType":"YulIdentifier","src":"1063:6:31"},"nativeSrc":"1063:12:31","nodeType":"YulFunctionCall","src":"1063:12:31"},"nativeSrc":"1063:12:31","nodeType":"YulExpressionStatement","src":"1063:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"964:117:31","nodeType":"YulFunctionDefinition","src":"964:117:31"},{"body":{"nativeSrc":"1135:54:31","nodeType":"YulBlock","src":"1135:54:31","statements":[{"nativeSrc":"1145:38:31","nodeType":"YulAssignment","src":"1145:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1163:5:31","nodeType":"YulIdentifier","src":"1163:5:31"},{"kind":"number","nativeSrc":"1170:2:31","nodeType":"YulLiteral","src":"1170:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1159:3:31","nodeType":"YulIdentifier","src":"1159:3:31"},"nativeSrc":"1159:14:31","nodeType":"YulFunctionCall","src":"1159:14:31"},{"arguments":[{"kind":"number","nativeSrc":"1179:2:31","nodeType":"YulLiteral","src":"1179:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1175:3:31","nodeType":"YulIdentifier","src":"1175:3:31"},"nativeSrc":"1175:7:31","nodeType":"YulFunctionCall","src":"1175:7:31"}],"functionName":{"name":"and","nativeSrc":"1155:3:31","nodeType":"YulIdentifier","src":"1155:3:31"},"nativeSrc":"1155:28:31","nodeType":"YulFunctionCall","src":"1155:28:31"},"variableNames":[{"name":"result","nativeSrc":"1145:6:31","nodeType":"YulIdentifier","src":"1145:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1087:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1118:5:31","nodeType":"YulTypedName","src":"1118:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1128:6:31","nodeType":"YulTypedName","src":"1128:6:31","type":""}],"src":"1087:102:31"},{"body":{"nativeSrc":"1223:152:31","nodeType":"YulBlock","src":"1223:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1240:1:31","nodeType":"YulLiteral","src":"1240:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1243:77:31","nodeType":"YulLiteral","src":"1243:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1233:6:31","nodeType":"YulIdentifier","src":"1233:6:31"},"nativeSrc":"1233:88:31","nodeType":"YulFunctionCall","src":"1233:88:31"},"nativeSrc":"1233:88:31","nodeType":"YulExpressionStatement","src":"1233:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1337:1:31","nodeType":"YulLiteral","src":"1337:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"1340:4:31","nodeType":"YulLiteral","src":"1340:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1330:6:31","nodeType":"YulIdentifier","src":"1330:6:31"},"nativeSrc":"1330:15:31","nodeType":"YulFunctionCall","src":"1330:15:31"},"nativeSrc":"1330:15:31","nodeType":"YulExpressionStatement","src":"1330:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1361:1:31","nodeType":"YulLiteral","src":"1361:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1364:4:31","nodeType":"YulLiteral","src":"1364:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1354:6:31","nodeType":"YulIdentifier","src":"1354:6:31"},"nativeSrc":"1354:15:31","nodeType":"YulFunctionCall","src":"1354:15:31"},"nativeSrc":"1354:15:31","nodeType":"YulExpressionStatement","src":"1354:15:31"}]},"name":"panic_error_0x41","nativeSrc":"1195:180:31","nodeType":"YulFunctionDefinition","src":"1195:180:31"},{"body":{"nativeSrc":"1424:238:31","nodeType":"YulBlock","src":"1424:238:31","statements":[{"nativeSrc":"1434:58:31","nodeType":"YulVariableDeclaration","src":"1434:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"1456:6:31","nodeType":"YulIdentifier","src":"1456:6:31"},{"arguments":[{"name":"size","nativeSrc":"1486:4:31","nodeType":"YulIdentifier","src":"1486:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1464:21:31","nodeType":"YulIdentifier","src":"1464:21:31"},"nativeSrc":"1464:27:31","nodeType":"YulFunctionCall","src":"1464:27:31"}],"functionName":{"name":"add","nativeSrc":"1452:3:31","nodeType":"YulIdentifier","src":"1452:3:31"},"nativeSrc":"1452:40:31","nodeType":"YulFunctionCall","src":"1452:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"1438:10:31","nodeType":"YulTypedName","src":"1438:10:31","type":""}]},{"body":{"nativeSrc":"1603:22:31","nodeType":"YulBlock","src":"1603:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1605:16:31","nodeType":"YulIdentifier","src":"1605:16:31"},"nativeSrc":"1605:18:31","nodeType":"YulFunctionCall","src":"1605:18:31"},"nativeSrc":"1605:18:31","nodeType":"YulExpressionStatement","src":"1605:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1546:10:31","nodeType":"YulIdentifier","src":"1546:10:31"},{"kind":"number","nativeSrc":"1558:18:31","nodeType":"YulLiteral","src":"1558:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1543:2:31","nodeType":"YulIdentifier","src":"1543:2:31"},"nativeSrc":"1543:34:31","nodeType":"YulFunctionCall","src":"1543:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1582:10:31","nodeType":"YulIdentifier","src":"1582:10:31"},{"name":"memPtr","nativeSrc":"1594:6:31","nodeType":"YulIdentifier","src":"1594:6:31"}],"functionName":{"name":"lt","nativeSrc":"1579:2:31","nodeType":"YulIdentifier","src":"1579:2:31"},"nativeSrc":"1579:22:31","nodeType":"YulFunctionCall","src":"1579:22:31"}],"functionName":{"name":"or","nativeSrc":"1540:2:31","nodeType":"YulIdentifier","src":"1540:2:31"},"nativeSrc":"1540:62:31","nodeType":"YulFunctionCall","src":"1540:62:31"},"nativeSrc":"1537:88:31","nodeType":"YulIf","src":"1537:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1641:2:31","nodeType":"YulLiteral","src":"1641:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1645:10:31","nodeType":"YulIdentifier","src":"1645:10:31"}],"functionName":{"name":"mstore","nativeSrc":"1634:6:31","nodeType":"YulIdentifier","src":"1634:6:31"},"nativeSrc":"1634:22:31","nodeType":"YulFunctionCall","src":"1634:22:31"},"nativeSrc":"1634:22:31","nodeType":"YulExpressionStatement","src":"1634:22:31"}]},"name":"finalize_allocation","nativeSrc":"1381:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1410:6:31","nodeType":"YulTypedName","src":"1410:6:31","type":""},{"name":"size","nativeSrc":"1418:4:31","nodeType":"YulTypedName","src":"1418:4:31","type":""}],"src":"1381:281:31"},{"body":{"nativeSrc":"1709:88:31","nodeType":"YulBlock","src":"1709:88:31","statements":[{"nativeSrc":"1719:30:31","nodeType":"YulAssignment","src":"1719:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1729:18:31","nodeType":"YulIdentifier","src":"1729:18:31"},"nativeSrc":"1729:20:31","nodeType":"YulFunctionCall","src":"1729:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"1719:6:31","nodeType":"YulIdentifier","src":"1719:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1778:6:31","nodeType":"YulIdentifier","src":"1778:6:31"},{"name":"size","nativeSrc":"1786:4:31","nodeType":"YulIdentifier","src":"1786:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1758:19:31","nodeType":"YulIdentifier","src":"1758:19:31"},"nativeSrc":"1758:33:31","nodeType":"YulFunctionCall","src":"1758:33:31"},"nativeSrc":"1758:33:31","nodeType":"YulExpressionStatement","src":"1758:33:31"}]},"name":"allocate_memory","nativeSrc":"1668:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1693:4:31","nodeType":"YulTypedName","src":"1693:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1702:6:31","nodeType":"YulTypedName","src":"1702:6:31","type":""}],"src":"1668:129:31"},{"body":{"nativeSrc":"1869:241:31","nodeType":"YulBlock","src":"1869:241:31","statements":[{"body":{"nativeSrc":"1974:22:31","nodeType":"YulBlock","src":"1974:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1976:16:31","nodeType":"YulIdentifier","src":"1976:16:31"},"nativeSrc":"1976:18:31","nodeType":"YulFunctionCall","src":"1976:18:31"},"nativeSrc":"1976:18:31","nodeType":"YulExpressionStatement","src":"1976:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1946:6:31","nodeType":"YulIdentifier","src":"1946:6:31"},{"kind":"number","nativeSrc":"1954:18:31","nodeType":"YulLiteral","src":"1954:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1943:2:31","nodeType":"YulIdentifier","src":"1943:2:31"},"nativeSrc":"1943:30:31","nodeType":"YulFunctionCall","src":"1943:30:31"},"nativeSrc":"1940:56:31","nodeType":"YulIf","src":"1940:56:31"},{"nativeSrc":"2006:37:31","nodeType":"YulAssignment","src":"2006:37:31","value":{"arguments":[{"name":"length","nativeSrc":"2036:6:31","nodeType":"YulIdentifier","src":"2036:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2014:21:31","nodeType":"YulIdentifier","src":"2014:21:31"},"nativeSrc":"2014:29:31","nodeType":"YulFunctionCall","src":"2014:29:31"},"variableNames":[{"name":"size","nativeSrc":"2006:4:31","nodeType":"YulIdentifier","src":"2006:4:31"}]},{"nativeSrc":"2080:23:31","nodeType":"YulAssignment","src":"2080:23:31","value":{"arguments":[{"name":"size","nativeSrc":"2092:4:31","nodeType":"YulIdentifier","src":"2092:4:31"},{"kind":"number","nativeSrc":"2098:4:31","nodeType":"YulLiteral","src":"2098:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2088:3:31","nodeType":"YulIdentifier","src":"2088:3:31"},"nativeSrc":"2088:15:31","nodeType":"YulFunctionCall","src":"2088:15:31"},"variableNames":[{"name":"size","nativeSrc":"2080:4:31","nodeType":"YulIdentifier","src":"2080:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"1803:307:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1853:6:31","nodeType":"YulTypedName","src":"1853:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1864:4:31","nodeType":"YulTypedName","src":"1864:4:31","type":""}],"src":"1803:307:31"},{"body":{"nativeSrc":"2180:84:31","nodeType":"YulBlock","src":"2180:84:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2204:3:31","nodeType":"YulIdentifier","src":"2204:3:31"},{"name":"src","nativeSrc":"2209:3:31","nodeType":"YulIdentifier","src":"2209:3:31"},{"name":"length","nativeSrc":"2214:6:31","nodeType":"YulIdentifier","src":"2214:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"2191:12:31","nodeType":"YulIdentifier","src":"2191:12:31"},"nativeSrc":"2191:30:31","nodeType":"YulFunctionCall","src":"2191:30:31"},"nativeSrc":"2191:30:31","nodeType":"YulExpressionStatement","src":"2191:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2241:3:31","nodeType":"YulIdentifier","src":"2241:3:31"},{"name":"length","nativeSrc":"2246:6:31","nodeType":"YulIdentifier","src":"2246:6:31"}],"functionName":{"name":"add","nativeSrc":"2237:3:31","nodeType":"YulIdentifier","src":"2237:3:31"},"nativeSrc":"2237:16:31","nodeType":"YulFunctionCall","src":"2237:16:31"},{"kind":"number","nativeSrc":"2255:1:31","nodeType":"YulLiteral","src":"2255:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2230:6:31","nodeType":"YulIdentifier","src":"2230:6:31"},"nativeSrc":"2230:27:31","nodeType":"YulFunctionCall","src":"2230:27:31"},"nativeSrc":"2230:27:31","nodeType":"YulExpressionStatement","src":"2230:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2116:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2162:3:31","nodeType":"YulTypedName","src":"2162:3:31","type":""},{"name":"dst","nativeSrc":"2167:3:31","nodeType":"YulTypedName","src":"2167:3:31","type":""},{"name":"length","nativeSrc":"2172:6:31","nodeType":"YulTypedName","src":"2172:6:31","type":""}],"src":"2116:148:31"},{"body":{"nativeSrc":"2353:340:31","nodeType":"YulBlock","src":"2353:340:31","statements":[{"nativeSrc":"2363:74:31","nodeType":"YulAssignment","src":"2363:74:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2429:6:31","nodeType":"YulIdentifier","src":"2429:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2388:40:31","nodeType":"YulIdentifier","src":"2388:40:31"},"nativeSrc":"2388:48:31","nodeType":"YulFunctionCall","src":"2388:48:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"2372:15:31","nodeType":"YulIdentifier","src":"2372:15:31"},"nativeSrc":"2372:65:31","nodeType":"YulFunctionCall","src":"2372:65:31"},"variableNames":[{"name":"array","nativeSrc":"2363:5:31","nodeType":"YulIdentifier","src":"2363:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2453:5:31","nodeType":"YulIdentifier","src":"2453:5:31"},{"name":"length","nativeSrc":"2460:6:31","nodeType":"YulIdentifier","src":"2460:6:31"}],"functionName":{"name":"mstore","nativeSrc":"2446:6:31","nodeType":"YulIdentifier","src":"2446:6:31"},"nativeSrc":"2446:21:31","nodeType":"YulFunctionCall","src":"2446:21:31"},"nativeSrc":"2446:21:31","nodeType":"YulExpressionStatement","src":"2446:21:31"},{"nativeSrc":"2476:27:31","nodeType":"YulVariableDeclaration","src":"2476:27:31","value":{"arguments":[{"name":"array","nativeSrc":"2491:5:31","nodeType":"YulIdentifier","src":"2491:5:31"},{"kind":"number","nativeSrc":"2498:4:31","nodeType":"YulLiteral","src":"2498:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2487:3:31","nodeType":"YulIdentifier","src":"2487:3:31"},"nativeSrc":"2487:16:31","nodeType":"YulFunctionCall","src":"2487:16:31"},"variables":[{"name":"dst","nativeSrc":"2480:3:31","nodeType":"YulTypedName","src":"2480:3:31","type":""}]},{"body":{"nativeSrc":"2541:83:31","nodeType":"YulBlock","src":"2541:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2543:77:31","nodeType":"YulIdentifier","src":"2543:77:31"},"nativeSrc":"2543:79:31","nodeType":"YulFunctionCall","src":"2543:79:31"},"nativeSrc":"2543:79:31","nodeType":"YulExpressionStatement","src":"2543:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2522:3:31","nodeType":"YulIdentifier","src":"2522:3:31"},{"name":"length","nativeSrc":"2527:6:31","nodeType":"YulIdentifier","src":"2527:6:31"}],"functionName":{"name":"add","nativeSrc":"2518:3:31","nodeType":"YulIdentifier","src":"2518:3:31"},"nativeSrc":"2518:16:31","nodeType":"YulFunctionCall","src":"2518:16:31"},{"name":"end","nativeSrc":"2536:3:31","nodeType":"YulIdentifier","src":"2536:3:31"}],"functionName":{"name":"gt","nativeSrc":"2515:2:31","nodeType":"YulIdentifier","src":"2515:2:31"},"nativeSrc":"2515:25:31","nodeType":"YulFunctionCall","src":"2515:25:31"},"nativeSrc":"2512:112:31","nodeType":"YulIf","src":"2512:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2670:3:31","nodeType":"YulIdentifier","src":"2670:3:31"},{"name":"dst","nativeSrc":"2675:3:31","nodeType":"YulIdentifier","src":"2675:3:31"},{"name":"length","nativeSrc":"2680:6:31","nodeType":"YulIdentifier","src":"2680:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2633:36:31","nodeType":"YulIdentifier","src":"2633:36:31"},"nativeSrc":"2633:54:31","nodeType":"YulFunctionCall","src":"2633:54:31"},"nativeSrc":"2633:54:31","nodeType":"YulExpressionStatement","src":"2633:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"2270:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2326:3:31","nodeType":"YulTypedName","src":"2326:3:31","type":""},{"name":"length","nativeSrc":"2331:6:31","nodeType":"YulTypedName","src":"2331:6:31","type":""},{"name":"end","nativeSrc":"2339:3:31","nodeType":"YulTypedName","src":"2339:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2347:5:31","nodeType":"YulTypedName","src":"2347:5:31","type":""}],"src":"2270:423:31"},{"body":{"nativeSrc":"2773:277:31","nodeType":"YulBlock","src":"2773:277:31","statements":[{"body":{"nativeSrc":"2822:83:31","nodeType":"YulBlock","src":"2822:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2824:77:31","nodeType":"YulIdentifier","src":"2824:77:31"},"nativeSrc":"2824:79:31","nodeType":"YulFunctionCall","src":"2824:79:31"},"nativeSrc":"2824:79:31","nodeType":"YulExpressionStatement","src":"2824:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2801:6:31","nodeType":"YulIdentifier","src":"2801:6:31"},{"kind":"number","nativeSrc":"2809:4:31","nodeType":"YulLiteral","src":"2809:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2797:3:31","nodeType":"YulIdentifier","src":"2797:3:31"},"nativeSrc":"2797:17:31","nodeType":"YulFunctionCall","src":"2797:17:31"},{"name":"end","nativeSrc":"2816:3:31","nodeType":"YulIdentifier","src":"2816:3:31"}],"functionName":{"name":"slt","nativeSrc":"2793:3:31","nodeType":"YulIdentifier","src":"2793:3:31"},"nativeSrc":"2793:27:31","nodeType":"YulFunctionCall","src":"2793:27:31"}],"functionName":{"name":"iszero","nativeSrc":"2786:6:31","nodeType":"YulIdentifier","src":"2786:6:31"},"nativeSrc":"2786:35:31","nodeType":"YulFunctionCall","src":"2786:35:31"},"nativeSrc":"2783:122:31","nodeType":"YulIf","src":"2783:122:31"},{"nativeSrc":"2914:34:31","nodeType":"YulVariableDeclaration","src":"2914:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"2941:6:31","nodeType":"YulIdentifier","src":"2941:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"2928:12:31","nodeType":"YulIdentifier","src":"2928:12:31"},"nativeSrc":"2928:20:31","nodeType":"YulFunctionCall","src":"2928:20:31"},"variables":[{"name":"length","nativeSrc":"2918:6:31","nodeType":"YulTypedName","src":"2918:6:31","type":""}]},{"nativeSrc":"2957:87:31","nodeType":"YulAssignment","src":"2957:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3017:6:31","nodeType":"YulIdentifier","src":"3017:6:31"},{"kind":"number","nativeSrc":"3025:4:31","nodeType":"YulLiteral","src":"3025:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3013:3:31","nodeType":"YulIdentifier","src":"3013:3:31"},"nativeSrc":"3013:17:31","nodeType":"YulFunctionCall","src":"3013:17:31"},{"name":"length","nativeSrc":"3032:6:31","nodeType":"YulIdentifier","src":"3032:6:31"},{"name":"end","nativeSrc":"3040:3:31","nodeType":"YulIdentifier","src":"3040:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"2966:46:31","nodeType":"YulIdentifier","src":"2966:46:31"},"nativeSrc":"2966:78:31","nodeType":"YulFunctionCall","src":"2966:78:31"},"variableNames":[{"name":"array","nativeSrc":"2957:5:31","nodeType":"YulIdentifier","src":"2957:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"2712:338:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2751:6:31","nodeType":"YulTypedName","src":"2751:6:31","type":""},{"name":"end","nativeSrc":"2759:3:31","nodeType":"YulTypedName","src":"2759:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2767:5:31","nodeType":"YulTypedName","src":"2767:5:31","type":""}],"src":"2712:338:31"},{"body":{"nativeSrc":"3148:560:31","nodeType":"YulBlock","src":"3148:560:31","statements":[{"body":{"nativeSrc":"3194:83:31","nodeType":"YulBlock","src":"3194:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3196:77:31","nodeType":"YulIdentifier","src":"3196:77:31"},"nativeSrc":"3196:79:31","nodeType":"YulFunctionCall","src":"3196:79:31"},"nativeSrc":"3196:79:31","nodeType":"YulExpressionStatement","src":"3196:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3169:7:31","nodeType":"YulIdentifier","src":"3169:7:31"},{"name":"headStart","nativeSrc":"3178:9:31","nodeType":"YulIdentifier","src":"3178:9:31"}],"functionName":{"name":"sub","nativeSrc":"3165:3:31","nodeType":"YulIdentifier","src":"3165:3:31"},"nativeSrc":"3165:23:31","nodeType":"YulFunctionCall","src":"3165:23:31"},{"kind":"number","nativeSrc":"3190:2:31","nodeType":"YulLiteral","src":"3190:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3161:3:31","nodeType":"YulIdentifier","src":"3161:3:31"},"nativeSrc":"3161:32:31","nodeType":"YulFunctionCall","src":"3161:32:31"},"nativeSrc":"3158:119:31","nodeType":"YulIf","src":"3158:119:31"},{"nativeSrc":"3287:117:31","nodeType":"YulBlock","src":"3287:117:31","statements":[{"nativeSrc":"3302:15:31","nodeType":"YulVariableDeclaration","src":"3302:15:31","value":{"kind":"number","nativeSrc":"3316:1:31","nodeType":"YulLiteral","src":"3316:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3306:6:31","nodeType":"YulTypedName","src":"3306:6:31","type":""}]},{"nativeSrc":"3331:63:31","nodeType":"YulAssignment","src":"3331:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3366:9:31","nodeType":"YulIdentifier","src":"3366:9:31"},{"name":"offset","nativeSrc":"3377:6:31","nodeType":"YulIdentifier","src":"3377:6:31"}],"functionName":{"name":"add","nativeSrc":"3362:3:31","nodeType":"YulIdentifier","src":"3362:3:31"},"nativeSrc":"3362:22:31","nodeType":"YulFunctionCall","src":"3362:22:31"},{"name":"dataEnd","nativeSrc":"3386:7:31","nodeType":"YulIdentifier","src":"3386:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3341:20:31","nodeType":"YulIdentifier","src":"3341:20:31"},"nativeSrc":"3341:53:31","nodeType":"YulFunctionCall","src":"3341:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3331:6:31","nodeType":"YulIdentifier","src":"3331:6:31"}]}]},{"nativeSrc":"3414:287:31","nodeType":"YulBlock","src":"3414:287:31","statements":[{"nativeSrc":"3429:46:31","nodeType":"YulVariableDeclaration","src":"3429:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3460:9:31","nodeType":"YulIdentifier","src":"3460:9:31"},{"kind":"number","nativeSrc":"3471:2:31","nodeType":"YulLiteral","src":"3471:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3456:3:31","nodeType":"YulIdentifier","src":"3456:3:31"},"nativeSrc":"3456:18:31","nodeType":"YulFunctionCall","src":"3456:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"3443:12:31","nodeType":"YulIdentifier","src":"3443:12:31"},"nativeSrc":"3443:32:31","nodeType":"YulFunctionCall","src":"3443:32:31"},"variables":[{"name":"offset","nativeSrc":"3433:6:31","nodeType":"YulTypedName","src":"3433:6:31","type":""}]},{"body":{"nativeSrc":"3522:83:31","nodeType":"YulBlock","src":"3522:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3524:77:31","nodeType":"YulIdentifier","src":"3524:77:31"},"nativeSrc":"3524:79:31","nodeType":"YulFunctionCall","src":"3524:79:31"},"nativeSrc":"3524:79:31","nodeType":"YulExpressionStatement","src":"3524:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3494:6:31","nodeType":"YulIdentifier","src":"3494:6:31"},{"kind":"number","nativeSrc":"3502:18:31","nodeType":"YulLiteral","src":"3502:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3491:2:31","nodeType":"YulIdentifier","src":"3491:2:31"},"nativeSrc":"3491:30:31","nodeType":"YulFunctionCall","src":"3491:30:31"},"nativeSrc":"3488:117:31","nodeType":"YulIf","src":"3488:117:31"},{"nativeSrc":"3619:72:31","nodeType":"YulAssignment","src":"3619:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3663:9:31","nodeType":"YulIdentifier","src":"3663:9:31"},{"name":"offset","nativeSrc":"3674:6:31","nodeType":"YulIdentifier","src":"3674:6:31"}],"functionName":{"name":"add","nativeSrc":"3659:3:31","nodeType":"YulIdentifier","src":"3659:3:31"},"nativeSrc":"3659:22:31","nodeType":"YulFunctionCall","src":"3659:22:31"},{"name":"dataEnd","nativeSrc":"3683:7:31","nodeType":"YulIdentifier","src":"3683:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"3629:29:31","nodeType":"YulIdentifier","src":"3629:29:31"},"nativeSrc":"3629:62:31","nodeType":"YulFunctionCall","src":"3629:62:31"},"variableNames":[{"name":"value1","nativeSrc":"3619:6:31","nodeType":"YulIdentifier","src":"3619:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3056:652:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3110:9:31","nodeType":"YulTypedName","src":"3110:9:31","type":""},{"name":"dataEnd","nativeSrc":"3121:7:31","nodeType":"YulTypedName","src":"3121:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3133:6:31","nodeType":"YulTypedName","src":"3133:6:31","type":""},{"name":"value1","nativeSrc":"3141:6:31","nodeType":"YulTypedName","src":"3141:6:31","type":""}],"src":"3056:652:31"},{"body":{"nativeSrc":"3759:32:31","nodeType":"YulBlock","src":"3759:32:31","statements":[{"nativeSrc":"3769:16:31","nodeType":"YulAssignment","src":"3769:16:31","value":{"name":"value","nativeSrc":"3780:5:31","nodeType":"YulIdentifier","src":"3780:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3769:7:31","nodeType":"YulIdentifier","src":"3769:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"3714:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3741:5:31","nodeType":"YulTypedName","src":"3741:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3751:7:31","nodeType":"YulTypedName","src":"3751:7:31","type":""}],"src":"3714:77:31"},{"body":{"nativeSrc":"3862:53:31","nodeType":"YulBlock","src":"3862:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3879:3:31","nodeType":"YulIdentifier","src":"3879:3:31"},{"arguments":[{"name":"value","nativeSrc":"3902:5:31","nodeType":"YulIdentifier","src":"3902:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"3884:17:31","nodeType":"YulIdentifier","src":"3884:17:31"},"nativeSrc":"3884:24:31","nodeType":"YulFunctionCall","src":"3884:24:31"}],"functionName":{"name":"mstore","nativeSrc":"3872:6:31","nodeType":"YulIdentifier","src":"3872:6:31"},"nativeSrc":"3872:37:31","nodeType":"YulFunctionCall","src":"3872:37:31"},"nativeSrc":"3872:37:31","nodeType":"YulExpressionStatement","src":"3872:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"3797:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3850:5:31","nodeType":"YulTypedName","src":"3850:5:31","type":""},{"name":"pos","nativeSrc":"3857:3:31","nodeType":"YulTypedName","src":"3857:3:31","type":""}],"src":"3797:118:31"},{"body":{"nativeSrc":"4019:124:31","nodeType":"YulBlock","src":"4019:124:31","statements":[{"nativeSrc":"4029:26:31","nodeType":"YulAssignment","src":"4029:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4041:9:31","nodeType":"YulIdentifier","src":"4041:9:31"},{"kind":"number","nativeSrc":"4052:2:31","nodeType":"YulLiteral","src":"4052:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4037:3:31","nodeType":"YulIdentifier","src":"4037:3:31"},"nativeSrc":"4037:18:31","nodeType":"YulFunctionCall","src":"4037:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4029:4:31","nodeType":"YulIdentifier","src":"4029:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4109:6:31","nodeType":"YulIdentifier","src":"4109:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4122:9:31","nodeType":"YulIdentifier","src":"4122:9:31"},{"kind":"number","nativeSrc":"4133:1:31","nodeType":"YulLiteral","src":"4133:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4118:3:31","nodeType":"YulIdentifier","src":"4118:3:31"},"nativeSrc":"4118:17:31","nodeType":"YulFunctionCall","src":"4118:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4065:43:31","nodeType":"YulIdentifier","src":"4065:43:31"},"nativeSrc":"4065:71:31","nodeType":"YulFunctionCall","src":"4065:71:31"},"nativeSrc":"4065:71:31","nodeType":"YulExpressionStatement","src":"4065:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3921:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3991:9:31","nodeType":"YulTypedName","src":"3991:9:31","type":""},{"name":"value0","nativeSrc":"4003:6:31","nodeType":"YulTypedName","src":"4003:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4014:4:31","nodeType":"YulTypedName","src":"4014:4:31","type":""}],"src":"3921:222:31"},{"body":{"nativeSrc":"4214:53:31","nodeType":"YulBlock","src":"4214:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4231:3:31","nodeType":"YulIdentifier","src":"4231:3:31"},{"arguments":[{"name":"value","nativeSrc":"4254:5:31","nodeType":"YulIdentifier","src":"4254:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4236:17:31","nodeType":"YulIdentifier","src":"4236:17:31"},"nativeSrc":"4236:24:31","nodeType":"YulFunctionCall","src":"4236:24:31"}],"functionName":{"name":"mstore","nativeSrc":"4224:6:31","nodeType":"YulIdentifier","src":"4224:6:31"},"nativeSrc":"4224:37:31","nodeType":"YulFunctionCall","src":"4224:37:31"},"nativeSrc":"4224:37:31","nodeType":"YulExpressionStatement","src":"4224:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4149:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4202:5:31","nodeType":"YulTypedName","src":"4202:5:31","type":""},{"name":"pos","nativeSrc":"4209:3:31","nodeType":"YulTypedName","src":"4209:3:31","type":""}],"src":"4149:118:31"},{"body":{"nativeSrc":"4371:124:31","nodeType":"YulBlock","src":"4371:124:31","statements":[{"nativeSrc":"4381:26:31","nodeType":"YulAssignment","src":"4381:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4393:9:31","nodeType":"YulIdentifier","src":"4393:9:31"},{"kind":"number","nativeSrc":"4404:2:31","nodeType":"YulLiteral","src":"4404:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4389:3:31","nodeType":"YulIdentifier","src":"4389:3:31"},"nativeSrc":"4389:18:31","nodeType":"YulFunctionCall","src":"4389:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4381:4:31","nodeType":"YulIdentifier","src":"4381:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4461:6:31","nodeType":"YulIdentifier","src":"4461:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4474:9:31","nodeType":"YulIdentifier","src":"4474:9:31"},{"kind":"number","nativeSrc":"4485:1:31","nodeType":"YulLiteral","src":"4485:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4470:3:31","nodeType":"YulIdentifier","src":"4470:3:31"},"nativeSrc":"4470:17:31","nodeType":"YulFunctionCall","src":"4470:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4417:43:31","nodeType":"YulIdentifier","src":"4417:43:31"},"nativeSrc":"4417:71:31","nodeType":"YulFunctionCall","src":"4417:71:31"},"nativeSrc":"4417:71:31","nodeType":"YulExpressionStatement","src":"4417:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4273:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4343:9:31","nodeType":"YulTypedName","src":"4343:9:31","type":""},{"name":"value0","nativeSrc":"4355:6:31","nodeType":"YulTypedName","src":"4355:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4366:4:31","nodeType":"YulTypedName","src":"4366:4:31","type":""}],"src":"4273:222:31"},{"body":{"nativeSrc":"4560:40:31","nodeType":"YulBlock","src":"4560:40:31","statements":[{"nativeSrc":"4571:22:31","nodeType":"YulAssignment","src":"4571:22:31","value":{"arguments":[{"name":"value","nativeSrc":"4587:5:31","nodeType":"YulIdentifier","src":"4587:5:31"}],"functionName":{"name":"mload","nativeSrc":"4581:5:31","nodeType":"YulIdentifier","src":"4581:5:31"},"nativeSrc":"4581:12:31","nodeType":"YulFunctionCall","src":"4581:12:31"},"variableNames":[{"name":"length","nativeSrc":"4571:6:31","nodeType":"YulIdentifier","src":"4571:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4501:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4543:5:31","nodeType":"YulTypedName","src":"4543:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4553:6:31","nodeType":"YulTypedName","src":"4553:6:31","type":""}],"src":"4501:99:31"},{"body":{"nativeSrc":"4702:73:31","nodeType":"YulBlock","src":"4702:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4719:3:31","nodeType":"YulIdentifier","src":"4719:3:31"},{"name":"length","nativeSrc":"4724:6:31","nodeType":"YulIdentifier","src":"4724:6:31"}],"functionName":{"name":"mstore","nativeSrc":"4712:6:31","nodeType":"YulIdentifier","src":"4712:6:31"},"nativeSrc":"4712:19:31","nodeType":"YulFunctionCall","src":"4712:19:31"},"nativeSrc":"4712:19:31","nodeType":"YulExpressionStatement","src":"4712:19:31"},{"nativeSrc":"4740:29:31","nodeType":"YulAssignment","src":"4740:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"4759:3:31","nodeType":"YulIdentifier","src":"4759:3:31"},{"kind":"number","nativeSrc":"4764:4:31","nodeType":"YulLiteral","src":"4764:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4755:3:31","nodeType":"YulIdentifier","src":"4755:3:31"},"nativeSrc":"4755:14:31","nodeType":"YulFunctionCall","src":"4755:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"4740:11:31","nodeType":"YulIdentifier","src":"4740:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4606:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4674:3:31","nodeType":"YulTypedName","src":"4674:3:31","type":""},{"name":"length","nativeSrc":"4679:6:31","nodeType":"YulTypedName","src":"4679:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4690:11:31","nodeType":"YulTypedName","src":"4690:11:31","type":""}],"src":"4606:169:31"},{"body":{"nativeSrc":"4843:186:31","nodeType":"YulBlock","src":"4843:186:31","statements":[{"nativeSrc":"4854:10:31","nodeType":"YulVariableDeclaration","src":"4854:10:31","value":{"kind":"number","nativeSrc":"4863:1:31","nodeType":"YulLiteral","src":"4863:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4858:1:31","nodeType":"YulTypedName","src":"4858:1:31","type":""}]},{"body":{"nativeSrc":"4923:63:31","nodeType":"YulBlock","src":"4923:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4948:3:31","nodeType":"YulIdentifier","src":"4948:3:31"},{"name":"i","nativeSrc":"4953:1:31","nodeType":"YulIdentifier","src":"4953:1:31"}],"functionName":{"name":"add","nativeSrc":"4944:3:31","nodeType":"YulIdentifier","src":"4944:3:31"},"nativeSrc":"4944:11:31","nodeType":"YulFunctionCall","src":"4944:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4967:3:31","nodeType":"YulIdentifier","src":"4967:3:31"},{"name":"i","nativeSrc":"4972:1:31","nodeType":"YulIdentifier","src":"4972:1:31"}],"functionName":{"name":"add","nativeSrc":"4963:3:31","nodeType":"YulIdentifier","src":"4963:3:31"},"nativeSrc":"4963:11:31","nodeType":"YulFunctionCall","src":"4963:11:31"}],"functionName":{"name":"mload","nativeSrc":"4957:5:31","nodeType":"YulIdentifier","src":"4957:5:31"},"nativeSrc":"4957:18:31","nodeType":"YulFunctionCall","src":"4957:18:31"}],"functionName":{"name":"mstore","nativeSrc":"4937:6:31","nodeType":"YulIdentifier","src":"4937:6:31"},"nativeSrc":"4937:39:31","nodeType":"YulFunctionCall","src":"4937:39:31"},"nativeSrc":"4937:39:31","nodeType":"YulExpressionStatement","src":"4937:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4884:1:31","nodeType":"YulIdentifier","src":"4884:1:31"},{"name":"length","nativeSrc":"4887:6:31","nodeType":"YulIdentifier","src":"4887:6:31"}],"functionName":{"name":"lt","nativeSrc":"4881:2:31","nodeType":"YulIdentifier","src":"4881:2:31"},"nativeSrc":"4881:13:31","nodeType":"YulFunctionCall","src":"4881:13:31"},"nativeSrc":"4873:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"4895:19:31","nodeType":"YulBlock","src":"4895:19:31","statements":[{"nativeSrc":"4897:15:31","nodeType":"YulAssignment","src":"4897:15:31","value":{"arguments":[{"name":"i","nativeSrc":"4906:1:31","nodeType":"YulIdentifier","src":"4906:1:31"},{"kind":"number","nativeSrc":"4909:2:31","nodeType":"YulLiteral","src":"4909:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4902:3:31","nodeType":"YulIdentifier","src":"4902:3:31"},"nativeSrc":"4902:10:31","nodeType":"YulFunctionCall","src":"4902:10:31"},"variableNames":[{"name":"i","nativeSrc":"4897:1:31","nodeType":"YulIdentifier","src":"4897:1:31"}]}]},"pre":{"nativeSrc":"4877:3:31","nodeType":"YulBlock","src":"4877:3:31","statements":[]},"src":"4873:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"5006:3:31","nodeType":"YulIdentifier","src":"5006:3:31"},{"name":"length","nativeSrc":"5011:6:31","nodeType":"YulIdentifier","src":"5011:6:31"}],"functionName":{"name":"add","nativeSrc":"5002:3:31","nodeType":"YulIdentifier","src":"5002:3:31"},"nativeSrc":"5002:16:31","nodeType":"YulFunctionCall","src":"5002:16:31"},{"kind":"number","nativeSrc":"5020:1:31","nodeType":"YulLiteral","src":"5020:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4995:6:31","nodeType":"YulIdentifier","src":"4995:6:31"},"nativeSrc":"4995:27:31","nodeType":"YulFunctionCall","src":"4995:27:31"},"nativeSrc":"4995:27:31","nodeType":"YulExpressionStatement","src":"4995:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4781:248:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4825:3:31","nodeType":"YulTypedName","src":"4825:3:31","type":""},{"name":"dst","nativeSrc":"4830:3:31","nodeType":"YulTypedName","src":"4830:3:31","type":""},{"name":"length","nativeSrc":"4835:6:31","nodeType":"YulTypedName","src":"4835:6:31","type":""}],"src":"4781:248:31"},{"body":{"nativeSrc":"5127:285:31","nodeType":"YulBlock","src":"5127:285:31","statements":[{"nativeSrc":"5137:53:31","nodeType":"YulVariableDeclaration","src":"5137:53:31","value":{"arguments":[{"name":"value","nativeSrc":"5184:5:31","nodeType":"YulIdentifier","src":"5184:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5151:32:31","nodeType":"YulIdentifier","src":"5151:32:31"},"nativeSrc":"5151:39:31","nodeType":"YulFunctionCall","src":"5151:39:31"},"variables":[{"name":"length","nativeSrc":"5141:6:31","nodeType":"YulTypedName","src":"5141:6:31","type":""}]},{"nativeSrc":"5199:78:31","nodeType":"YulAssignment","src":"5199:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"5265:3:31","nodeType":"YulIdentifier","src":"5265:3:31"},{"name":"length","nativeSrc":"5270:6:31","nodeType":"YulIdentifier","src":"5270:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5206:58:31","nodeType":"YulIdentifier","src":"5206:58:31"},"nativeSrc":"5206:71:31","nodeType":"YulFunctionCall","src":"5206:71:31"},"variableNames":[{"name":"pos","nativeSrc":"5199:3:31","nodeType":"YulIdentifier","src":"5199:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5325:5:31","nodeType":"YulIdentifier","src":"5325:5:31"},{"kind":"number","nativeSrc":"5332:4:31","nodeType":"YulLiteral","src":"5332:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5321:3:31","nodeType":"YulIdentifier","src":"5321:3:31"},"nativeSrc":"5321:16:31","nodeType":"YulFunctionCall","src":"5321:16:31"},{"name":"pos","nativeSrc":"5339:3:31","nodeType":"YulIdentifier","src":"5339:3:31"},{"name":"length","nativeSrc":"5344:6:31","nodeType":"YulIdentifier","src":"5344:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"5286:34:31","nodeType":"YulIdentifier","src":"5286:34:31"},"nativeSrc":"5286:65:31","nodeType":"YulFunctionCall","src":"5286:65:31"},"nativeSrc":"5286:65:31","nodeType":"YulExpressionStatement","src":"5286:65:31"},{"nativeSrc":"5360:46:31","nodeType":"YulAssignment","src":"5360:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"5371:3:31","nodeType":"YulIdentifier","src":"5371:3:31"},{"arguments":[{"name":"length","nativeSrc":"5398:6:31","nodeType":"YulIdentifier","src":"5398:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5376:21:31","nodeType":"YulIdentifier","src":"5376:21:31"},"nativeSrc":"5376:29:31","nodeType":"YulFunctionCall","src":"5376:29:31"}],"functionName":{"name":"add","nativeSrc":"5367:3:31","nodeType":"YulIdentifier","src":"5367:3:31"},"nativeSrc":"5367:39:31","nodeType":"YulFunctionCall","src":"5367:39:31"},"variableNames":[{"name":"end","nativeSrc":"5360:3:31","nodeType":"YulIdentifier","src":"5360:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5035:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5108:5:31","nodeType":"YulTypedName","src":"5108:5:31","type":""},{"name":"pos","nativeSrc":"5115:3:31","nodeType":"YulTypedName","src":"5115:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5123:3:31","nodeType":"YulTypedName","src":"5123:3:31","type":""}],"src":"5035:377:31"},{"body":{"nativeSrc":"5536:195:31","nodeType":"YulBlock","src":"5536:195:31","statements":[{"nativeSrc":"5546:26:31","nodeType":"YulAssignment","src":"5546:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"5558:9:31","nodeType":"YulIdentifier","src":"5558:9:31"},{"kind":"number","nativeSrc":"5569:2:31","nodeType":"YulLiteral","src":"5569:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5554:3:31","nodeType":"YulIdentifier","src":"5554:3:31"},"nativeSrc":"5554:18:31","nodeType":"YulFunctionCall","src":"5554:18:31"},"variableNames":[{"name":"tail","nativeSrc":"5546:4:31","nodeType":"YulIdentifier","src":"5546:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5593:9:31","nodeType":"YulIdentifier","src":"5593:9:31"},{"kind":"number","nativeSrc":"5604:1:31","nodeType":"YulLiteral","src":"5604:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5589:3:31","nodeType":"YulIdentifier","src":"5589:3:31"},"nativeSrc":"5589:17:31","nodeType":"YulFunctionCall","src":"5589:17:31"},{"arguments":[{"name":"tail","nativeSrc":"5612:4:31","nodeType":"YulIdentifier","src":"5612:4:31"},{"name":"headStart","nativeSrc":"5618:9:31","nodeType":"YulIdentifier","src":"5618:9:31"}],"functionName":{"name":"sub","nativeSrc":"5608:3:31","nodeType":"YulIdentifier","src":"5608:3:31"},"nativeSrc":"5608:20:31","nodeType":"YulFunctionCall","src":"5608:20:31"}],"functionName":{"name":"mstore","nativeSrc":"5582:6:31","nodeType":"YulIdentifier","src":"5582:6:31"},"nativeSrc":"5582:47:31","nodeType":"YulFunctionCall","src":"5582:47:31"},"nativeSrc":"5582:47:31","nodeType":"YulExpressionStatement","src":"5582:47:31"},{"nativeSrc":"5638:86:31","nodeType":"YulAssignment","src":"5638:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"5710:6:31","nodeType":"YulIdentifier","src":"5710:6:31"},{"name":"tail","nativeSrc":"5719:4:31","nodeType":"YulIdentifier","src":"5719:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5646:63:31","nodeType":"YulIdentifier","src":"5646:63:31"},"nativeSrc":"5646:78:31","nodeType":"YulFunctionCall","src":"5646:78:31"},"variableNames":[{"name":"tail","nativeSrc":"5638:4:31","nodeType":"YulIdentifier","src":"5638:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5418:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5508:9:31","nodeType":"YulTypedName","src":"5508:9:31","type":""},{"name":"value0","nativeSrc":"5520:6:31","nodeType":"YulTypedName","src":"5520:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5531:4:31","nodeType":"YulTypedName","src":"5531:4:31","type":""}],"src":"5418:313:31"},{"body":{"nativeSrc":"5803:263:31","nodeType":"YulBlock","src":"5803:263:31","statements":[{"body":{"nativeSrc":"5849:83:31","nodeType":"YulBlock","src":"5849:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5851:77:31","nodeType":"YulIdentifier","src":"5851:77:31"},"nativeSrc":"5851:79:31","nodeType":"YulFunctionCall","src":"5851:79:31"},"nativeSrc":"5851:79:31","nodeType":"YulExpressionStatement","src":"5851:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5824:7:31","nodeType":"YulIdentifier","src":"5824:7:31"},{"name":"headStart","nativeSrc":"5833:9:31","nodeType":"YulIdentifier","src":"5833:9:31"}],"functionName":{"name":"sub","nativeSrc":"5820:3:31","nodeType":"YulIdentifier","src":"5820:3:31"},"nativeSrc":"5820:23:31","nodeType":"YulFunctionCall","src":"5820:23:31"},{"kind":"number","nativeSrc":"5845:2:31","nodeType":"YulLiteral","src":"5845:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5816:3:31","nodeType":"YulIdentifier","src":"5816:3:31"},"nativeSrc":"5816:32:31","nodeType":"YulFunctionCall","src":"5816:32:31"},"nativeSrc":"5813:119:31","nodeType":"YulIf","src":"5813:119:31"},{"nativeSrc":"5942:117:31","nodeType":"YulBlock","src":"5942:117:31","statements":[{"nativeSrc":"5957:15:31","nodeType":"YulVariableDeclaration","src":"5957:15:31","value":{"kind":"number","nativeSrc":"5971:1:31","nodeType":"YulLiteral","src":"5971:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5961:6:31","nodeType":"YulTypedName","src":"5961:6:31","type":""}]},{"nativeSrc":"5986:63:31","nodeType":"YulAssignment","src":"5986:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6021:9:31","nodeType":"YulIdentifier","src":"6021:9:31"},{"name":"offset","nativeSrc":"6032:6:31","nodeType":"YulIdentifier","src":"6032:6:31"}],"functionName":{"name":"add","nativeSrc":"6017:3:31","nodeType":"YulIdentifier","src":"6017:3:31"},"nativeSrc":"6017:22:31","nodeType":"YulFunctionCall","src":"6017:22:31"},{"name":"dataEnd","nativeSrc":"6041:7:31","nodeType":"YulIdentifier","src":"6041:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5996:20:31","nodeType":"YulIdentifier","src":"5996:20:31"},"nativeSrc":"5996:53:31","nodeType":"YulFunctionCall","src":"5996:53:31"},"variableNames":[{"name":"value0","nativeSrc":"5986:6:31","nodeType":"YulIdentifier","src":"5986:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5737:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5773:9:31","nodeType":"YulTypedName","src":"5773:9:31","type":""},{"name":"dataEnd","nativeSrc":"5784:7:31","nodeType":"YulTypedName","src":"5784:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5796:6:31","nodeType":"YulTypedName","src":"5796:6:31","type":""}],"src":"5737:329:31"},{"body":{"nativeSrc":"6161:28:31","nodeType":"YulBlock","src":"6161:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6178:1:31","nodeType":"YulLiteral","src":"6178:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"6181:1:31","nodeType":"YulLiteral","src":"6181:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6171:6:31","nodeType":"YulIdentifier","src":"6171:6:31"},"nativeSrc":"6171:12:31","nodeType":"YulFunctionCall","src":"6171:12:31"},"nativeSrc":"6171:12:31","nodeType":"YulExpressionStatement","src":"6171:12:31"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6072:117:31","nodeType":"YulFunctionDefinition","src":"6072:117:31"},{"body":{"nativeSrc":"6284:28:31","nodeType":"YulBlock","src":"6284:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6301:1:31","nodeType":"YulLiteral","src":"6301:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"6304:1:31","nodeType":"YulLiteral","src":"6304:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6294:6:31","nodeType":"YulIdentifier","src":"6294:6:31"},"nativeSrc":"6294:12:31","nodeType":"YulFunctionCall","src":"6294:12:31"},"nativeSrc":"6294:12:31","nodeType":"YulExpressionStatement","src":"6294:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6195:117:31","nodeType":"YulFunctionDefinition","src":"6195:117:31"},{"body":{"nativeSrc":"6407:478:31","nodeType":"YulBlock","src":"6407:478:31","statements":[{"body":{"nativeSrc":"6456:83:31","nodeType":"YulBlock","src":"6456:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6458:77:31","nodeType":"YulIdentifier","src":"6458:77:31"},"nativeSrc":"6458:79:31","nodeType":"YulFunctionCall","src":"6458:79:31"},"nativeSrc":"6458:79:31","nodeType":"YulExpressionStatement","src":"6458:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6435:6:31","nodeType":"YulIdentifier","src":"6435:6:31"},{"kind":"number","nativeSrc":"6443:4:31","nodeType":"YulLiteral","src":"6443:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6431:3:31","nodeType":"YulIdentifier","src":"6431:3:31"},"nativeSrc":"6431:17:31","nodeType":"YulFunctionCall","src":"6431:17:31"},{"name":"end","nativeSrc":"6450:3:31","nodeType":"YulIdentifier","src":"6450:3:31"}],"functionName":{"name":"slt","nativeSrc":"6427:3:31","nodeType":"YulIdentifier","src":"6427:3:31"},"nativeSrc":"6427:27:31","nodeType":"YulFunctionCall","src":"6427:27:31"}],"functionName":{"name":"iszero","nativeSrc":"6420:6:31","nodeType":"YulIdentifier","src":"6420:6:31"},"nativeSrc":"6420:35:31","nodeType":"YulFunctionCall","src":"6420:35:31"},"nativeSrc":"6417:122:31","nodeType":"YulIf","src":"6417:122:31"},{"nativeSrc":"6548:30:31","nodeType":"YulAssignment","src":"6548:30:31","value":{"arguments":[{"name":"offset","nativeSrc":"6571:6:31","nodeType":"YulIdentifier","src":"6571:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"6558:12:31","nodeType":"YulIdentifier","src":"6558:12:31"},"nativeSrc":"6558:20:31","nodeType":"YulFunctionCall","src":"6558:20:31"},"variableNames":[{"name":"length","nativeSrc":"6548:6:31","nodeType":"YulIdentifier","src":"6548:6:31"}]},{"body":{"nativeSrc":"6621:83:31","nodeType":"YulBlock","src":"6621:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6623:77:31","nodeType":"YulIdentifier","src":"6623:77:31"},"nativeSrc":"6623:79:31","nodeType":"YulFunctionCall","src":"6623:79:31"},"nativeSrc":"6623:79:31","nodeType":"YulExpressionStatement","src":"6623:79:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6593:6:31","nodeType":"YulIdentifier","src":"6593:6:31"},{"kind":"number","nativeSrc":"6601:18:31","nodeType":"YulLiteral","src":"6601:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6590:2:31","nodeType":"YulIdentifier","src":"6590:2:31"},"nativeSrc":"6590:30:31","nodeType":"YulFunctionCall","src":"6590:30:31"},"nativeSrc":"6587:117:31","nodeType":"YulIf","src":"6587:117:31"},{"nativeSrc":"6713:29:31","nodeType":"YulAssignment","src":"6713:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"6729:6:31","nodeType":"YulIdentifier","src":"6729:6:31"},{"kind":"number","nativeSrc":"6737:4:31","nodeType":"YulLiteral","src":"6737:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6725:3:31","nodeType":"YulIdentifier","src":"6725:3:31"},"nativeSrc":"6725:17:31","nodeType":"YulFunctionCall","src":"6725:17:31"},"variableNames":[{"name":"arrayPos","nativeSrc":"6713:8:31","nodeType":"YulIdentifier","src":"6713:8:31"}]},{"body":{"nativeSrc":"6796:83:31","nodeType":"YulBlock","src":"6796:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6798:77:31","nodeType":"YulIdentifier","src":"6798:77:31"},"nativeSrc":"6798:79:31","nodeType":"YulFunctionCall","src":"6798:79:31"},"nativeSrc":"6798:79:31","nodeType":"YulExpressionStatement","src":"6798:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"6761:8:31","nodeType":"YulIdentifier","src":"6761:8:31"},{"arguments":[{"name":"length","nativeSrc":"6775:6:31","nodeType":"YulIdentifier","src":"6775:6:31"},{"kind":"number","nativeSrc":"6783:4:31","nodeType":"YulLiteral","src":"6783:4:31","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"6771:3:31","nodeType":"YulIdentifier","src":"6771:3:31"},"nativeSrc":"6771:17:31","nodeType":"YulFunctionCall","src":"6771:17:31"}],"functionName":{"name":"add","nativeSrc":"6757:3:31","nodeType":"YulIdentifier","src":"6757:3:31"},"nativeSrc":"6757:32:31","nodeType":"YulFunctionCall","src":"6757:32:31"},{"name":"end","nativeSrc":"6791:3:31","nodeType":"YulIdentifier","src":"6791:3:31"}],"functionName":{"name":"gt","nativeSrc":"6754:2:31","nodeType":"YulIdentifier","src":"6754:2:31"},"nativeSrc":"6754:41:31","nodeType":"YulFunctionCall","src":"6754:41:31"},"nativeSrc":"6751:128:31","nodeType":"YulIf","src":"6751:128:31"}]},"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"6332:553:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6374:6:31","nodeType":"YulTypedName","src":"6374:6:31","type":""},{"name":"end","nativeSrc":"6382:3:31","nodeType":"YulTypedName","src":"6382:3:31","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"6390:8:31","nodeType":"YulTypedName","src":"6390:8:31","type":""},{"name":"length","nativeSrc":"6400:6:31","nodeType":"YulTypedName","src":"6400:6:31","type":""}],"src":"6332:553:31"},{"body":{"nativeSrc":"6977:443:31","nodeType":"YulBlock","src":"6977:443:31","statements":[{"body":{"nativeSrc":"7023:83:31","nodeType":"YulBlock","src":"7023:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7025:77:31","nodeType":"YulIdentifier","src":"7025:77:31"},"nativeSrc":"7025:79:31","nodeType":"YulFunctionCall","src":"7025:79:31"},"nativeSrc":"7025:79:31","nodeType":"YulExpressionStatement","src":"7025:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6998:7:31","nodeType":"YulIdentifier","src":"6998:7:31"},{"name":"headStart","nativeSrc":"7007:9:31","nodeType":"YulIdentifier","src":"7007:9:31"}],"functionName":{"name":"sub","nativeSrc":"6994:3:31","nodeType":"YulIdentifier","src":"6994:3:31"},"nativeSrc":"6994:23:31","nodeType":"YulFunctionCall","src":"6994:23:31"},{"kind":"number","nativeSrc":"7019:2:31","nodeType":"YulLiteral","src":"7019:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6990:3:31","nodeType":"YulIdentifier","src":"6990:3:31"},"nativeSrc":"6990:32:31","nodeType":"YulFunctionCall","src":"6990:32:31"},"nativeSrc":"6987:119:31","nodeType":"YulIf","src":"6987:119:31"},{"nativeSrc":"7116:297:31","nodeType":"YulBlock","src":"7116:297:31","statements":[{"nativeSrc":"7131:45:31","nodeType":"YulVariableDeclaration","src":"7131:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7162:9:31","nodeType":"YulIdentifier","src":"7162:9:31"},{"kind":"number","nativeSrc":"7173:1:31","nodeType":"YulLiteral","src":"7173:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7158:3:31","nodeType":"YulIdentifier","src":"7158:3:31"},"nativeSrc":"7158:17:31","nodeType":"YulFunctionCall","src":"7158:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"7145:12:31","nodeType":"YulIdentifier","src":"7145:12:31"},"nativeSrc":"7145:31:31","nodeType":"YulFunctionCall","src":"7145:31:31"},"variables":[{"name":"offset","nativeSrc":"7135:6:31","nodeType":"YulTypedName","src":"7135:6:31","type":""}]},{"body":{"nativeSrc":"7223:83:31","nodeType":"YulBlock","src":"7223:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7225:77:31","nodeType":"YulIdentifier","src":"7225:77:31"},"nativeSrc":"7225:79:31","nodeType":"YulFunctionCall","src":"7225:79:31"},"nativeSrc":"7225:79:31","nodeType":"YulExpressionStatement","src":"7225:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7195:6:31","nodeType":"YulIdentifier","src":"7195:6:31"},{"kind":"number","nativeSrc":"7203:18:31","nodeType":"YulLiteral","src":"7203:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7192:2:31","nodeType":"YulIdentifier","src":"7192:2:31"},"nativeSrc":"7192:30:31","nodeType":"YulFunctionCall","src":"7192:30:31"},"nativeSrc":"7189:117:31","nodeType":"YulIf","src":"7189:117:31"},{"nativeSrc":"7320:83:31","nodeType":"YulAssignment","src":"7320:83:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7375:9:31","nodeType":"YulIdentifier","src":"7375:9:31"},{"name":"offset","nativeSrc":"7386:6:31","nodeType":"YulIdentifier","src":"7386:6:31"}],"functionName":{"name":"add","nativeSrc":"7371:3:31","nodeType":"YulIdentifier","src":"7371:3:31"},"nativeSrc":"7371:22:31","nodeType":"YulFunctionCall","src":"7371:22:31"},{"name":"dataEnd","nativeSrc":"7395:7:31","nodeType":"YulIdentifier","src":"7395:7:31"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"7338:32:31","nodeType":"YulIdentifier","src":"7338:32:31"},"nativeSrc":"7338:65:31","nodeType":"YulFunctionCall","src":"7338:65:31"},"variableNames":[{"name":"value0","nativeSrc":"7320:6:31","nodeType":"YulIdentifier","src":"7320:6:31"},{"name":"value1","nativeSrc":"7328:6:31","nodeType":"YulIdentifier","src":"7328:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nativeSrc":"6891:529:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6939:9:31","nodeType":"YulTypedName","src":"6939:9:31","type":""},{"name":"dataEnd","nativeSrc":"6950:7:31","nodeType":"YulTypedName","src":"6950:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6962:6:31","nodeType":"YulTypedName","src":"6962:6:31","type":""},{"name":"value1","nativeSrc":"6970:6:31","nodeType":"YulTypedName","src":"6970:6:31","type":""}],"src":"6891:529:31"},{"body":{"nativeSrc":"7532:76:31","nodeType":"YulBlock","src":"7532:76:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7554:6:31","nodeType":"YulIdentifier","src":"7554:6:31"},{"kind":"number","nativeSrc":"7562:1:31","nodeType":"YulLiteral","src":"7562:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7550:3:31","nodeType":"YulIdentifier","src":"7550:3:31"},"nativeSrc":"7550:14:31","nodeType":"YulFunctionCall","src":"7550:14:31"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"7566:34:31","nodeType":"YulLiteral","src":"7566:34:31","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"7543:6:31","nodeType":"YulIdentifier","src":"7543:6:31"},"nativeSrc":"7543:58:31","nodeType":"YulFunctionCall","src":"7543:58:31"},"nativeSrc":"7543:58:31","nodeType":"YulExpressionStatement","src":"7543:58:31"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"7426:182:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7524:6:31","nodeType":"YulTypedName","src":"7524:6:31","type":""}],"src":"7426:182:31"},{"body":{"nativeSrc":"7760:220:31","nodeType":"YulBlock","src":"7760:220:31","statements":[{"nativeSrc":"7770:74:31","nodeType":"YulAssignment","src":"7770:74:31","value":{"arguments":[{"name":"pos","nativeSrc":"7836:3:31","nodeType":"YulIdentifier","src":"7836:3:31"},{"kind":"number","nativeSrc":"7841:2:31","nodeType":"YulLiteral","src":"7841:2:31","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7777:58:31","nodeType":"YulIdentifier","src":"7777:58:31"},"nativeSrc":"7777:67:31","nodeType":"YulFunctionCall","src":"7777:67:31"},"variableNames":[{"name":"pos","nativeSrc":"7770:3:31","nodeType":"YulIdentifier","src":"7770:3:31"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7942:3:31","nodeType":"YulIdentifier","src":"7942:3:31"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"7853:88:31","nodeType":"YulIdentifier","src":"7853:88:31"},"nativeSrc":"7853:93:31","nodeType":"YulFunctionCall","src":"7853:93:31"},"nativeSrc":"7853:93:31","nodeType":"YulExpressionStatement","src":"7853:93:31"},{"nativeSrc":"7955:19:31","nodeType":"YulAssignment","src":"7955:19:31","value":{"arguments":[{"name":"pos","nativeSrc":"7966:3:31","nodeType":"YulIdentifier","src":"7966:3:31"},{"kind":"number","nativeSrc":"7971:2:31","nodeType":"YulLiteral","src":"7971:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7962:3:31","nodeType":"YulIdentifier","src":"7962:3:31"},"nativeSrc":"7962:12:31","nodeType":"YulFunctionCall","src":"7962:12:31"},"variableNames":[{"name":"end","nativeSrc":"7955:3:31","nodeType":"YulIdentifier","src":"7955:3:31"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"7614:366:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7748:3:31","nodeType":"YulTypedName","src":"7748:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7756:3:31","nodeType":"YulTypedName","src":"7756:3:31","type":""}],"src":"7614:366:31"},{"body":{"nativeSrc":"8157:248:31","nodeType":"YulBlock","src":"8157:248:31","statements":[{"nativeSrc":"8167:26:31","nodeType":"YulAssignment","src":"8167:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8179:9:31","nodeType":"YulIdentifier","src":"8179:9:31"},{"kind":"number","nativeSrc":"8190:2:31","nodeType":"YulLiteral","src":"8190:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8175:3:31","nodeType":"YulIdentifier","src":"8175:3:31"},"nativeSrc":"8175:18:31","nodeType":"YulFunctionCall","src":"8175:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8167:4:31","nodeType":"YulIdentifier","src":"8167:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8214:9:31","nodeType":"YulIdentifier","src":"8214:9:31"},{"kind":"number","nativeSrc":"8225:1:31","nodeType":"YulLiteral","src":"8225:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8210:3:31","nodeType":"YulIdentifier","src":"8210:3:31"},"nativeSrc":"8210:17:31","nodeType":"YulFunctionCall","src":"8210:17:31"},{"arguments":[{"name":"tail","nativeSrc":"8233:4:31","nodeType":"YulIdentifier","src":"8233:4:31"},{"name":"headStart","nativeSrc":"8239:9:31","nodeType":"YulIdentifier","src":"8239:9:31"}],"functionName":{"name":"sub","nativeSrc":"8229:3:31","nodeType":"YulIdentifier","src":"8229:3:31"},"nativeSrc":"8229:20:31","nodeType":"YulFunctionCall","src":"8229:20:31"}],"functionName":{"name":"mstore","nativeSrc":"8203:6:31","nodeType":"YulIdentifier","src":"8203:6:31"},"nativeSrc":"8203:47:31","nodeType":"YulFunctionCall","src":"8203:47:31"},"nativeSrc":"8203:47:31","nodeType":"YulExpressionStatement","src":"8203:47:31"},{"nativeSrc":"8259:139:31","nodeType":"YulAssignment","src":"8259:139:31","value":{"arguments":[{"name":"tail","nativeSrc":"8393:4:31","nodeType":"YulIdentifier","src":"8393:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"8267:124:31","nodeType":"YulIdentifier","src":"8267:124:31"},"nativeSrc":"8267:131:31","nodeType":"YulFunctionCall","src":"8267:131:31"},"variableNames":[{"name":"tail","nativeSrc":"8259:4:31","nodeType":"YulIdentifier","src":"8259:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7986:419:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8137:9:31","nodeType":"YulTypedName","src":"8137:9:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8152:4:31","nodeType":"YulTypedName","src":"8152:4:31","type":""}],"src":"7986:419:31"},{"body":{"nativeSrc":"8439:152:31","nodeType":"YulBlock","src":"8439:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8456:1:31","nodeType":"YulLiteral","src":"8456:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"8459:77:31","nodeType":"YulLiteral","src":"8459:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8449:6:31","nodeType":"YulIdentifier","src":"8449:6:31"},"nativeSrc":"8449:88:31","nodeType":"YulFunctionCall","src":"8449:88:31"},"nativeSrc":"8449:88:31","nodeType":"YulExpressionStatement","src":"8449:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8553:1:31","nodeType":"YulLiteral","src":"8553:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"8556:4:31","nodeType":"YulLiteral","src":"8556:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"8546:6:31","nodeType":"YulIdentifier","src":"8546:6:31"},"nativeSrc":"8546:15:31","nodeType":"YulFunctionCall","src":"8546:15:31"},"nativeSrc":"8546:15:31","nodeType":"YulExpressionStatement","src":"8546:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8577:1:31","nodeType":"YulLiteral","src":"8577:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"8580:4:31","nodeType":"YulLiteral","src":"8580:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8570:6:31","nodeType":"YulIdentifier","src":"8570:6:31"},"nativeSrc":"8570:15:31","nodeType":"YulFunctionCall","src":"8570:15:31"},"nativeSrc":"8570:15:31","nodeType":"YulExpressionStatement","src":"8570:15:31"}]},"name":"panic_error_0x22","nativeSrc":"8411:180:31","nodeType":"YulFunctionDefinition","src":"8411:180:31"},{"body":{"nativeSrc":"8648:269:31","nodeType":"YulBlock","src":"8648:269:31","statements":[{"nativeSrc":"8658:22:31","nodeType":"YulAssignment","src":"8658:22:31","value":{"arguments":[{"name":"data","nativeSrc":"8672:4:31","nodeType":"YulIdentifier","src":"8672:4:31"},{"kind":"number","nativeSrc":"8678:1:31","nodeType":"YulLiteral","src":"8678:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"8668:3:31","nodeType":"YulIdentifier","src":"8668:3:31"},"nativeSrc":"8668:12:31","nodeType":"YulFunctionCall","src":"8668:12:31"},"variableNames":[{"name":"length","nativeSrc":"8658:6:31","nodeType":"YulIdentifier","src":"8658:6:31"}]},{"nativeSrc":"8689:38:31","nodeType":"YulVariableDeclaration","src":"8689:38:31","value":{"arguments":[{"name":"data","nativeSrc":"8719:4:31","nodeType":"YulIdentifier","src":"8719:4:31"},{"kind":"number","nativeSrc":"8725:1:31","nodeType":"YulLiteral","src":"8725:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8715:3:31","nodeType":"YulIdentifier","src":"8715:3:31"},"nativeSrc":"8715:12:31","nodeType":"YulFunctionCall","src":"8715:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"8693:18:31","nodeType":"YulTypedName","src":"8693:18:31","type":""}]},{"body":{"nativeSrc":"8766:51:31","nodeType":"YulBlock","src":"8766:51:31","statements":[{"nativeSrc":"8780:27:31","nodeType":"YulAssignment","src":"8780:27:31","value":{"arguments":[{"name":"length","nativeSrc":"8794:6:31","nodeType":"YulIdentifier","src":"8794:6:31"},{"kind":"number","nativeSrc":"8802:4:31","nodeType":"YulLiteral","src":"8802:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"8790:3:31","nodeType":"YulIdentifier","src":"8790:3:31"},"nativeSrc":"8790:17:31","nodeType":"YulFunctionCall","src":"8790:17:31"},"variableNames":[{"name":"length","nativeSrc":"8780:6:31","nodeType":"YulIdentifier","src":"8780:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8746:18:31","nodeType":"YulIdentifier","src":"8746:18:31"}],"functionName":{"name":"iszero","nativeSrc":"8739:6:31","nodeType":"YulIdentifier","src":"8739:6:31"},"nativeSrc":"8739:26:31","nodeType":"YulFunctionCall","src":"8739:26:31"},"nativeSrc":"8736:81:31","nodeType":"YulIf","src":"8736:81:31"},{"body":{"nativeSrc":"8869:42:31","nodeType":"YulBlock","src":"8869:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"8883:16:31","nodeType":"YulIdentifier","src":"8883:16:31"},"nativeSrc":"8883:18:31","nodeType":"YulFunctionCall","src":"8883:18:31"},"nativeSrc":"8883:18:31","nodeType":"YulExpressionStatement","src":"8883:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8833:18:31","nodeType":"YulIdentifier","src":"8833:18:31"},{"arguments":[{"name":"length","nativeSrc":"8856:6:31","nodeType":"YulIdentifier","src":"8856:6:31"},{"kind":"number","nativeSrc":"8864:2:31","nodeType":"YulLiteral","src":"8864:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8853:2:31","nodeType":"YulIdentifier","src":"8853:2:31"},"nativeSrc":"8853:14:31","nodeType":"YulFunctionCall","src":"8853:14:31"}],"functionName":{"name":"eq","nativeSrc":"8830:2:31","nodeType":"YulIdentifier","src":"8830:2:31"},"nativeSrc":"8830:38:31","nodeType":"YulFunctionCall","src":"8830:38:31"},"nativeSrc":"8827:84:31","nodeType":"YulIf","src":"8827:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"8597:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8632:4:31","nodeType":"YulTypedName","src":"8632:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8641:6:31","nodeType":"YulTypedName","src":"8641:6:31","type":""}],"src":"8597:320:31"},{"body":{"nativeSrc":"9029:119:31","nodeType":"YulBlock","src":"9029:119:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9051:6:31","nodeType":"YulIdentifier","src":"9051:6:31"},{"kind":"number","nativeSrc":"9059:1:31","nodeType":"YulLiteral","src":"9059:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9047:3:31","nodeType":"YulIdentifier","src":"9047:3:31"},"nativeSrc":"9047:14:31","nodeType":"YulFunctionCall","src":"9047:14:31"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"9063:34:31","nodeType":"YulLiteral","src":"9063:34:31","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"9040:6:31","nodeType":"YulIdentifier","src":"9040:6:31"},"nativeSrc":"9040:58:31","nodeType":"YulFunctionCall","src":"9040:58:31"},"nativeSrc":"9040:58:31","nodeType":"YulExpressionStatement","src":"9040:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9119:6:31","nodeType":"YulIdentifier","src":"9119:6:31"},{"kind":"number","nativeSrc":"9127:2:31","nodeType":"YulLiteral","src":"9127:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9115:3:31","nodeType":"YulIdentifier","src":"9115:3:31"},"nativeSrc":"9115:15:31","nodeType":"YulFunctionCall","src":"9115:15:31"},{"hexValue":"646472657373","kind":"string","nativeSrc":"9132:8:31","nodeType":"YulLiteral","src":"9132:8:31","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"9108:6:31","nodeType":"YulIdentifier","src":"9108:6:31"},"nativeSrc":"9108:33:31","nodeType":"YulFunctionCall","src":"9108:33:31"},"nativeSrc":"9108:33:31","nodeType":"YulExpressionStatement","src":"9108:33:31"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"8923:225:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9021:6:31","nodeType":"YulTypedName","src":"9021:6:31","type":""}],"src":"8923:225:31"},{"body":{"nativeSrc":"9300:220:31","nodeType":"YulBlock","src":"9300:220:31","statements":[{"nativeSrc":"9310:74:31","nodeType":"YulAssignment","src":"9310:74:31","value":{"arguments":[{"name":"pos","nativeSrc":"9376:3:31","nodeType":"YulIdentifier","src":"9376:3:31"},{"kind":"number","nativeSrc":"9381:2:31","nodeType":"YulLiteral","src":"9381:2:31","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9317:58:31","nodeType":"YulIdentifier","src":"9317:58:31"},"nativeSrc":"9317:67:31","nodeType":"YulFunctionCall","src":"9317:67:31"},"variableNames":[{"name":"pos","nativeSrc":"9310:3:31","nodeType":"YulIdentifier","src":"9310:3:31"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9482:3:31","nodeType":"YulIdentifier","src":"9482:3:31"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"9393:88:31","nodeType":"YulIdentifier","src":"9393:88:31"},"nativeSrc":"9393:93:31","nodeType":"YulFunctionCall","src":"9393:93:31"},"nativeSrc":"9393:93:31","nodeType":"YulExpressionStatement","src":"9393:93:31"},{"nativeSrc":"9495:19:31","nodeType":"YulAssignment","src":"9495:19:31","value":{"arguments":[{"name":"pos","nativeSrc":"9506:3:31","nodeType":"YulIdentifier","src":"9506:3:31"},{"kind":"number","nativeSrc":"9511:2:31","nodeType":"YulLiteral","src":"9511:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9502:3:31","nodeType":"YulIdentifier","src":"9502:3:31"},"nativeSrc":"9502:12:31","nodeType":"YulFunctionCall","src":"9502:12:31"},"variableNames":[{"name":"end","nativeSrc":"9495:3:31","nodeType":"YulIdentifier","src":"9495:3:31"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"9154:366:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9288:3:31","nodeType":"YulTypedName","src":"9288:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9296:3:31","nodeType":"YulTypedName","src":"9296:3:31","type":""}],"src":"9154:366:31"},{"body":{"nativeSrc":"9697:248:31","nodeType":"YulBlock","src":"9697:248:31","statements":[{"nativeSrc":"9707:26:31","nodeType":"YulAssignment","src":"9707:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"9719:9:31","nodeType":"YulIdentifier","src":"9719:9:31"},{"kind":"number","nativeSrc":"9730:2:31","nodeType":"YulLiteral","src":"9730:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9715:3:31","nodeType":"YulIdentifier","src":"9715:3:31"},"nativeSrc":"9715:18:31","nodeType":"YulFunctionCall","src":"9715:18:31"},"variableNames":[{"name":"tail","nativeSrc":"9707:4:31","nodeType":"YulIdentifier","src":"9707:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9754:9:31","nodeType":"YulIdentifier","src":"9754:9:31"},{"kind":"number","nativeSrc":"9765:1:31","nodeType":"YulLiteral","src":"9765:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9750:3:31","nodeType":"YulIdentifier","src":"9750:3:31"},"nativeSrc":"9750:17:31","nodeType":"YulFunctionCall","src":"9750:17:31"},{"arguments":[{"name":"tail","nativeSrc":"9773:4:31","nodeType":"YulIdentifier","src":"9773:4:31"},{"name":"headStart","nativeSrc":"9779:9:31","nodeType":"YulIdentifier","src":"9779:9:31"}],"functionName":{"name":"sub","nativeSrc":"9769:3:31","nodeType":"YulIdentifier","src":"9769:3:31"},"nativeSrc":"9769:20:31","nodeType":"YulFunctionCall","src":"9769:20:31"}],"functionName":{"name":"mstore","nativeSrc":"9743:6:31","nodeType":"YulIdentifier","src":"9743:6:31"},"nativeSrc":"9743:47:31","nodeType":"YulFunctionCall","src":"9743:47:31"},"nativeSrc":"9743:47:31","nodeType":"YulExpressionStatement","src":"9743:47:31"},{"nativeSrc":"9799:139:31","nodeType":"YulAssignment","src":"9799:139:31","value":{"arguments":[{"name":"tail","nativeSrc":"9933:4:31","nodeType":"YulIdentifier","src":"9933:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"9807:124:31","nodeType":"YulIdentifier","src":"9807:124:31"},"nativeSrc":"9807:131:31","nodeType":"YulFunctionCall","src":"9807:131:31"},"variableNames":[{"name":"tail","nativeSrc":"9799:4:31","nodeType":"YulIdentifier","src":"9799:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9526:419:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9677:9:31","nodeType":"YulTypedName","src":"9677:9:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9692:4:31","nodeType":"YulTypedName","src":"9692:4:31","type":""}],"src":"9526:419:31"},{"body":{"nativeSrc":"10017:31:31","nodeType":"YulBlock","src":"10017:31:31","statements":[{"nativeSrc":"10028:13:31","nodeType":"YulAssignment","src":"10028:13:31","value":{"name":"len","nativeSrc":"10038:3:31","nodeType":"YulIdentifier","src":"10038:3:31"},"variableNames":[{"name":"length","nativeSrc":"10028:6:31","nodeType":"YulIdentifier","src":"10028:6:31"}]}]},"name":"array_length_t_string_calldata_ptr","nativeSrc":"9951:97:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9995:5:31","nodeType":"YulTypedName","src":"9995:5:31","type":""},{"name":"len","nativeSrc":"10002:3:31","nodeType":"YulTypedName","src":"10002:3:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10010:6:31","nodeType":"YulTypedName","src":"10010:6:31","type":""}],"src":"9951:97:31"},{"body":{"nativeSrc":"10108:87:31","nodeType":"YulBlock","src":"10108:87:31","statements":[{"nativeSrc":"10118:11:31","nodeType":"YulAssignment","src":"10118:11:31","value":{"name":"ptr","nativeSrc":"10126:3:31","nodeType":"YulIdentifier","src":"10126:3:31"},"variableNames":[{"name":"data","nativeSrc":"10118:4:31","nodeType":"YulIdentifier","src":"10118:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10146:1:31","nodeType":"YulLiteral","src":"10146:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"10149:3:31","nodeType":"YulIdentifier","src":"10149:3:31"}],"functionName":{"name":"mstore","nativeSrc":"10139:6:31","nodeType":"YulIdentifier","src":"10139:6:31"},"nativeSrc":"10139:14:31","nodeType":"YulFunctionCall","src":"10139:14:31"},"nativeSrc":"10139:14:31","nodeType":"YulExpressionStatement","src":"10139:14:31"},{"nativeSrc":"10162:26:31","nodeType":"YulAssignment","src":"10162:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"10180:1:31","nodeType":"YulLiteral","src":"10180:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"10183:4:31","nodeType":"YulLiteral","src":"10183:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"10170:9:31","nodeType":"YulIdentifier","src":"10170:9:31"},"nativeSrc":"10170:18:31","nodeType":"YulFunctionCall","src":"10170:18:31"},"variableNames":[{"name":"data","nativeSrc":"10162:4:31","nodeType":"YulIdentifier","src":"10162:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"10054:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10095:3:31","nodeType":"YulTypedName","src":"10095:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10103:4:31","nodeType":"YulTypedName","src":"10103:4:31","type":""}],"src":"10054:141:31"},{"body":{"nativeSrc":"10245:49:31","nodeType":"YulBlock","src":"10245:49:31","statements":[{"nativeSrc":"10255:33:31","nodeType":"YulAssignment","src":"10255:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10273:5:31","nodeType":"YulIdentifier","src":"10273:5:31"},{"kind":"number","nativeSrc":"10280:2:31","nodeType":"YulLiteral","src":"10280:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10269:3:31","nodeType":"YulIdentifier","src":"10269:3:31"},"nativeSrc":"10269:14:31","nodeType":"YulFunctionCall","src":"10269:14:31"},{"kind":"number","nativeSrc":"10285:2:31","nodeType":"YulLiteral","src":"10285:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"10265:3:31","nodeType":"YulIdentifier","src":"10265:3:31"},"nativeSrc":"10265:23:31","nodeType":"YulFunctionCall","src":"10265:23:31"},"variableNames":[{"name":"result","nativeSrc":"10255:6:31","nodeType":"YulIdentifier","src":"10255:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"10201:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10228:5:31","nodeType":"YulTypedName","src":"10228:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10238:6:31","nodeType":"YulTypedName","src":"10238:6:31","type":""}],"src":"10201:93:31"},{"body":{"nativeSrc":"10353:54:31","nodeType":"YulBlock","src":"10353:54:31","statements":[{"nativeSrc":"10363:37:31","nodeType":"YulAssignment","src":"10363:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"10388:4:31","nodeType":"YulIdentifier","src":"10388:4:31"},{"name":"value","nativeSrc":"10394:5:31","nodeType":"YulIdentifier","src":"10394:5:31"}],"functionName":{"name":"shl","nativeSrc":"10384:3:31","nodeType":"YulIdentifier","src":"10384:3:31"},"nativeSrc":"10384:16:31","nodeType":"YulFunctionCall","src":"10384:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"10363:8:31","nodeType":"YulIdentifier","src":"10363:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"10300:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"10328:4:31","nodeType":"YulTypedName","src":"10328:4:31","type":""},{"name":"value","nativeSrc":"10334:5:31","nodeType":"YulTypedName","src":"10334:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"10344:8:31","nodeType":"YulTypedName","src":"10344:8:31","type":""}],"src":"10300:107:31"},{"body":{"nativeSrc":"10489:317:31","nodeType":"YulBlock","src":"10489:317:31","statements":[{"nativeSrc":"10499:35:31","nodeType":"YulVariableDeclaration","src":"10499:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"10520:10:31","nodeType":"YulIdentifier","src":"10520:10:31"},{"kind":"number","nativeSrc":"10532:1:31","nodeType":"YulLiteral","src":"10532:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"10516:3:31","nodeType":"YulIdentifier","src":"10516:3:31"},"nativeSrc":"10516:18:31","nodeType":"YulFunctionCall","src":"10516:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"10503:9:31","nodeType":"YulTypedName","src":"10503:9:31","type":""}]},{"nativeSrc":"10543:109:31","nodeType":"YulVariableDeclaration","src":"10543:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"10574:9:31","nodeType":"YulIdentifier","src":"10574:9:31"},{"kind":"number","nativeSrc":"10585:66:31","nodeType":"YulLiteral","src":"10585:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"10555:18:31","nodeType":"YulIdentifier","src":"10555:18:31"},"nativeSrc":"10555:97:31","nodeType":"YulFunctionCall","src":"10555:97:31"},"variables":[{"name":"mask","nativeSrc":"10547:4:31","nodeType":"YulTypedName","src":"10547:4:31","type":""}]},{"nativeSrc":"10661:51:31","nodeType":"YulAssignment","src":"10661:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"10692:9:31","nodeType":"YulIdentifier","src":"10692:9:31"},{"name":"toInsert","nativeSrc":"10703:8:31","nodeType":"YulIdentifier","src":"10703:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"10673:18:31","nodeType":"YulIdentifier","src":"10673:18:31"},"nativeSrc":"10673:39:31","nodeType":"YulFunctionCall","src":"10673:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"10661:8:31","nodeType":"YulIdentifier","src":"10661:8:31"}]},{"nativeSrc":"10721:30:31","nodeType":"YulAssignment","src":"10721:30:31","value":{"arguments":[{"name":"value","nativeSrc":"10734:5:31","nodeType":"YulIdentifier","src":"10734:5:31"},{"arguments":[{"name":"mask","nativeSrc":"10745:4:31","nodeType":"YulIdentifier","src":"10745:4:31"}],"functionName":{"name":"not","nativeSrc":"10741:3:31","nodeType":"YulIdentifier","src":"10741:3:31"},"nativeSrc":"10741:9:31","nodeType":"YulFunctionCall","src":"10741:9:31"}],"functionName":{"name":"and","nativeSrc":"10730:3:31","nodeType":"YulIdentifier","src":"10730:3:31"},"nativeSrc":"10730:21:31","nodeType":"YulFunctionCall","src":"10730:21:31"},"variableNames":[{"name":"value","nativeSrc":"10721:5:31","nodeType":"YulIdentifier","src":"10721:5:31"}]},{"nativeSrc":"10760:40:31","nodeType":"YulAssignment","src":"10760:40:31","value":{"arguments":[{"name":"value","nativeSrc":"10773:5:31","nodeType":"YulIdentifier","src":"10773:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"10784:8:31","nodeType":"YulIdentifier","src":"10784:8:31"},{"name":"mask","nativeSrc":"10794:4:31","nodeType":"YulIdentifier","src":"10794:4:31"}],"functionName":{"name":"and","nativeSrc":"10780:3:31","nodeType":"YulIdentifier","src":"10780:3:31"},"nativeSrc":"10780:19:31","nodeType":"YulFunctionCall","src":"10780:19:31"}],"functionName":{"name":"or","nativeSrc":"10770:2:31","nodeType":"YulIdentifier","src":"10770:2:31"},"nativeSrc":"10770:30:31","nodeType":"YulFunctionCall","src":"10770:30:31"},"variableNames":[{"name":"result","nativeSrc":"10760:6:31","nodeType":"YulIdentifier","src":"10760:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"10413:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10450:5:31","nodeType":"YulTypedName","src":"10450:5:31","type":""},{"name":"shiftBytes","nativeSrc":"10457:10:31","nodeType":"YulTypedName","src":"10457:10:31","type":""},{"name":"toInsert","nativeSrc":"10469:8:31","nodeType":"YulTypedName","src":"10469:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10482:6:31","nodeType":"YulTypedName","src":"10482:6:31","type":""}],"src":"10413:393:31"},{"body":{"nativeSrc":"10857:32:31","nodeType":"YulBlock","src":"10857:32:31","statements":[{"nativeSrc":"10867:16:31","nodeType":"YulAssignment","src":"10867:16:31","value":{"name":"value","nativeSrc":"10878:5:31","nodeType":"YulIdentifier","src":"10878:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"10867:7:31","nodeType":"YulIdentifier","src":"10867:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"10812:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10839:5:31","nodeType":"YulTypedName","src":"10839:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10849:7:31","nodeType":"YulTypedName","src":"10849:7:31","type":""}],"src":"10812:77:31"},{"body":{"nativeSrc":"10927:28:31","nodeType":"YulBlock","src":"10927:28:31","statements":[{"nativeSrc":"10937:12:31","nodeType":"YulAssignment","src":"10937:12:31","value":{"name":"value","nativeSrc":"10944:5:31","nodeType":"YulIdentifier","src":"10944:5:31"},"variableNames":[{"name":"ret","nativeSrc":"10937:3:31","nodeType":"YulIdentifier","src":"10937:3:31"}]}]},"name":"identity","nativeSrc":"10895:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10913:5:31","nodeType":"YulTypedName","src":"10913:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"10923:3:31","nodeType":"YulTypedName","src":"10923:3:31","type":""}],"src":"10895:60:31"},{"body":{"nativeSrc":"11021:82:31","nodeType":"YulBlock","src":"11021:82:31","statements":[{"nativeSrc":"11031:66:31","nodeType":"YulAssignment","src":"11031:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11089:5:31","nodeType":"YulIdentifier","src":"11089:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11071:17:31","nodeType":"YulIdentifier","src":"11071:17:31"},"nativeSrc":"11071:24:31","nodeType":"YulFunctionCall","src":"11071:24:31"}],"functionName":{"name":"identity","nativeSrc":"11062:8:31","nodeType":"YulIdentifier","src":"11062:8:31"},"nativeSrc":"11062:34:31","nodeType":"YulFunctionCall","src":"11062:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11044:17:31","nodeType":"YulIdentifier","src":"11044:17:31"},"nativeSrc":"11044:53:31","nodeType":"YulFunctionCall","src":"11044:53:31"},"variableNames":[{"name":"converted","nativeSrc":"11031:9:31","nodeType":"YulIdentifier","src":"11031:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"10961:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11001:5:31","nodeType":"YulTypedName","src":"11001:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"11011:9:31","nodeType":"YulTypedName","src":"11011:9:31","type":""}],"src":"10961:142:31"},{"body":{"nativeSrc":"11156:28:31","nodeType":"YulBlock","src":"11156:28:31","statements":[{"nativeSrc":"11166:12:31","nodeType":"YulAssignment","src":"11166:12:31","value":{"name":"value","nativeSrc":"11173:5:31","nodeType":"YulIdentifier","src":"11173:5:31"},"variableNames":[{"name":"ret","nativeSrc":"11166:3:31","nodeType":"YulIdentifier","src":"11166:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"11109:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11142:5:31","nodeType":"YulTypedName","src":"11142:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"11152:3:31","nodeType":"YulTypedName","src":"11152:3:31","type":""}],"src":"11109:75:31"},{"body":{"nativeSrc":"11266:193:31","nodeType":"YulBlock","src":"11266:193:31","statements":[{"nativeSrc":"11276:63:31","nodeType":"YulVariableDeclaration","src":"11276:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"11331:7:31","nodeType":"YulIdentifier","src":"11331:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"11300:30:31","nodeType":"YulIdentifier","src":"11300:30:31"},"nativeSrc":"11300:39:31","nodeType":"YulFunctionCall","src":"11300:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"11280:16:31","nodeType":"YulTypedName","src":"11280:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11355:4:31","nodeType":"YulIdentifier","src":"11355:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"11395:4:31","nodeType":"YulIdentifier","src":"11395:4:31"}],"functionName":{"name":"sload","nativeSrc":"11389:5:31","nodeType":"YulIdentifier","src":"11389:5:31"},"nativeSrc":"11389:11:31","nodeType":"YulFunctionCall","src":"11389:11:31"},{"name":"offset","nativeSrc":"11402:6:31","nodeType":"YulIdentifier","src":"11402:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"11434:16:31","nodeType":"YulIdentifier","src":"11434:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"11410:23:31","nodeType":"YulIdentifier","src":"11410:23:31"},"nativeSrc":"11410:41:31","nodeType":"YulFunctionCall","src":"11410:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"11361:27:31","nodeType":"YulIdentifier","src":"11361:27:31"},"nativeSrc":"11361:91:31","nodeType":"YulFunctionCall","src":"11361:91:31"}],"functionName":{"name":"sstore","nativeSrc":"11348:6:31","nodeType":"YulIdentifier","src":"11348:6:31"},"nativeSrc":"11348:105:31","nodeType":"YulFunctionCall","src":"11348:105:31"},"nativeSrc":"11348:105:31","nodeType":"YulExpressionStatement","src":"11348:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"11190:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"11243:4:31","nodeType":"YulTypedName","src":"11243:4:31","type":""},{"name":"offset","nativeSrc":"11249:6:31","nodeType":"YulTypedName","src":"11249:6:31","type":""},{"name":"value_0","nativeSrc":"11257:7:31","nodeType":"YulTypedName","src":"11257:7:31","type":""}],"src":"11190:269:31"},{"body":{"nativeSrc":"11514:24:31","nodeType":"YulBlock","src":"11514:24:31","statements":[{"nativeSrc":"11524:8:31","nodeType":"YulAssignment","src":"11524:8:31","value":{"kind":"number","nativeSrc":"11531:1:31","nodeType":"YulLiteral","src":"11531:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"11524:3:31","nodeType":"YulIdentifier","src":"11524:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"11465:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"11510:3:31","nodeType":"YulTypedName","src":"11510:3:31","type":""}],"src":"11465:73:31"},{"body":{"nativeSrc":"11597:136:31","nodeType":"YulBlock","src":"11597:136:31","statements":[{"nativeSrc":"11607:46:31","nodeType":"YulVariableDeclaration","src":"11607:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"11621:30:31","nodeType":"YulIdentifier","src":"11621:30:31"},"nativeSrc":"11621:32:31","nodeType":"YulFunctionCall","src":"11621:32:31"},"variables":[{"name":"zero_0","nativeSrc":"11611:6:31","nodeType":"YulTypedName","src":"11611:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11706:4:31","nodeType":"YulIdentifier","src":"11706:4:31"},{"name":"offset","nativeSrc":"11712:6:31","nodeType":"YulIdentifier","src":"11712:6:31"},{"name":"zero_0","nativeSrc":"11720:6:31","nodeType":"YulIdentifier","src":"11720:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"11662:43:31","nodeType":"YulIdentifier","src":"11662:43:31"},"nativeSrc":"11662:65:31","nodeType":"YulFunctionCall","src":"11662:65:31"},"nativeSrc":"11662:65:31","nodeType":"YulExpressionStatement","src":"11662:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"11544:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"11583:4:31","nodeType":"YulTypedName","src":"11583:4:31","type":""},{"name":"offset","nativeSrc":"11589:6:31","nodeType":"YulTypedName","src":"11589:6:31","type":""}],"src":"11544:189:31"},{"body":{"nativeSrc":"11789:136:31","nodeType":"YulBlock","src":"11789:136:31","statements":[{"body":{"nativeSrc":"11856:63:31","nodeType":"YulBlock","src":"11856:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"11900:5:31","nodeType":"YulIdentifier","src":"11900:5:31"},{"kind":"number","nativeSrc":"11907:1:31","nodeType":"YulLiteral","src":"11907:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"11870:29:31","nodeType":"YulIdentifier","src":"11870:29:31"},"nativeSrc":"11870:39:31","nodeType":"YulFunctionCall","src":"11870:39:31"},"nativeSrc":"11870:39:31","nodeType":"YulExpressionStatement","src":"11870:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"11809:5:31","nodeType":"YulIdentifier","src":"11809:5:31"},{"name":"end","nativeSrc":"11816:3:31","nodeType":"YulIdentifier","src":"11816:3:31"}],"functionName":{"name":"lt","nativeSrc":"11806:2:31","nodeType":"YulIdentifier","src":"11806:2:31"},"nativeSrc":"11806:14:31","nodeType":"YulFunctionCall","src":"11806:14:31"},"nativeSrc":"11799:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"11821:26:31","nodeType":"YulBlock","src":"11821:26:31","statements":[{"nativeSrc":"11823:22:31","nodeType":"YulAssignment","src":"11823:22:31","value":{"arguments":[{"name":"start","nativeSrc":"11836:5:31","nodeType":"YulIdentifier","src":"11836:5:31"},{"kind":"number","nativeSrc":"11843:1:31","nodeType":"YulLiteral","src":"11843:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11832:3:31","nodeType":"YulIdentifier","src":"11832:3:31"},"nativeSrc":"11832:13:31","nodeType":"YulFunctionCall","src":"11832:13:31"},"variableNames":[{"name":"start","nativeSrc":"11823:5:31","nodeType":"YulIdentifier","src":"11823:5:31"}]}]},"pre":{"nativeSrc":"11803:2:31","nodeType":"YulBlock","src":"11803:2:31","statements":[]},"src":"11799:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"11739:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"11777:5:31","nodeType":"YulTypedName","src":"11777:5:31","type":""},{"name":"end","nativeSrc":"11784:3:31","nodeType":"YulTypedName","src":"11784:3:31","type":""}],"src":"11739:186:31"},{"body":{"nativeSrc":"12010:464:31","nodeType":"YulBlock","src":"12010:464:31","statements":[{"body":{"nativeSrc":"12036:431:31","nodeType":"YulBlock","src":"12036:431:31","statements":[{"nativeSrc":"12050:54:31","nodeType":"YulVariableDeclaration","src":"12050:54:31","value":{"arguments":[{"name":"array","nativeSrc":"12098:5:31","nodeType":"YulIdentifier","src":"12098:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"12066:31:31","nodeType":"YulIdentifier","src":"12066:31:31"},"nativeSrc":"12066:38:31","nodeType":"YulFunctionCall","src":"12066:38:31"},"variables":[{"name":"dataArea","nativeSrc":"12054:8:31","nodeType":"YulTypedName","src":"12054:8:31","type":""}]},{"nativeSrc":"12117:63:31","nodeType":"YulVariableDeclaration","src":"12117:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"12140:8:31","nodeType":"YulIdentifier","src":"12140:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"12168:10:31","nodeType":"YulIdentifier","src":"12168:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"12150:17:31","nodeType":"YulIdentifier","src":"12150:17:31"},"nativeSrc":"12150:29:31","nodeType":"YulFunctionCall","src":"12150:29:31"}],"functionName":{"name":"add","nativeSrc":"12136:3:31","nodeType":"YulIdentifier","src":"12136:3:31"},"nativeSrc":"12136:44:31","nodeType":"YulFunctionCall","src":"12136:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"12121:11:31","nodeType":"YulTypedName","src":"12121:11:31","type":""}]},{"body":{"nativeSrc":"12337:27:31","nodeType":"YulBlock","src":"12337:27:31","statements":[{"nativeSrc":"12339:23:31","nodeType":"YulAssignment","src":"12339:23:31","value":{"name":"dataArea","nativeSrc":"12354:8:31","nodeType":"YulIdentifier","src":"12354:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"12339:11:31","nodeType":"YulIdentifier","src":"12339:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"12321:10:31","nodeType":"YulIdentifier","src":"12321:10:31"},{"kind":"number","nativeSrc":"12333:2:31","nodeType":"YulLiteral","src":"12333:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12318:2:31","nodeType":"YulIdentifier","src":"12318:2:31"},"nativeSrc":"12318:18:31","nodeType":"YulFunctionCall","src":"12318:18:31"},"nativeSrc":"12315:49:31","nodeType":"YulIf","src":"12315:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"12406:11:31","nodeType":"YulIdentifier","src":"12406:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"12423:8:31","nodeType":"YulIdentifier","src":"12423:8:31"},{"arguments":[{"name":"len","nativeSrc":"12451:3:31","nodeType":"YulIdentifier","src":"12451:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"12433:17:31","nodeType":"YulIdentifier","src":"12433:17:31"},"nativeSrc":"12433:22:31","nodeType":"YulFunctionCall","src":"12433:22:31"}],"functionName":{"name":"add","nativeSrc":"12419:3:31","nodeType":"YulIdentifier","src":"12419:3:31"},"nativeSrc":"12419:37:31","nodeType":"YulFunctionCall","src":"12419:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"12377:28:31","nodeType":"YulIdentifier","src":"12377:28:31"},"nativeSrc":"12377:80:31","nodeType":"YulFunctionCall","src":"12377:80:31"},"nativeSrc":"12377:80:31","nodeType":"YulExpressionStatement","src":"12377:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"12027:3:31","nodeType":"YulIdentifier","src":"12027:3:31"},{"kind":"number","nativeSrc":"12032:2:31","nodeType":"YulLiteral","src":"12032:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"12024:2:31","nodeType":"YulIdentifier","src":"12024:2:31"},"nativeSrc":"12024:11:31","nodeType":"YulFunctionCall","src":"12024:11:31"},"nativeSrc":"12021:446:31","nodeType":"YulIf","src":"12021:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"11931:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"11986:5:31","nodeType":"YulTypedName","src":"11986:5:31","type":""},{"name":"len","nativeSrc":"11993:3:31","nodeType":"YulTypedName","src":"11993:3:31","type":""},{"name":"startIndex","nativeSrc":"11998:10:31","nodeType":"YulTypedName","src":"11998:10:31","type":""}],"src":"11931:543:31"},{"body":{"nativeSrc":"12543:54:31","nodeType":"YulBlock","src":"12543:54:31","statements":[{"nativeSrc":"12553:37:31","nodeType":"YulAssignment","src":"12553:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"12578:4:31","nodeType":"YulIdentifier","src":"12578:4:31"},{"name":"value","nativeSrc":"12584:5:31","nodeType":"YulIdentifier","src":"12584:5:31"}],"functionName":{"name":"shr","nativeSrc":"12574:3:31","nodeType":"YulIdentifier","src":"12574:3:31"},"nativeSrc":"12574:16:31","nodeType":"YulFunctionCall","src":"12574:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"12553:8:31","nodeType":"YulIdentifier","src":"12553:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"12480:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"12518:4:31","nodeType":"YulTypedName","src":"12518:4:31","type":""},{"name":"value","nativeSrc":"12524:5:31","nodeType":"YulTypedName","src":"12524:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"12534:8:31","nodeType":"YulTypedName","src":"12534:8:31","type":""}],"src":"12480:117:31"},{"body":{"nativeSrc":"12654:118:31","nodeType":"YulBlock","src":"12654:118:31","statements":[{"nativeSrc":"12664:68:31","nodeType":"YulVariableDeclaration","src":"12664:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12713:1:31","nodeType":"YulLiteral","src":"12713:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"12716:5:31","nodeType":"YulIdentifier","src":"12716:5:31"}],"functionName":{"name":"mul","nativeSrc":"12709:3:31","nodeType":"YulIdentifier","src":"12709:3:31"},"nativeSrc":"12709:13:31","nodeType":"YulFunctionCall","src":"12709:13:31"},{"arguments":[{"kind":"number","nativeSrc":"12728:1:31","nodeType":"YulLiteral","src":"12728:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"12724:3:31","nodeType":"YulIdentifier","src":"12724:3:31"},"nativeSrc":"12724:6:31","nodeType":"YulFunctionCall","src":"12724:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"12680:28:31","nodeType":"YulIdentifier","src":"12680:28:31"},"nativeSrc":"12680:51:31","nodeType":"YulFunctionCall","src":"12680:51:31"}],"functionName":{"name":"not","nativeSrc":"12676:3:31","nodeType":"YulIdentifier","src":"12676:3:31"},"nativeSrc":"12676:56:31","nodeType":"YulFunctionCall","src":"12676:56:31"},"variables":[{"name":"mask","nativeSrc":"12668:4:31","nodeType":"YulTypedName","src":"12668:4:31","type":""}]},{"nativeSrc":"12741:25:31","nodeType":"YulAssignment","src":"12741:25:31","value":{"arguments":[{"name":"data","nativeSrc":"12755:4:31","nodeType":"YulIdentifier","src":"12755:4:31"},{"name":"mask","nativeSrc":"12761:4:31","nodeType":"YulIdentifier","src":"12761:4:31"}],"functionName":{"name":"and","nativeSrc":"12751:3:31","nodeType":"YulIdentifier","src":"12751:3:31"},"nativeSrc":"12751:15:31","nodeType":"YulFunctionCall","src":"12751:15:31"},"variableNames":[{"name":"result","nativeSrc":"12741:6:31","nodeType":"YulIdentifier","src":"12741:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"12603:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12631:4:31","nodeType":"YulTypedName","src":"12631:4:31","type":""},{"name":"bytes","nativeSrc":"12637:5:31","nodeType":"YulTypedName","src":"12637:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"12647:6:31","nodeType":"YulTypedName","src":"12647:6:31","type":""}],"src":"12603:169:31"},{"body":{"nativeSrc":"12858:214:31","nodeType":"YulBlock","src":"12858:214:31","statements":[{"nativeSrc":"12991:37:31","nodeType":"YulAssignment","src":"12991:37:31","value":{"arguments":[{"name":"data","nativeSrc":"13018:4:31","nodeType":"YulIdentifier","src":"13018:4:31"},{"name":"len","nativeSrc":"13024:3:31","nodeType":"YulIdentifier","src":"13024:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"12999:18:31","nodeType":"YulIdentifier","src":"12999:18:31"},"nativeSrc":"12999:29:31","nodeType":"YulFunctionCall","src":"12999:29:31"},"variableNames":[{"name":"data","nativeSrc":"12991:4:31","nodeType":"YulIdentifier","src":"12991:4:31"}]},{"nativeSrc":"13037:29:31","nodeType":"YulAssignment","src":"13037:29:31","value":{"arguments":[{"name":"data","nativeSrc":"13048:4:31","nodeType":"YulIdentifier","src":"13048:4:31"},{"arguments":[{"kind":"number","nativeSrc":"13058:1:31","nodeType":"YulLiteral","src":"13058:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"13061:3:31","nodeType":"YulIdentifier","src":"13061:3:31"}],"functionName":{"name":"mul","nativeSrc":"13054:3:31","nodeType":"YulIdentifier","src":"13054:3:31"},"nativeSrc":"13054:11:31","nodeType":"YulFunctionCall","src":"13054:11:31"}],"functionName":{"name":"or","nativeSrc":"13045:2:31","nodeType":"YulIdentifier","src":"13045:2:31"},"nativeSrc":"13045:21:31","nodeType":"YulFunctionCall","src":"13045:21:31"},"variableNames":[{"name":"used","nativeSrc":"13037:4:31","nodeType":"YulIdentifier","src":"13037:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"12777:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12839:4:31","nodeType":"YulTypedName","src":"12839:4:31","type":""},{"name":"len","nativeSrc":"12845:3:31","nodeType":"YulTypedName","src":"12845:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"12853:4:31","nodeType":"YulTypedName","src":"12853:4:31","type":""}],"src":"12777:295:31"},{"body":{"nativeSrc":"13176:1304:31","nodeType":"YulBlock","src":"13176:1304:31","statements":[{"nativeSrc":"13187:58:31","nodeType":"YulVariableDeclaration","src":"13187:58:31","value":{"arguments":[{"name":"src","nativeSrc":"13236:3:31","nodeType":"YulIdentifier","src":"13236:3:31"},{"name":"len","nativeSrc":"13241:3:31","nodeType":"YulIdentifier","src":"13241:3:31"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nativeSrc":"13201:34:31","nodeType":"YulIdentifier","src":"13201:34:31"},"nativeSrc":"13201:44:31","nodeType":"YulFunctionCall","src":"13201:44:31"},"variables":[{"name":"newLen","nativeSrc":"13191:6:31","nodeType":"YulTypedName","src":"13191:6:31","type":""}]},{"body":{"nativeSrc":"13330:22:31","nodeType":"YulBlock","src":"13330:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13332:16:31","nodeType":"YulIdentifier","src":"13332:16:31"},"nativeSrc":"13332:18:31","nodeType":"YulFunctionCall","src":"13332:18:31"},"nativeSrc":"13332:18:31","nodeType":"YulExpressionStatement","src":"13332:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"13302:6:31","nodeType":"YulIdentifier","src":"13302:6:31"},{"kind":"number","nativeSrc":"13310:18:31","nodeType":"YulLiteral","src":"13310:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13299:2:31","nodeType":"YulIdentifier","src":"13299:2:31"},"nativeSrc":"13299:30:31","nodeType":"YulFunctionCall","src":"13299:30:31"},"nativeSrc":"13296:56:31","nodeType":"YulIf","src":"13296:56:31"},{"nativeSrc":"13362:52:31","nodeType":"YulVariableDeclaration","src":"13362:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"13408:4:31","nodeType":"YulIdentifier","src":"13408:4:31"}],"functionName":{"name":"sload","nativeSrc":"13402:5:31","nodeType":"YulIdentifier","src":"13402:5:31"},"nativeSrc":"13402:11:31","nodeType":"YulFunctionCall","src":"13402:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"13376:25:31","nodeType":"YulIdentifier","src":"13376:25:31"},"nativeSrc":"13376:38:31","nodeType":"YulFunctionCall","src":"13376:38:31"},"variables":[{"name":"oldLen","nativeSrc":"13366:6:31","nodeType":"YulTypedName","src":"13366:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"13507:4:31","nodeType":"YulIdentifier","src":"13507:4:31"},{"name":"oldLen","nativeSrc":"13513:6:31","nodeType":"YulIdentifier","src":"13513:6:31"},{"name":"newLen","nativeSrc":"13521:6:31","nodeType":"YulIdentifier","src":"13521:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"13461:45:31","nodeType":"YulIdentifier","src":"13461:45:31"},"nativeSrc":"13461:67:31","nodeType":"YulFunctionCall","src":"13461:67:31"},"nativeSrc":"13461:67:31","nodeType":"YulExpressionStatement","src":"13461:67:31"},{"nativeSrc":"13538:18:31","nodeType":"YulVariableDeclaration","src":"13538:18:31","value":{"kind":"number","nativeSrc":"13555:1:31","nodeType":"YulLiteral","src":"13555:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"13542:9:31","nodeType":"YulTypedName","src":"13542:9:31","type":""}]},{"cases":[{"body":{"nativeSrc":"13603:625:31","nodeType":"YulBlock","src":"13603:625:31","statements":[{"nativeSrc":"13617:37:31","nodeType":"YulVariableDeclaration","src":"13617:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"13636:6:31","nodeType":"YulIdentifier","src":"13636:6:31"},{"arguments":[{"kind":"number","nativeSrc":"13648:4:31","nodeType":"YulLiteral","src":"13648:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"13644:3:31","nodeType":"YulIdentifier","src":"13644:3:31"},"nativeSrc":"13644:9:31","nodeType":"YulFunctionCall","src":"13644:9:31"}],"functionName":{"name":"and","nativeSrc":"13632:3:31","nodeType":"YulIdentifier","src":"13632:3:31"},"nativeSrc":"13632:22:31","nodeType":"YulFunctionCall","src":"13632:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"13621:7:31","nodeType":"YulTypedName","src":"13621:7:31","type":""}]},{"nativeSrc":"13668:51:31","nodeType":"YulVariableDeclaration","src":"13668:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"13714:4:31","nodeType":"YulIdentifier","src":"13714:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"13682:31:31","nodeType":"YulIdentifier","src":"13682:31:31"},"nativeSrc":"13682:37:31","nodeType":"YulFunctionCall","src":"13682:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"13672:6:31","nodeType":"YulTypedName","src":"13672:6:31","type":""}]},{"nativeSrc":"13732:10:31","nodeType":"YulVariableDeclaration","src":"13732:10:31","value":{"kind":"number","nativeSrc":"13741:1:31","nodeType":"YulLiteral","src":"13741:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13736:1:31","nodeType":"YulTypedName","src":"13736:1:31","type":""}]},{"body":{"nativeSrc":"13800:170:31","nodeType":"YulBlock","src":"13800:170:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"13825:6:31","nodeType":"YulIdentifier","src":"13825:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"13850:3:31","nodeType":"YulIdentifier","src":"13850:3:31"},{"name":"srcOffset","nativeSrc":"13855:9:31","nodeType":"YulIdentifier","src":"13855:9:31"}],"functionName":{"name":"add","nativeSrc":"13846:3:31","nodeType":"YulIdentifier","src":"13846:3:31"},"nativeSrc":"13846:19:31","nodeType":"YulFunctionCall","src":"13846:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"13833:12:31","nodeType":"YulIdentifier","src":"13833:12:31"},"nativeSrc":"13833:33:31","nodeType":"YulFunctionCall","src":"13833:33:31"}],"functionName":{"name":"sstore","nativeSrc":"13818:6:31","nodeType":"YulIdentifier","src":"13818:6:31"},"nativeSrc":"13818:49:31","nodeType":"YulFunctionCall","src":"13818:49:31"},"nativeSrc":"13818:49:31","nodeType":"YulExpressionStatement","src":"13818:49:31"},{"nativeSrc":"13884:24:31","nodeType":"YulAssignment","src":"13884:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"13898:6:31","nodeType":"YulIdentifier","src":"13898:6:31"},{"kind":"number","nativeSrc":"13906:1:31","nodeType":"YulLiteral","src":"13906:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13894:3:31","nodeType":"YulIdentifier","src":"13894:3:31"},"nativeSrc":"13894:14:31","nodeType":"YulFunctionCall","src":"13894:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"13884:6:31","nodeType":"YulIdentifier","src":"13884:6:31"}]},{"nativeSrc":"13925:31:31","nodeType":"YulAssignment","src":"13925:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"13942:9:31","nodeType":"YulIdentifier","src":"13942:9:31"},{"kind":"number","nativeSrc":"13953:2:31","nodeType":"YulLiteral","src":"13953:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13938:3:31","nodeType":"YulIdentifier","src":"13938:3:31"},"nativeSrc":"13938:18:31","nodeType":"YulFunctionCall","src":"13938:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"13925:9:31","nodeType":"YulIdentifier","src":"13925:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13766:1:31","nodeType":"YulIdentifier","src":"13766:1:31"},{"name":"loopEnd","nativeSrc":"13769:7:31","nodeType":"YulIdentifier","src":"13769:7:31"}],"functionName":{"name":"lt","nativeSrc":"13763:2:31","nodeType":"YulIdentifier","src":"13763:2:31"},"nativeSrc":"13763:14:31","nodeType":"YulFunctionCall","src":"13763:14:31"},"nativeSrc":"13755:215:31","nodeType":"YulForLoop","post":{"nativeSrc":"13778:21:31","nodeType":"YulBlock","src":"13778:21:31","statements":[{"nativeSrc":"13780:17:31","nodeType":"YulAssignment","src":"13780:17:31","value":{"arguments":[{"name":"i","nativeSrc":"13789:1:31","nodeType":"YulIdentifier","src":"13789:1:31"},{"kind":"number","nativeSrc":"13792:4:31","nodeType":"YulLiteral","src":"13792:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13785:3:31","nodeType":"YulIdentifier","src":"13785:3:31"},"nativeSrc":"13785:12:31","nodeType":"YulFunctionCall","src":"13785:12:31"},"variableNames":[{"name":"i","nativeSrc":"13780:1:31","nodeType":"YulIdentifier","src":"13780:1:31"}]}]},"pre":{"nativeSrc":"13759:3:31","nodeType":"YulBlock","src":"13759:3:31","statements":[]},"src":"13755:215:31"},{"body":{"nativeSrc":"14006:163:31","nodeType":"YulBlock","src":"14006:163:31","statements":[{"nativeSrc":"14024:50:31","nodeType":"YulVariableDeclaration","src":"14024:50:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14058:3:31","nodeType":"YulIdentifier","src":"14058:3:31"},{"name":"srcOffset","nativeSrc":"14063:9:31","nodeType":"YulIdentifier","src":"14063:9:31"}],"functionName":{"name":"add","nativeSrc":"14054:3:31","nodeType":"YulIdentifier","src":"14054:3:31"},"nativeSrc":"14054:19:31","nodeType":"YulFunctionCall","src":"14054:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"14041:12:31","nodeType":"YulIdentifier","src":"14041:12:31"},"nativeSrc":"14041:33:31","nodeType":"YulFunctionCall","src":"14041:33:31"},"variables":[{"name":"lastValue","nativeSrc":"14028:9:31","nodeType":"YulTypedName","src":"14028:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"14098:6:31","nodeType":"YulIdentifier","src":"14098:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"14125:9:31","nodeType":"YulIdentifier","src":"14125:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"14140:6:31","nodeType":"YulIdentifier","src":"14140:6:31"},{"kind":"number","nativeSrc":"14148:4:31","nodeType":"YulLiteral","src":"14148:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"14136:3:31","nodeType":"YulIdentifier","src":"14136:3:31"},"nativeSrc":"14136:17:31","nodeType":"YulFunctionCall","src":"14136:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"14106:18:31","nodeType":"YulIdentifier","src":"14106:18:31"},"nativeSrc":"14106:48:31","nodeType":"YulFunctionCall","src":"14106:48:31"}],"functionName":{"name":"sstore","nativeSrc":"14091:6:31","nodeType":"YulIdentifier","src":"14091:6:31"},"nativeSrc":"14091:64:31","nodeType":"YulFunctionCall","src":"14091:64:31"},"nativeSrc":"14091:64:31","nodeType":"YulExpressionStatement","src":"14091:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"13989:7:31","nodeType":"YulIdentifier","src":"13989:7:31"},{"name":"newLen","nativeSrc":"13998:6:31","nodeType":"YulIdentifier","src":"13998:6:31"}],"functionName":{"name":"lt","nativeSrc":"13986:2:31","nodeType":"YulIdentifier","src":"13986:2:31"},"nativeSrc":"13986:19:31","nodeType":"YulFunctionCall","src":"13986:19:31"},"nativeSrc":"13983:186:31","nodeType":"YulIf","src":"13983:186:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14189:4:31","nodeType":"YulIdentifier","src":"14189:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"14203:6:31","nodeType":"YulIdentifier","src":"14203:6:31"},{"kind":"number","nativeSrc":"14211:1:31","nodeType":"YulLiteral","src":"14211:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"14199:3:31","nodeType":"YulIdentifier","src":"14199:3:31"},"nativeSrc":"14199:14:31","nodeType":"YulFunctionCall","src":"14199:14:31"},{"kind":"number","nativeSrc":"14215:1:31","nodeType":"YulLiteral","src":"14215:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14195:3:31","nodeType":"YulIdentifier","src":"14195:3:31"},"nativeSrc":"14195:22:31","nodeType":"YulFunctionCall","src":"14195:22:31"}],"functionName":{"name":"sstore","nativeSrc":"14182:6:31","nodeType":"YulIdentifier","src":"14182:6:31"},"nativeSrc":"14182:36:31","nodeType":"YulFunctionCall","src":"14182:36:31"},"nativeSrc":"14182:36:31","nodeType":"YulExpressionStatement","src":"14182:36:31"}]},"nativeSrc":"13596:632:31","nodeType":"YulCase","src":"13596:632:31","value":{"kind":"number","nativeSrc":"13601:1:31","nodeType":"YulLiteral","src":"13601:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"14245:229:31","nodeType":"YulBlock","src":"14245:229:31","statements":[{"nativeSrc":"14259:14:31","nodeType":"YulVariableDeclaration","src":"14259:14:31","value":{"kind":"number","nativeSrc":"14272:1:31","nodeType":"YulLiteral","src":"14272:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"14263:5:31","nodeType":"YulTypedName","src":"14263:5:31","type":""}]},{"body":{"nativeSrc":"14296:74:31","nodeType":"YulBlock","src":"14296:74:31","statements":[{"nativeSrc":"14314:42:31","nodeType":"YulAssignment","src":"14314:42:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14340:3:31","nodeType":"YulIdentifier","src":"14340:3:31"},{"name":"srcOffset","nativeSrc":"14345:9:31","nodeType":"YulIdentifier","src":"14345:9:31"}],"functionName":{"name":"add","nativeSrc":"14336:3:31","nodeType":"YulIdentifier","src":"14336:3:31"},"nativeSrc":"14336:19:31","nodeType":"YulFunctionCall","src":"14336:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"14323:12:31","nodeType":"YulIdentifier","src":"14323:12:31"},"nativeSrc":"14323:33:31","nodeType":"YulFunctionCall","src":"14323:33:31"},"variableNames":[{"name":"value","nativeSrc":"14314:5:31","nodeType":"YulIdentifier","src":"14314:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"14289:6:31","nodeType":"YulIdentifier","src":"14289:6:31"},"nativeSrc":"14286:84:31","nodeType":"YulIf","src":"14286:84:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14390:4:31","nodeType":"YulIdentifier","src":"14390:4:31"},{"arguments":[{"name":"value","nativeSrc":"14449:5:31","nodeType":"YulIdentifier","src":"14449:5:31"},{"name":"newLen","nativeSrc":"14456:6:31","nodeType":"YulIdentifier","src":"14456:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"14396:52:31","nodeType":"YulIdentifier","src":"14396:52:31"},"nativeSrc":"14396:67:31","nodeType":"YulFunctionCall","src":"14396:67:31"}],"functionName":{"name":"sstore","nativeSrc":"14383:6:31","nodeType":"YulIdentifier","src":"14383:6:31"},"nativeSrc":"14383:81:31","nodeType":"YulFunctionCall","src":"14383:81:31"},"nativeSrc":"14383:81:31","nodeType":"YulExpressionStatement","src":"14383:81:31"}]},"nativeSrc":"14237:237:31","nodeType":"YulCase","src":"14237:237:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"13576:6:31","nodeType":"YulIdentifier","src":"13576:6:31"},{"kind":"number","nativeSrc":"13584:2:31","nodeType":"YulLiteral","src":"13584:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"13573:2:31","nodeType":"YulIdentifier","src":"13573:2:31"},"nativeSrc":"13573:14:31","nodeType":"YulFunctionCall","src":"13573:14:31"},"nativeSrc":"13566:908:31","nodeType":"YulSwitch","src":"13566:908:31"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nativeSrc":"13077:1403:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"13160:4:31","nodeType":"YulTypedName","src":"13160:4:31","type":""},{"name":"src","nativeSrc":"13166:3:31","nodeType":"YulTypedName","src":"13166:3:31","type":""},{"name":"len","nativeSrc":"13171:3:31","nodeType":"YulTypedName","src":"13171:3:31","type":""}],"src":"13077:1403:31"},{"body":{"nativeSrc":"14539:32:31","nodeType":"YulBlock","src":"14539:32:31","statements":[{"nativeSrc":"14549:16:31","nodeType":"YulAssignment","src":"14549:16:31","value":{"name":"value","nativeSrc":"14560:5:31","nodeType":"YulIdentifier","src":"14560:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"14549:7:31","nodeType":"YulIdentifier","src":"14549:7:31"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"14486:85:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14521:5:31","nodeType":"YulTypedName","src":"14521:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14531:7:31","nodeType":"YulTypedName","src":"14531:7:31","type":""}],"src":"14486:85:31"},{"body":{"nativeSrc":"14621:57:31","nodeType":"YulBlock","src":"14621:57:31","statements":[{"nativeSrc":"14631:41:31","nodeType":"YulAssignment","src":"14631:41:31","value":{"arguments":[{"name":"value","nativeSrc":"14646:5:31","nodeType":"YulIdentifier","src":"14646:5:31"},{"kind":"number","nativeSrc":"14653:18:31","nodeType":"YulLiteral","src":"14653:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14642:3:31","nodeType":"YulIdentifier","src":"14642:3:31"},"nativeSrc":"14642:30:31","nodeType":"YulFunctionCall","src":"14642:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"14631:7:31","nodeType":"YulIdentifier","src":"14631:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"14577:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14603:5:31","nodeType":"YulTypedName","src":"14603:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14613:7:31","nodeType":"YulTypedName","src":"14613:7:31","type":""}],"src":"14577:101:31"},{"body":{"nativeSrc":"14751:89:31","nodeType":"YulBlock","src":"14751:89:31","statements":[{"nativeSrc":"14761:73:31","nodeType":"YulAssignment","src":"14761:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14826:5:31","nodeType":"YulIdentifier","src":"14826:5:31"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"14800:25:31","nodeType":"YulIdentifier","src":"14800:25:31"},"nativeSrc":"14800:32:31","nodeType":"YulFunctionCall","src":"14800:32:31"}],"functionName":{"name":"identity","nativeSrc":"14791:8:31","nodeType":"YulIdentifier","src":"14791:8:31"},"nativeSrc":"14791:42:31","nodeType":"YulFunctionCall","src":"14791:42:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"14774:16:31","nodeType":"YulIdentifier","src":"14774:16:31"},"nativeSrc":"14774:60:31","nodeType":"YulFunctionCall","src":"14774:60:31"},"variableNames":[{"name":"converted","nativeSrc":"14761:9:31","nodeType":"YulIdentifier","src":"14761:9:31"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"14684:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14731:5:31","nodeType":"YulTypedName","src":"14731:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"14741:9:31","nodeType":"YulTypedName","src":"14741:9:31","type":""}],"src":"14684:156:31"},{"body":{"nativeSrc":"14918:73:31","nodeType":"YulBlock","src":"14918:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14935:3:31","nodeType":"YulIdentifier","src":"14935:3:31"},{"arguments":[{"name":"value","nativeSrc":"14978:5:31","nodeType":"YulIdentifier","src":"14978:5:31"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"14940:37:31","nodeType":"YulIdentifier","src":"14940:37:31"},"nativeSrc":"14940:44:31","nodeType":"YulFunctionCall","src":"14940:44:31"}],"functionName":{"name":"mstore","nativeSrc":"14928:6:31","nodeType":"YulIdentifier","src":"14928:6:31"},"nativeSrc":"14928:57:31","nodeType":"YulFunctionCall","src":"14928:57:31"},"nativeSrc":"14928:57:31","nodeType":"YulExpressionStatement","src":"14928:57:31"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"14846:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14906:5:31","nodeType":"YulTypedName","src":"14906:5:31","type":""},{"name":"pos","nativeSrc":"14913:3:31","nodeType":"YulTypedName","src":"14913:3:31","type":""}],"src":"14846:145:31"},{"body":{"nativeSrc":"15102:131:31","nodeType":"YulBlock","src":"15102:131:31","statements":[{"nativeSrc":"15112:26:31","nodeType":"YulAssignment","src":"15112:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"15124:9:31","nodeType":"YulIdentifier","src":"15124:9:31"},{"kind":"number","nativeSrc":"15135:2:31","nodeType":"YulLiteral","src":"15135:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15120:3:31","nodeType":"YulIdentifier","src":"15120:3:31"},"nativeSrc":"15120:18:31","nodeType":"YulFunctionCall","src":"15120:18:31"},"variableNames":[{"name":"tail","nativeSrc":"15112:4:31","nodeType":"YulIdentifier","src":"15112:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15199:6:31","nodeType":"YulIdentifier","src":"15199:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"15212:9:31","nodeType":"YulIdentifier","src":"15212:9:31"},{"kind":"number","nativeSrc":"15223:1:31","nodeType":"YulLiteral","src":"15223:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15208:3:31","nodeType":"YulIdentifier","src":"15208:3:31"},"nativeSrc":"15208:17:31","nodeType":"YulFunctionCall","src":"15208:17:31"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"15148:50:31","nodeType":"YulIdentifier","src":"15148:50:31"},"nativeSrc":"15148:78:31","nodeType":"YulFunctionCall","src":"15148:78:31"},"nativeSrc":"15148:78:31","nodeType":"YulExpressionStatement","src":"15148:78:31"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"14997:236:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15074:9:31","nodeType":"YulTypedName","src":"15074:9:31","type":""},{"name":"value0","nativeSrc":"15086:6:31","nodeType":"YulTypedName","src":"15086:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15097:4:31","nodeType":"YulTypedName","src":"15097:4:31","type":""}],"src":"14997:236:31"},{"body":{"nativeSrc":"15282:79:31","nodeType":"YulBlock","src":"15282:79:31","statements":[{"body":{"nativeSrc":"15339:16:31","nodeType":"YulBlock","src":"15339:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15348:1:31","nodeType":"YulLiteral","src":"15348:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"15351:1:31","nodeType":"YulLiteral","src":"15351:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15341:6:31","nodeType":"YulIdentifier","src":"15341:6:31"},"nativeSrc":"15341:12:31","nodeType":"YulFunctionCall","src":"15341:12:31"},"nativeSrc":"15341:12:31","nodeType":"YulExpressionStatement","src":"15341:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15305:5:31","nodeType":"YulIdentifier","src":"15305:5:31"},{"arguments":[{"name":"value","nativeSrc":"15330:5:31","nodeType":"YulIdentifier","src":"15330:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"15312:17:31","nodeType":"YulIdentifier","src":"15312:17:31"},"nativeSrc":"15312:24:31","nodeType":"YulFunctionCall","src":"15312:24:31"}],"functionName":{"name":"eq","nativeSrc":"15302:2:31","nodeType":"YulIdentifier","src":"15302:2:31"},"nativeSrc":"15302:35:31","nodeType":"YulFunctionCall","src":"15302:35:31"}],"functionName":{"name":"iszero","nativeSrc":"15295:6:31","nodeType":"YulIdentifier","src":"15295:6:31"},"nativeSrc":"15295:43:31","nodeType":"YulFunctionCall","src":"15295:43:31"},"nativeSrc":"15292:63:31","nodeType":"YulIf","src":"15292:63:31"}]},"name":"validator_revert_t_bytes32","nativeSrc":"15239:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15275:5:31","nodeType":"YulTypedName","src":"15275:5:31","type":""}],"src":"15239:122:31"},{"body":{"nativeSrc":"15430:80:31","nodeType":"YulBlock","src":"15430:80:31","statements":[{"nativeSrc":"15440:22:31","nodeType":"YulAssignment","src":"15440:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"15455:6:31","nodeType":"YulIdentifier","src":"15455:6:31"}],"functionName":{"name":"mload","nativeSrc":"15449:5:31","nodeType":"YulIdentifier","src":"15449:5:31"},"nativeSrc":"15449:13:31","nodeType":"YulFunctionCall","src":"15449:13:31"},"variableNames":[{"name":"value","nativeSrc":"15440:5:31","nodeType":"YulIdentifier","src":"15440:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15498:5:31","nodeType":"YulIdentifier","src":"15498:5:31"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"15471:26:31","nodeType":"YulIdentifier","src":"15471:26:31"},"nativeSrc":"15471:33:31","nodeType":"YulFunctionCall","src":"15471:33:31"},"nativeSrc":"15471:33:31","nodeType":"YulExpressionStatement","src":"15471:33:31"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"15367:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15408:6:31","nodeType":"YulTypedName","src":"15408:6:31","type":""},{"name":"end","nativeSrc":"15416:3:31","nodeType":"YulTypedName","src":"15416:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15424:5:31","nodeType":"YulTypedName","src":"15424:5:31","type":""}],"src":"15367:143:31"},{"body":{"nativeSrc":"15593:274:31","nodeType":"YulBlock","src":"15593:274:31","statements":[{"body":{"nativeSrc":"15639:83:31","nodeType":"YulBlock","src":"15639:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15641:77:31","nodeType":"YulIdentifier","src":"15641:77:31"},"nativeSrc":"15641:79:31","nodeType":"YulFunctionCall","src":"15641:79:31"},"nativeSrc":"15641:79:31","nodeType":"YulExpressionStatement","src":"15641:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15614:7:31","nodeType":"YulIdentifier","src":"15614:7:31"},{"name":"headStart","nativeSrc":"15623:9:31","nodeType":"YulIdentifier","src":"15623:9:31"}],"functionName":{"name":"sub","nativeSrc":"15610:3:31","nodeType":"YulIdentifier","src":"15610:3:31"},"nativeSrc":"15610:23:31","nodeType":"YulFunctionCall","src":"15610:23:31"},{"kind":"number","nativeSrc":"15635:2:31","nodeType":"YulLiteral","src":"15635:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15606:3:31","nodeType":"YulIdentifier","src":"15606:3:31"},"nativeSrc":"15606:32:31","nodeType":"YulFunctionCall","src":"15606:32:31"},"nativeSrc":"15603:119:31","nodeType":"YulIf","src":"15603:119:31"},{"nativeSrc":"15732:128:31","nodeType":"YulBlock","src":"15732:128:31","statements":[{"nativeSrc":"15747:15:31","nodeType":"YulVariableDeclaration","src":"15747:15:31","value":{"kind":"number","nativeSrc":"15761:1:31","nodeType":"YulLiteral","src":"15761:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15751:6:31","nodeType":"YulTypedName","src":"15751:6:31","type":""}]},{"nativeSrc":"15776:74:31","nodeType":"YulAssignment","src":"15776:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15822:9:31","nodeType":"YulIdentifier","src":"15822:9:31"},{"name":"offset","nativeSrc":"15833:6:31","nodeType":"YulIdentifier","src":"15833:6:31"}],"functionName":{"name":"add","nativeSrc":"15818:3:31","nodeType":"YulIdentifier","src":"15818:3:31"},"nativeSrc":"15818:22:31","nodeType":"YulFunctionCall","src":"15818:22:31"},{"name":"dataEnd","nativeSrc":"15842:7:31","nodeType":"YulIdentifier","src":"15842:7:31"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"15786:31:31","nodeType":"YulIdentifier","src":"15786:31:31"},"nativeSrc":"15786:64:31","nodeType":"YulFunctionCall","src":"15786:64:31"},"variableNames":[{"name":"value0","nativeSrc":"15776:6:31","nodeType":"YulIdentifier","src":"15776:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"15516:351:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15563:9:31","nodeType":"YulTypedName","src":"15563:9:31","type":""},{"name":"dataEnd","nativeSrc":"15574:7:31","nodeType":"YulTypedName","src":"15574:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15586:6:31","nodeType":"YulTypedName","src":"15586:6:31","type":""}],"src":"15516:351:31"},{"body":{"nativeSrc":"15931:40:31","nodeType":"YulBlock","src":"15931:40:31","statements":[{"nativeSrc":"15942:22:31","nodeType":"YulAssignment","src":"15942:22:31","value":{"arguments":[{"name":"value","nativeSrc":"15958:5:31","nodeType":"YulIdentifier","src":"15958:5:31"}],"functionName":{"name":"mload","nativeSrc":"15952:5:31","nodeType":"YulIdentifier","src":"15952:5:31"},"nativeSrc":"15952:12:31","nodeType":"YulFunctionCall","src":"15952:12:31"},"variableNames":[{"name":"length","nativeSrc":"15942:6:31","nodeType":"YulIdentifier","src":"15942:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15873:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15914:5:31","nodeType":"YulTypedName","src":"15914:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15924:6:31","nodeType":"YulTypedName","src":"15924:6:31","type":""}],"src":"15873:98:31"},{"body":{"nativeSrc":"16090:34:31","nodeType":"YulBlock","src":"16090:34:31","statements":[{"nativeSrc":"16100:18:31","nodeType":"YulAssignment","src":"16100:18:31","value":{"name":"pos","nativeSrc":"16115:3:31","nodeType":"YulIdentifier","src":"16115:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"16100:11:31","nodeType":"YulIdentifier","src":"16100:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15977:147:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16062:3:31","nodeType":"YulTypedName","src":"16062:3:31","type":""},{"name":"length","nativeSrc":"16067:6:31","nodeType":"YulTypedName","src":"16067:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16078:11:31","nodeType":"YulTypedName","src":"16078:11:31","type":""}],"src":"15977:147:31"},{"body":{"nativeSrc":"16238:278:31","nodeType":"YulBlock","src":"16238:278:31","statements":[{"nativeSrc":"16248:52:31","nodeType":"YulVariableDeclaration","src":"16248:52:31","value":{"arguments":[{"name":"value","nativeSrc":"16294:5:31","nodeType":"YulIdentifier","src":"16294:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"16262:31:31","nodeType":"YulIdentifier","src":"16262:31:31"},"nativeSrc":"16262:38:31","nodeType":"YulFunctionCall","src":"16262:38:31"},"variables":[{"name":"length","nativeSrc":"16252:6:31","nodeType":"YulTypedName","src":"16252:6:31","type":""}]},{"nativeSrc":"16309:95:31","nodeType":"YulAssignment","src":"16309:95:31","value":{"arguments":[{"name":"pos","nativeSrc":"16392:3:31","nodeType":"YulIdentifier","src":"16392:3:31"},{"name":"length","nativeSrc":"16397:6:31","nodeType":"YulIdentifier","src":"16397:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16316:75:31","nodeType":"YulIdentifier","src":"16316:75:31"},"nativeSrc":"16316:88:31","nodeType":"YulFunctionCall","src":"16316:88:31"},"variableNames":[{"name":"pos","nativeSrc":"16309:3:31","nodeType":"YulIdentifier","src":"16309:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16452:5:31","nodeType":"YulIdentifier","src":"16452:5:31"},{"kind":"number","nativeSrc":"16459:4:31","nodeType":"YulLiteral","src":"16459:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16448:3:31","nodeType":"YulIdentifier","src":"16448:3:31"},"nativeSrc":"16448:16:31","nodeType":"YulFunctionCall","src":"16448:16:31"},{"name":"pos","nativeSrc":"16466:3:31","nodeType":"YulIdentifier","src":"16466:3:31"},{"name":"length","nativeSrc":"16471:6:31","nodeType":"YulIdentifier","src":"16471:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16413:34:31","nodeType":"YulIdentifier","src":"16413:34:31"},"nativeSrc":"16413:65:31","nodeType":"YulFunctionCall","src":"16413:65:31"},"nativeSrc":"16413:65:31","nodeType":"YulExpressionStatement","src":"16413:65:31"},{"nativeSrc":"16487:23:31","nodeType":"YulAssignment","src":"16487:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"16498:3:31","nodeType":"YulIdentifier","src":"16498:3:31"},{"name":"length","nativeSrc":"16503:6:31","nodeType":"YulIdentifier","src":"16503:6:31"}],"functionName":{"name":"add","nativeSrc":"16494:3:31","nodeType":"YulIdentifier","src":"16494:3:31"},"nativeSrc":"16494:16:31","nodeType":"YulFunctionCall","src":"16494:16:31"},"variableNames":[{"name":"end","nativeSrc":"16487:3:31","nodeType":"YulIdentifier","src":"16487:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16130:386:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16219:5:31","nodeType":"YulTypedName","src":"16219:5:31","type":""},{"name":"pos","nativeSrc":"16226:3:31","nodeType":"YulTypedName","src":"16226:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16234:3:31","nodeType":"YulTypedName","src":"16234:3:31","type":""}],"src":"16130:386:31"},{"body":{"nativeSrc":"16656:137:31","nodeType":"YulBlock","src":"16656:137:31","statements":[{"nativeSrc":"16667:100:31","nodeType":"YulAssignment","src":"16667:100:31","value":{"arguments":[{"name":"value0","nativeSrc":"16754:6:31","nodeType":"YulIdentifier","src":"16754:6:31"},{"name":"pos","nativeSrc":"16763:3:31","nodeType":"YulIdentifier","src":"16763:3:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16674:79:31","nodeType":"YulIdentifier","src":"16674:79:31"},"nativeSrc":"16674:93:31","nodeType":"YulFunctionCall","src":"16674:93:31"},"variableNames":[{"name":"pos","nativeSrc":"16667:3:31","nodeType":"YulIdentifier","src":"16667:3:31"}]},{"nativeSrc":"16777:10:31","nodeType":"YulAssignment","src":"16777:10:31","value":{"name":"pos","nativeSrc":"16784:3:31","nodeType":"YulIdentifier","src":"16784:3:31"},"variableNames":[{"name":"end","nativeSrc":"16777:3:31","nodeType":"YulIdentifier","src":"16777:3:31"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"16522:271:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16635:3:31","nodeType":"YulTypedName","src":"16635:3:31","type":""},{"name":"value0","nativeSrc":"16641:6:31","nodeType":"YulTypedName","src":"16641:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16652:3:31","nodeType":"YulTypedName","src":"16652:3:31","type":""}],"src":"16522:271:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"6459":[{"length":32,"start":1920},{"length":32,"start":2005},{"length":32,"start":2564}]},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c8063ad3cb1cc1161004e578063ad3cb1cc14610109578063ef690cc014610134578063f2fde38b1461015f578063f62d1888146101885761007b565b80634f1ef2861461008057806352d1902d1461009c578063715018a6146100c75780638da5cb5b146100de575b600080fd5b61009a600480360381019061009591906113dd565b6101b1565b005b3480156100a857600080fd5b506100b16101d0565b6040516100be9190611452565b60405180910390f35b3480156100d357600080fd5b506100dc610203565b005b3480156100ea57600080fd5b506100f361033d565b604051610100919061147c565b60405180910390f35b34801561011557600080fd5b5061011e610366565b60405161012b9190611516565b60405180910390f35b34801561014057600080fd5b5061014961039f565b6040516101569190611516565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190611538565b61042d565b005b34801561019457600080fd5b506101af60048036038101906101aa91906115c5565b6105d5565b005b6101b961077e565b6101c282610864565b6101cc82826108e3565b5050565b60006101da610a02565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b61020b610a89565b73ffffffffffffffffffffffffffffffffffffffff1661022961033d565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061165e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b603280546103ac906116ad565b80601f01602080910402602001604051908101604052809291908181526020018280546103d8906116ad565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b505050505081565b610435610a89565b73ffffffffffffffffffffffffffffffffffffffff1661045361033d565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a09061165e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90611750565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006105df610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561062d5750825b9050600060018367ffffffffffffffff16148015610662575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610670575080155b156106a7576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106f75760018560000160086101000a81548160ff0219169083151502179055505b868660329182610708929190611931565b50610711610ab9565b610719610ac3565b83156107755760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161076c9190611a50565b60405180910390a15b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061082b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610812610c58565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610862576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61086c610a89565b73ffffffffffffffffffffffffffffffffffffffff1661088a61033d565b73ffffffffffffffffffffffffffffffffffffffff16146108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d79061165e565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561094b57506040513d601f19601f820116820180604052508101906109489190611a97565b60015b61098c57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610983919061147c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146109f357806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016109ea9190611452565b60405180910390fd5b6109fd8383610caf565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610a87576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610ac1610d22565b565b6000610acd610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610b1b5750825b9050600060018367ffffffffffffffff16148015610b50575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b5e575080155b15610b95576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610be55760018560000160086101000a81548160ff0219169083151502179055505b610bed610d62565b610bf5610d6c565b8315610c515760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c489190611a50565b60405180910390a15b5050505050565b6000610c867f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f99565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610cb882610fa3565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610d1557610d0f8282611070565b50610d1e565b610d1d6110f4565b5b5050565b610d2a611131565b610d60576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610d6a610d22565b565b6000610d76610a91565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610dc45750825b9050600060018367ffffffffffffffff16148015610df9575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e07575080155b15610e3e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e8e5760018560000160086101000a81548160ff0219169083151502179055505b6000610e98610a89565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508315610f925760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610f899190611a50565b60405180910390a15b5050505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610fff57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610ff6919061147c565b60405180910390fd5b8061102c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f99565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161109a9190611b0b565b600060405180830381855af49150503d80600081146110d5576040519150601f19603f3d011682016040523d82523d6000602084013e6110da565b606091505b50915091506110ea858383611151565b9250505092915050565b600034111561112f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061113b610a91565b60000160089054906101000a900460ff16905090565b60608261116657611161826111e0565b6111d8565b6000825114801561118e575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156111d057836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111c7919061147c565b60405180910390fd5b8190506111d9565b5b9392505050565b6000815111156111f35780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126482611239565b9050919050565b61127481611259565b811461127f57600080fd5b50565b6000813590506112918161126b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112ea826112a1565b810181811067ffffffffffffffff82111715611309576113086112b2565b5b80604052505050565b600061131c611225565b905061132882826112e1565b919050565b600067ffffffffffffffff821115611348576113476112b2565b5b611351826112a1565b9050602081019050919050565b82818337600083830152505050565b600061138061137b8461132d565b611312565b90508281526020810184848401111561139c5761139b61129c565b5b6113a784828561135e565b509392505050565b600082601f8301126113c4576113c3611297565b5b81356113d484826020860161136d565b91505092915050565b600080604083850312156113f4576113f361122f565b5b600061140285828601611282565b925050602083013567ffffffffffffffff81111561142357611422611234565b5b61142f858286016113af565b9150509250929050565b6000819050919050565b61144c81611439565b82525050565b60006020820190506114676000830184611443565b92915050565b61147681611259565b82525050565b6000602082019050611491600083018461146d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d15780820151818401526020810190506114b6565b60008484015250505050565b60006114e882611497565b6114f281856114a2565b93506115028185602086016114b3565b61150b816112a1565b840191505092915050565b6000602082019050818103600083015261153081846114dd565b905092915050565b60006020828403121561154e5761154d61122f565b5b600061155c84828501611282565b91505092915050565b600080fd5b600080fd5b60008083601f84011261158557611584611297565b5b8235905067ffffffffffffffff8111156115a2576115a1611565565b5b6020830191508360018202830111156115be576115bd61156a565b5b9250929050565b600080602083850312156115dc576115db61122f565b5b600083013567ffffffffffffffff8111156115fa576115f9611234565b5b6116068582860161156f565b92509250509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116486020836114a2565b915061165382611612565b602082019050919050565b600060208201905081810360008301526116778161163b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116c557607f821691505b6020821081036116d8576116d761167e565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061173a6026836114a2565b9150611745826116de565b604082019050919050565b600060208201905081810360008301526117698161172d565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117a0565b6117e786836117a0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061182e611829611824846117ff565b611809565b6117ff565b9050919050565b6000819050919050565b61184883611813565b61185c61185482611835565b8484546117ad565b825550505050565b600090565b611871611864565b61187c81848461183f565b505050565b5b818110156118a057611895600082611869565b600181019050611882565b5050565b601f8211156118e5576118b68161177b565b6118bf84611790565b810160208510156118ce578190505b6118e26118da85611790565b830182611881565b50505b505050565b600082821c905092915050565b6000611908600019846008026118ea565b1980831691505092915050565b600061192183836118f7565b9150826002028217905092915050565b61193b8383611770565b67ffffffffffffffff811115611954576119536112b2565b5b61195e82546116ad565b6119698282856118a4565b6000601f8311600181146119985760008415611986578287013590505b6119908582611915565b8655506119f8565b601f1984166119a68661177b565b60005b828110156119ce578489013582556001820191506020850194506020810190506119a9565b868310156119eb57848901356119e7601f8916826118f7565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611a3a611a35611a3084611a01565b611809565b611a0b565b9050919050565b611a4a81611a1f565b82525050565b6000602082019050611a656000830184611a41565b92915050565b611a7481611439565b8114611a7f57600080fd5b50565b600081519050611a9181611a6b565b92915050565b600060208284031215611aad57611aac61122f565b5b6000611abb84828501611a82565b91505092915050565b600081519050919050565b600081905092915050565b6000611ae582611ac4565b611aef8185611acf565b9350611aff8185602086016114b3565b80840191505092915050565b6000611b178284611ada565b91508190509291505056fea264697066735822122097025df6f5ed8645d8d74cbe1c1daf509dc565df79898ff0eb8378a50c42fa4264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xEF690CC0 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x188 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x203 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1C2 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x1CC DUP3 DUP3 PUSH2 0x8E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA PUSH2 0xA02 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20B PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229 PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x16AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D8 SWAP1 PUSH2 0x16AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x425 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x425 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x408 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x453 PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x62D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x662 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP7 PUSH1 0x32 SWAP2 DUP3 PUSH2 0x708 SWAP3 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST POP PUSH2 0x711 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x719 PUSH2 0xAC3 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x82B JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x812 PUSH2 0xC58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x86C PUSH2 0xA89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A PUSH2 0x33D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x94B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x98C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0xD22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACD PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB1B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBED PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0xD6C JUMP JUMPDEST DUP4 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC48 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC86 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB8 DUP3 PUSH2 0xFA3 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD0F DUP3 DUP3 PUSH2 0x1070 JUMP JUMPDEST POP PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xD1D PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2A PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD6A PUSH2 0xD22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD76 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDC4 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDF9 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE8E JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0xE98 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xFFF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x102C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10EA DUP6 DUP4 DUP4 PUSH2 0x1151 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113B PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1166 JUMPI PUSH2 0x1161 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11D0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x11D9 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11F3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1264 DUP3 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP2 EQ PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1291 DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x12A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131C PUSH2 0x1225 JUMP JUMPDEST SWAP1 POP PUSH2 0x1328 DUP3 DUP3 PUSH2 0x12E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST PUSH2 0x1351 DUP3 PUSH2 0x12A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 PUSH2 0x137B DUP5 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x129C JUMP JUMPDEST JUMPDEST PUSH2 0x13A7 DUP5 DUP3 DUP6 PUSH2 0x135E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13C4 JUMPI PUSH2 0x13C3 PUSH2 0x1297 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13D4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP6 DUP3 DUP7 ADD PUSH2 0x1282 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x1234 JUMP JUMPDEST JUMPDEST PUSH2 0x142F DUP6 DUP3 DUP7 ADD PUSH2 0x13AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1467 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1491 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 DUP3 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x14F2 DUP2 DUP6 PUSH2 0x14A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1502 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP5 PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH2 0x154D PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x155C DUP5 DUP3 DUP6 ADD PUSH2 0x1282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1585 JUMPI PUSH2 0x1584 PUSH2 0x1297 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15BE JUMPI PUSH2 0x15BD PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x1234 JUMP JUMPDEST JUMPDEST PUSH2 0x1606 DUP6 DUP3 DUP7 ADD PUSH2 0x156F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1648 PUSH1 0x20 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1653 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1677 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x167E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A PUSH1 0x26 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1745 DUP3 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1769 DUP2 PUSH2 0x172D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x17DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x17E7 DUP7 DUP4 PUSH2 0x17A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182E PUSH2 0x1829 PUSH2 0x1824 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1848 DUP4 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x185C PUSH2 0x1854 DUP3 PUSH2 0x1835 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x17AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1871 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x187C DUP2 DUP5 DUP5 PUSH2 0x183F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI PUSH2 0x1895 PUSH1 0x0 DUP3 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1882 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18B6 DUP2 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x18BF DUP5 PUSH2 0x1790 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x18CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x18E2 PUSH2 0x18DA DUP6 PUSH2 0x1790 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x18EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 DUP4 DUP4 PUSH2 0x18F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x193B DUP4 DUP4 PUSH2 0x1770 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x12B2 JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP3 SLOAD PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1969 DUP3 DUP3 DUP6 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1998 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1986 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1990 DUP6 DUP3 PUSH2 0x1915 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19A6 DUP7 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19CE JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19A9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x19EB JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x19E7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x18F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3A PUSH2 0x1A35 PUSH2 0x1A30 DUP5 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A91 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x122F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABB DUP5 DUP3 DUP6 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE5 DUP3 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0x1AEF DUP2 DUP6 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 POP PUSH2 0x1AFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP3 DUP5 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 MUL TSTORE 0xF6 CREATE2 0xED DUP7 GASLIMIT 0xD8 0xD7 0x4C 0xBE SHR SAR 0xAF POP SWAP14 0xC5 PUSH6 0xDF79898FF0EB DUP4 PUSH25 0xA50C42FA4264736F6C634300081C0033000000000000000000 ","sourceMap":"328:412:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:214:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1965:145:23;;;;;;;;;;;;;:::i;:::-;;1333:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:22:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2259:240:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;457:163:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:25;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:6::1;3803:32:25;;3796:39;;3708:134:::0;:::o;1965:145:23:-;1556:12;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2071:1:::1;2034:40;;2055:6;::::0;::::1;;;;;;;;2034:40;;;;;;;;;;;;2101:1;2084:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1965:145::o:0;1333:85::-;1379:7;1405:6;;;;;;;;;;;1398:13;;1333:85;:::o;1819:58:25:-;;;;;;;;;;;;;;;;;;;:::o;428:22:21:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2259:240:23:-;1556:12;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2367:1:::1;2347:22;;:8;:22;;::::0;2339:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2456:8;2427:38;;2448:6;::::0;::::1;;;;;;;;2427:38;;;;;;;;;;;;2484:8;2475:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2259:240:::0;:::o;457:163:21:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;544:9:21::1;;533:8;:20;;;;;;;:::i;:::-;;563:24;:22;:24::i;:::-;597:16;:14;:16::i;:::-;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;457:163:21;;:::o;4603:312:25:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;626:112:21:-;1556:12:23;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;626:112:21;:::o;6057:538:25:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:6;6258:32:25;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;887:96:28:-;940:7;966:10;959:17;;887:96;:::o;8737:170:24:-;8795:30;8870:21;8860:31;;8737:170;:::o;2970:67:25:-;6931:20:24;:18;:20::i;:::-;2970:67:25:o;933:126:23:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;990:26:23::1;:24;:26::i;:::-;1026;:24;:26::i;:::-;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;933:126:23:o;1441:138:6:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7084:141:24:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;813:69:28:-;6931:20:24;:18;:20::i;:::-;813:69:28:o;1065:192:23:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1132:17:23::1;1152:12;:10;:12::i;:::-;1132:32;;1183:9;1174:6;::::0;:18:::1;;;;;;;;;;;;;;;;;;1240:9;1207:43;;1236:1;1207:43;;;;;;;;;;;;1122:135;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1065:192:23:o;1899:163:15:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:6:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:12:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:6:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:24:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4437:582:12:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:31;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:307::-;1864:4;1954:18;1946:6;1943:30;1940:56;;;1976:18;;:::i;:::-;1940:56;2014:29;2036:6;2014:29;:::i;:::-;2006:37;;2098:4;2092;2088:15;2080:23;;1803:307;;;:::o;2116:148::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2116:148;;;:::o;2270:423::-;2347:5;2372:65;2388:48;2429:6;2388:48;:::i;:::-;2372:65;:::i;:::-;2363:74;;2460:6;2453:5;2446:21;2498:4;2491:5;2487:16;2536:3;2527:6;2522:3;2518:16;2515:25;2512:112;;;2543:79;;:::i;:::-;2512:112;2633:54;2680:6;2675:3;2670;2633:54;:::i;:::-;2353:340;2270:423;;;;;:::o;2712:338::-;2767:5;2816:3;2809:4;2801:6;2797:17;2793:27;2783:122;;2824:79;;:::i;:::-;2783:122;2941:6;2928:20;2966:78;3040:3;3032:6;3025:4;3017:6;3013:17;2966:78;:::i;:::-;2957:87;;2773:277;2712:338;;;;:::o;3056:652::-;3133:6;3141;3190:2;3178:9;3169:7;3165:23;3161:32;3158:119;;;3196:79;;:::i;:::-;3158:119;3316:1;3341:53;3386:7;3377:6;3366:9;3362:22;3341:53;:::i;:::-;3331:63;;3287:117;3471:2;3460:9;3456:18;3443:32;3502:18;3494:6;3491:30;3488:117;;;3524:79;;:::i;:::-;3488:117;3629:62;3683:7;3674:6;3663:9;3659:22;3629:62;:::i;:::-;3619:72;;3414:287;3056:652;;;;;:::o;3714:77::-;3751:7;3780:5;3769:16;;3714:77;;;:::o;3797:118::-;3884:24;3902:5;3884:24;:::i;:::-;3879:3;3872:37;3797:118;;:::o;3921:222::-;4014:4;4052:2;4041:9;4037:18;4029:26;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;3921:222;;;;:::o;4149:118::-;4236:24;4254:5;4236:24;:::i;:::-;4231:3;4224:37;4149:118;;:::o;4273:222::-;4366:4;4404:2;4393:9;4389:18;4381:26;;4417:71;4485:1;4474:9;4470:17;4461:6;4417:71;:::i;:::-;4273:222;;;;:::o;4501:99::-;4553:6;4587:5;4581:12;4571:22;;4501:99;;;:::o;4606:169::-;4690:11;4724:6;4719:3;4712:19;4764:4;4759:3;4755:14;4740:29;;4606:169;;;;:::o;4781:248::-;4863:1;4873:113;4887:6;4884:1;4881:13;4873:113;;;4972:1;4967:3;4963:11;4957:18;4953:1;4948:3;4944:11;4937:39;4909:2;4906:1;4902:10;4897:15;;4873:113;;;5020:1;5011:6;5006:3;5002:16;4995:27;4843:186;4781:248;;;:::o;5035:377::-;5123:3;5151:39;5184:5;5151:39;:::i;:::-;5206:71;5270:6;5265:3;5206:71;:::i;:::-;5199:78;;5286:65;5344:6;5339:3;5332:4;5325:5;5321:16;5286:65;:::i;:::-;5376:29;5398:6;5376:29;:::i;:::-;5371:3;5367:39;5360:46;;5127:285;5035:377;;;;:::o;5418:313::-;5531:4;5569:2;5558:9;5554:18;5546:26;;5618:9;5612:4;5608:20;5604:1;5593:9;5589:17;5582:47;5646:78;5719:4;5710:6;5646:78;:::i;:::-;5638:86;;5418:313;;;;:::o;5737:329::-;5796:6;5845:2;5833:9;5824:7;5820:23;5816:32;5813:119;;;5851:79;;:::i;:::-;5813:119;5971:1;5996:53;6041:7;6032:6;6021:9;6017:22;5996:53;:::i;:::-;5986:63;;5942:117;5737:329;;;;:::o;6072:117::-;6181:1;6178;6171:12;6195:117;6304:1;6301;6294:12;6332:553;6390:8;6400:6;6450:3;6443:4;6435:6;6431:17;6427:27;6417:122;;6458:79;;:::i;:::-;6417:122;6571:6;6558:20;6548:30;;6601:18;6593:6;6590:30;6587:117;;;6623:79;;:::i;:::-;6587:117;6737:4;6729:6;6725:17;6713:29;;6791:3;6783:4;6775:6;6771:17;6761:8;6757:32;6754:41;6751:128;;;6798:79;;:::i;:::-;6751:128;6332:553;;;;;:::o;6891:529::-;6962:6;6970;7019:2;7007:9;6998:7;6994:23;6990:32;6987:119;;;7025:79;;:::i;:::-;6987:119;7173:1;7162:9;7158:17;7145:31;7203:18;7195:6;7192:30;7189:117;;;7225:79;;:::i;:::-;7189:117;7338:65;7395:7;7386:6;7375:9;7371:22;7338:65;:::i;:::-;7320:83;;;;7116:297;6891:529;;;;;:::o;7426:182::-;7566:34;7562:1;7554:6;7550:14;7543:58;7426:182;:::o;7614:366::-;7756:3;7777:67;7841:2;7836:3;7777:67;:::i;:::-;7770:74;;7853:93;7942:3;7853:93;:::i;:::-;7971:2;7966:3;7962:12;7955:19;;7614:366;;;:::o;7986:419::-;8152:4;8190:2;8179:9;8175:18;8167:26;;8239:9;8233:4;8229:20;8225:1;8214:9;8210:17;8203:47;8267:131;8393:4;8267:131;:::i;:::-;8259:139;;7986:419;;;:::o;8411:180::-;8459:77;8456:1;8449:88;8556:4;8553:1;8546:15;8580:4;8577:1;8570:15;8597:320;8641:6;8678:1;8672:4;8668:12;8658:22;;8725:1;8719:4;8715:12;8746:18;8736:81;;8802:4;8794:6;8790:17;8780:27;;8736:81;8864:2;8856:6;8853:14;8833:18;8830:38;8827:84;;8883:18;;:::i;:::-;8827:84;8648:269;8597:320;;;:::o;8923:225::-;9063:34;9059:1;9051:6;9047:14;9040:58;9132:8;9127:2;9119:6;9115:15;9108:33;8923:225;:::o;9154:366::-;9296:3;9317:67;9381:2;9376:3;9317:67;:::i;:::-;9310:74;;9393:93;9482:3;9393:93;:::i;:::-;9511:2;9506:3;9502:12;9495:19;;9154:366;;;:::o;9526:419::-;9692:4;9730:2;9719:9;9715:18;9707:26;;9779:9;9773:4;9769:20;9765:1;9754:9;9750:17;9743:47;9807:131;9933:4;9807:131;:::i;:::-;9799:139;;9526:419;;;:::o;9951:97::-;10010:6;10038:3;10028:13;;9951:97;;;;:::o;10054:141::-;10103:4;10126:3;10118:11;;10149:3;10146:1;10139:14;10183:4;10180:1;10170:18;10162:26;;10054:141;;;:::o;10201:93::-;10238:6;10285:2;10280;10273:5;10269:14;10265:23;10255:33;;10201:93;;;:::o;10300:107::-;10344:8;10394:5;10388:4;10384:16;10363:37;;10300:107;;;;:::o;10413:393::-;10482:6;10532:1;10520:10;10516:18;10555:97;10585:66;10574:9;10555:97;:::i;:::-;10673:39;10703:8;10692:9;10673:39;:::i;:::-;10661:51;;10745:4;10741:9;10734:5;10730:21;10721:30;;10794:4;10784:8;10780:19;10773:5;10770:30;10760:40;;10489:317;;10413:393;;;;;:::o;10812:77::-;10849:7;10878:5;10867:16;;10812:77;;;:::o;10895:60::-;10923:3;10944:5;10937:12;;10895:60;;;:::o;10961:142::-;11011:9;11044:53;11062:34;11071:24;11089:5;11071:24;:::i;:::-;11062:34;:::i;:::-;11044:53;:::i;:::-;11031:66;;10961:142;;;:::o;11109:75::-;11152:3;11173:5;11166:12;;11109:75;;;:::o;11190:269::-;11300:39;11331:7;11300:39;:::i;:::-;11361:91;11410:41;11434:16;11410:41;:::i;:::-;11402:6;11395:4;11389:11;11361:91;:::i;:::-;11355:4;11348:105;11266:193;11190:269;;;:::o;11465:73::-;11510:3;11465:73;:::o;11544:189::-;11621:32;;:::i;:::-;11662:65;11720:6;11712;11706:4;11662:65;:::i;:::-;11597:136;11544:189;;:::o;11739:186::-;11799:120;11816:3;11809:5;11806:14;11799:120;;;11870:39;11907:1;11900:5;11870:39;:::i;:::-;11843:1;11836:5;11832:13;11823:22;;11799:120;;;11739:186;;:::o;11931:543::-;12032:2;12027:3;12024:11;12021:446;;;12066:38;12098:5;12066:38;:::i;:::-;12150:29;12168:10;12150:29;:::i;:::-;12140:8;12136:44;12333:2;12321:10;12318:18;12315:49;;;12354:8;12339:23;;12315:49;12377:80;12433:22;12451:3;12433:22;:::i;:::-;12423:8;12419:37;12406:11;12377:80;:::i;:::-;12036:431;;12021:446;11931:543;;;:::o;12480:117::-;12534:8;12584:5;12578:4;12574:16;12553:37;;12480:117;;;;:::o;12603:169::-;12647:6;12680:51;12728:1;12724:6;12716:5;12713:1;12709:13;12680:51;:::i;:::-;12676:56;12761:4;12755;12751:15;12741:25;;12654:118;12603:169;;;;:::o;12777:295::-;12853:4;12999:29;13024:3;13018:4;12999:29;:::i;:::-;12991:37;;13061:3;13058:1;13054:11;13048:4;13045:21;13037:29;;12777:295;;;;:::o;13077:1403::-;13201:44;13241:3;13236;13201:44;:::i;:::-;13310:18;13302:6;13299:30;13296:56;;;13332:18;;:::i;:::-;13296:56;13376:38;13408:4;13402:11;13376:38;:::i;:::-;13461:67;13521:6;13513;13507:4;13461:67;:::i;:::-;13555:1;13584:2;13576:6;13573:14;13601:1;13596:632;;;;14272:1;14289:6;14286:84;;;14345:9;14340:3;14336:19;14323:33;14314:42;;14286:84;14396:67;14456:6;14449:5;14396:67;:::i;:::-;14390:4;14383:81;14245:229;13566:908;;13596:632;13648:4;13644:9;13636:6;13632:22;13682:37;13714:4;13682:37;:::i;:::-;13741:1;13755:215;13769:7;13766:1;13763:14;13755:215;;;13855:9;13850:3;13846:19;13833:33;13825:6;13818:49;13906:1;13898:6;13894:14;13884:24;;13953:2;13942:9;13938:18;13925:31;;13792:4;13789:1;13785:12;13780:17;;13755:215;;;13998:6;13989:7;13986:19;13983:186;;;14063:9;14058:3;14054:19;14041:33;14106:48;14148:4;14140:6;14136:17;14125:9;14106:48;:::i;:::-;14098:6;14091:64;14006:163;13983:186;14215:1;14211;14203:6;14199:14;14195:22;14189:4;14182:36;13603:625;;;13566:908;;13176:1304;;;13077:1403;;;:::o;14486:85::-;14531:7;14560:5;14549:16;;14486:85;;;:::o;14577:101::-;14613:7;14653:18;14646:5;14642:30;14631:41;;14577:101;;;:::o;14684:156::-;14741:9;14774:60;14791:42;14800:32;14826:5;14800:32;:::i;:::-;14791:42;:::i;:::-;14774:60;:::i;:::-;14761:73;;14684:156;;;:::o;14846:145::-;14940:44;14978:5;14940:44;:::i;:::-;14935:3;14928:57;14846:145;;:::o;14997:236::-;15097:4;15135:2;15124:9;15120:18;15112:26;;15148:78;15223:1;15212:9;15208:17;15199:6;15148:78;:::i;:::-;14997:236;;;;:::o;15239:122::-;15312:24;15330:5;15312:24;:::i;:::-;15305:5;15302:35;15292:63;;15351:1;15348;15341:12;15292:63;15239:122;:::o;15367:143::-;15424:5;15455:6;15449:13;15440:22;;15471:33;15498:5;15471:33;:::i;:::-;15367:143;;;;:::o;15516:351::-;15586:6;15635:2;15623:9;15614:7;15610:23;15606:32;15603:119;;;15641:79;;:::i;:::-;15603:119;15761:1;15786:64;15842:7;15833:6;15822:9;15818:22;15786:64;:::i;:::-;15776:74;;15732:128;15516:351;;;;:::o;15873:98::-;15924:6;15958:5;15952:12;15942:22;;15873:98;;;:::o;15977:147::-;16078:11;16115:3;16100:18;;15977:147;;;;:::o;16130:386::-;16234:3;16262:38;16294:5;16262:38;:::i;:::-;16316:88;16397:6;16392:3;16316:88;:::i;:::-;16309:95;;16413:65;16471:6;16466:3;16459:4;16452:5;16448:16;16413:65;:::i;:::-;16503:6;16498:3;16494:16;16487:23;;16238:278;16130:386;;;;:::o;16522:271::-;16652:3;16674:93;16763:3;16754:6;16674:93;:::i;:::-;16667:100;;16784:3;16777:10;;16522:271;;;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","greeting()":"ef690cc0","initialize(string)":"f62d1888","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contract1.sol\":\"OurUpgradeableNFT1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/contract1.sol\":{\"keccak256\":\"0xd2d959b5547daf2347bc25e8bb4b9c89d8089088f43ac881c14f2f04dd56cb2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ad11683a254da6a2218372409d59e769f55181d96f35fac2b0ebc64ad151a0b\",\"dweb:/ipfs/QmeCZDGQwCrMigQ2nmTjBDVocksz2ropR5DyYU5K8CfUtF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6839a7f9fdb061559b6192c64fc919c83cad99bf0ff4663f249f8409d9f88abf\",\"dweb:/ipfs/QmS6DzcqHkD8TipTTZ94FthQjBhX81sfYtAQQC9Qzifxxm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"contracts/contract2.sol":{"OurUpgradeableNFT2":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"greeting","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"greetingNew","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reInitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015604257600080fd5b50608051613ea661006c6000396000818161170d0152818161176201526119910152613ea66000f3fe60806040526004361061014b5760003560e01c80638da5cb5b116100b6578063d204c45e1161006f578063d204c45e1461046f578063d7b518a814610498578063e985e9c5146104c3578063ef690cc014610500578063f2fde38b1461052b578063f62d1888146105545761014b565b80638da5cb5b1461035f57806395d89b411461038a578063a22cb465146103b5578063ad3cb1cc146103de578063b88d4fde14610409578063c87b56dd146104325761014b565b806342842e0e1161010857806342842e0e1461025e5780634f1ef2861461028757806352d1902d146102a35780636352211e146102ce57806370a082311461030b578063715018a6146103485761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f557806323b872dd1461021e5780632de2333714610247575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190612f1f565b61057d565b6040516101849190612f67565b60405180910390f35b34801561019957600080fd5b506101a26105de565b6040516101af9190613012565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061306a565b61067f565b6040516101ec91906130d8565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061311f565b61069b565b005b34801561022a57600080fd5b506102456004803603810190610240919061315f565b6106b1565b005b34801561025357600080fd5b5061025c6107b3565b005b34801561026a57600080fd5b506102856004803603810190610280919061315f565b61095d565b005b6102a1600480360381019061029c91906132e7565b61097d565b005b3480156102af57600080fd5b506102b861099c565b6040516102c5919061335c565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061306a565b6109cf565b60405161030291906130d8565b60405180910390f35b34801561031757600080fd5b50610332600480360381019061032d9190613377565b6109e1565b60405161033f91906133b3565b60405180910390f35b34801561035457600080fd5b5061035d610aaa565b005b34801561036b57600080fd5b50610374610be4565b60405161038191906130d8565b60405180910390f35b34801561039657600080fd5b5061039f610c0d565b6040516103ac9190613012565b60405180910390f35b3480156103c157600080fd5b506103dc60048036038101906103d791906133fa565b610cae565b005b3480156103ea57600080fd5b506103f3610cc4565b6040516104009190613012565b60405180910390f35b34801561041557600080fd5b50610430600480360381019061042b919061343a565b610cfd565b005b34801561043e57600080fd5b506104596004803603810190610454919061306a565b610d22565b6040516104669190613012565b60405180910390f35b34801561047b57600080fd5b506104966004803603810190610491919061355e565b610d34565b005b3480156104a457600080fd5b506104ad610de1565b6040516104ba9190613012565b60405180910390f35b3480156104cf57600080fd5b506104ea60048036038101906104e591906135ba565b610e1e565b6040516104f79190612f67565b60405180910390f35b34801561050c57600080fd5b50610515610ec0565b6040516105229190613012565b60405180910390f35b34801561053757600080fd5b50610552600480360381019061054d9190613377565b610f4e565b005b34801561056057600080fd5b5061057b6004803603810190610576919061365a565b6110f6565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105d757506105d68261129f565b5b9050919050565b606060006105ea611381565b90508060000180546105fb906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610627906136d6565b80156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b505050505091505090565b600061068a826113a9565b5061069482611431565b9050919050565b6106ad82826106a861147c565b611484565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107235760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161071a91906130d8565b60405180910390fd5b6000610737838361073261147c565b611496565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107ad578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107a493929190613707565b60405180910390fd5b50505050565b600260006107bf6116c3565b90508060000160089054906101000a900460ff168061080a57508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b15610841576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff0219169083151502179055506108fd6040518060400160405280601181526020017f4f75725570677261646561626c654e46540000000000000000000000000000008152506040518060400160405280600381526020017f4f554e00000000000000000000000000000000000000000000000000000000008152506116eb565b610905611701565b60008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516109519190613761565b60405180910390a15050565b61097883838360405180602001604052806000815250610cfd565b505050565b61098561170b565b61098e826117f1565b6109988282611870565b5050565b60006109a661198f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006109da826113a9565b9050919050565b6000806109ec611381565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a605760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a5791906130d8565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610ab261147c565b73ffffffffffffffffffffffffffffffffffffffff16610ad0610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906137c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000610c19611381565b9050806001018054610c2a906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c56906136d6565b8015610ca35780601f10610c7857610100808354040283529160200191610ca3565b820191906000526020600020905b815481529060010190602001808311610c8657829003601f168201915b505050505091505090565b610cc0610cb961147c565b8383611a16565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610d088484846106b1565b610d1c610d1361147c565b85858585611b94565b50505050565b6060610d2d82611d45565b9050919050565b610d3c61147c565b73ffffffffffffffffffffffffffffffffffffffff16610d5a610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da7906137c8565b60405180910390fd5b6000610dbc6033611e69565b9050610dc86033611e77565b610dd28382611e8d565b610ddc8183611eab565b505050565b60606040518060400160405280601681526020017f4e6577205570677261646561626c6520576f726c642100000000000000000000815250905090565b600080610e29611381565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60328054610ecd906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef9906136d6565b8015610f465780601f10610f1b57610100808354040283529160200191610f46565b820191906000526020600020905b815481529060010190602001808311610f2957829003601f168201915b505050505081565b610f5661147c565b73ffffffffffffffffffffffffffffffffffffffff16610f74610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc1906137c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611039576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110309061385a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006111006116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561114e5750825b9050600060018367ffffffffffffffff16148015611183575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611191575080155b156111c8576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112185760018560000160086101000a81548160ff0219169083151502179055505b868660329182611229929190613a31565b50611232611f16565b61123a611f20565b83156112965760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161128d9190613b3c565b60405180910390a15b50505050505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061136a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061137a5750611379826120b5565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b6000806113b58361211f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361142857826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161141f91906133b3565b60405180910390fd5b80915050919050565b60008061143c611381565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611491838383600161216a565b505050565b6000806114a1611381565b905060006114ae8561211f565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146114f0576114ef81858761233e565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115835761153260008660008061216a565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116085760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6116f3612402565b6116fd8282612442565b5050565b611709612402565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806117b857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661179f61247f565b73ffffffffffffffffffffffffffffffffffffffff1614155b156117ef576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117f961147c565b73ffffffffffffffffffffffffffffffffffffffff16611817610be4565b73ffffffffffffffffffffffffffffffffffffffff161461186d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611864906137c8565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118d857506040513d601f19601f820116820180604052508101906118d59190613b83565b60015b61191957816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161191091906130d8565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461198057806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611977919061335c565b60405180910390fd5b61198a83836124d6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611a14576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611a20611381565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a9357826040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611a8a91906130d8565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051611b869190612f67565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611d3e578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611bf39493929190613c05565b6020604051808303816000875af1925050508015611c2f57506040513d601f19601f82011682018060405250810190611c2c9190613c66565b60015b611cb3573d8060008114611c5f576040519150601f19603f3d011682016040523d82523d6000602084013e611c64565b606091505b506000815103611cab57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ca291906130d8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611d3391906130d8565b60405180910390fd5b505b5050505050565b60606000611d51612549565b9050611d5c836113a9565b5060008160000160008581526020019081526020016000208054611d7f906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611dab906136d6565b8015611df85780601f10611dcd57610100808354040283529160200191611df8565b820191906000526020600020905b815481529060010190602001808311611ddb57829003601f168201915b505050505090506000611e09612571565b90506000815103611e1f57819350505050611e64565b600082511115611e55578082604051602001611e3c929190613ccf565b6040516020818303038152906040529350505050611e64565b611e5e85612588565b93505050505b919050565b600081600001549050919050565b6001816000016000828254019250508190555050565b611ea78282604051806020016040528060008152506125f1565b5050565b6000611eb5612549565b9050818160000160008581526020019081526020016000209081611ed99190613cf3565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051611f0991906133b3565b60405180910390a1505050565b611f1e612402565b565b6000611f2a6116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611f785750825b9050600060018367ffffffffffffffff16148015611fad575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611fbb575080155b15611ff2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156120425760018560000160086101000a81548160ff0219169083151502179055505b61204a612615565b61205261261f565b83156120ae5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516120a59190613b3c565b60405180910390a15b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061212a611381565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000612174611381565b905081806121af5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156122e35760006121bf856113a9565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561222a57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561223d575061223b8185610e1e565b155b1561227f57836040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161227691906130d8565b60405180910390fd5b82156122e157848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61234983838361284c565b6123fd57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123be57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016123b591906133b3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016123f4929190613dc5565b60405180910390fd5b505050565b61240a61290d565b612440576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61244a612402565b6000612454611381565b9050828160000190816124679190613cf3565b50818160010190816124799190613cf3565b50505050565b60006124ad7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61292d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6124df82612937565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561253c576125368282612a04565b50612545565b612544612a88565b5b5050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180602001604052806000815250905090565b6060612593826113a9565b50600061259e612571565b905060008151116125be57604051806020016040528060008152506125e9565b806125c884612ac5565b6040516020016125d9929190613ccf565b6040516020818303038152906040525b915050919050565b6125fb8383612b93565b61261061260661147c565b6000858585611b94565b505050565b61261d612402565b565b60006126296116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156126775750825b9050600060018367ffffffffffffffff161480156126ac575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156126ba575080155b156126f1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156127415760018560000160086101000a81548160ff0219169083151502179055505b600061274b61147c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35083156128455760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161283c9190613b3c565b60405180910390a15b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561290457508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806128c557506128c48484610e1e565b5b8061290357508273ffffffffffffffffffffffffffffffffffffffff166128eb83611431565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60006129176116c3565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361299357806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161298a91906130d8565b60405180910390fd5b806129c07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61292d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612a2e9190613e2a565b600060405180830381855af49150503d8060008114612a69576040519150601f19603f3d011682016040523d82523d6000602084013e612a6e565b606091505b5091509150612a7e858383612c8c565b9250505092915050565b6000341115612ac3576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060006001612ad484612d1b565b01905060008167ffffffffffffffff811115612af357612af26131bc565b5b6040519080825280601f01601f191660200182016040528015612b255781602001600182028036833780820191505090505b509050600082602001820190505b600115612b88578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612b7c57612b7b613e41565b5b04945060008503612b33575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c055760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612bfc91906130d8565b60405180910390fd5b6000612c1383836000611496565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612c875760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612c7e91906130d8565b60405180910390fd5b505050565b606082612ca157612c9c82612e6e565b612d13565b60008251148015612cc9575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15612d0b57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612d0291906130d8565b60405180910390fd5b819050612d14565b5b9392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612d79577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612d6f57612d6e613e41565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612db6576d04ee2d6d415b85acef81000000008381612dac57612dab613e41565b5b0492506020810190505b662386f26fc100008310612de557662386f26fc100008381612ddb57612dda613e41565b5b0492506010810190505b6305f5e1008310612e0e576305f5e1008381612e0457612e03613e41565b5b0492506008810190505b6127108310612e33576127108381612e2957612e28613e41565b5b0492506004810190505b60648310612e565760648381612e4c57612e4b613e41565b5b0492506002810190505b600a8310612e65576001810190505b80915050919050565b600081511115612e815780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612efc81612ec7565b8114612f0757600080fd5b50565b600081359050612f1981612ef3565b92915050565b600060208284031215612f3557612f34612ebd565b5b6000612f4384828501612f0a565b91505092915050565b60008115159050919050565b612f6181612f4c565b82525050565b6000602082019050612f7c6000830184612f58565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fbc578082015181840152602081019050612fa1565b60008484015250505050565b6000601f19601f8301169050919050565b6000612fe482612f82565b612fee8185612f8d565b9350612ffe818560208601612f9e565b61300781612fc8565b840191505092915050565b6000602082019050818103600083015261302c8184612fd9565b905092915050565b6000819050919050565b61304781613034565b811461305257600080fd5b50565b6000813590506130648161303e565b92915050565b6000602082840312156130805761307f612ebd565b5b600061308e84828501613055565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006130c282613097565b9050919050565b6130d2816130b7565b82525050565b60006020820190506130ed60008301846130c9565b92915050565b6130fc816130b7565b811461310757600080fd5b50565b600081359050613119816130f3565b92915050565b6000806040838503121561313657613135612ebd565b5b60006131448582860161310a565b925050602061315585828601613055565b9150509250929050565b60008060006060848603121561317857613177612ebd565b5b60006131868682870161310a565b93505060206131978682870161310a565b92505060406131a886828701613055565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131f482612fc8565b810181811067ffffffffffffffff82111715613213576132126131bc565b5b80604052505050565b6000613226612eb3565b905061323282826131eb565b919050565b600067ffffffffffffffff821115613252576132516131bc565b5b61325b82612fc8565b9050602081019050919050565b82818337600083830152505050565b600061328a61328584613237565b61321c565b9050828152602081018484840111156132a6576132a56131b7565b5b6132b1848285613268565b509392505050565b600082601f8301126132ce576132cd6131b2565b5b81356132de848260208601613277565b91505092915050565b600080604083850312156132fe576132fd612ebd565b5b600061330c8582860161310a565b925050602083013567ffffffffffffffff81111561332d5761332c612ec2565b5b613339858286016132b9565b9150509250929050565b6000819050919050565b61335681613343565b82525050565b6000602082019050613371600083018461334d565b92915050565b60006020828403121561338d5761338c612ebd565b5b600061339b8482850161310a565b91505092915050565b6133ad81613034565b82525050565b60006020820190506133c860008301846133a4565b92915050565b6133d781612f4c565b81146133e257600080fd5b50565b6000813590506133f4816133ce565b92915050565b6000806040838503121561341157613410612ebd565b5b600061341f8582860161310a565b9250506020613430858286016133e5565b9150509250929050565b6000806000806080858703121561345457613453612ebd565b5b60006134628782880161310a565b94505060206134738782880161310a565b935050604061348487828801613055565b925050606085013567ffffffffffffffff8111156134a5576134a4612ec2565b5b6134b1878288016132b9565b91505092959194509250565b600067ffffffffffffffff8211156134d8576134d76131bc565b5b6134e182612fc8565b9050602081019050919050565b60006135016134fc846134bd565b61321c565b90508281526020810184848401111561351d5761351c6131b7565b5b613528848285613268565b509392505050565b600082601f830112613545576135446131b2565b5b81356135558482602086016134ee565b91505092915050565b6000806040838503121561357557613574612ebd565b5b60006135838582860161310a565b925050602083013567ffffffffffffffff8111156135a4576135a3612ec2565b5b6135b085828601613530565b9150509250929050565b600080604083850312156135d1576135d0612ebd565b5b60006135df8582860161310a565b92505060206135f08582860161310a565b9150509250929050565b600080fd5b600080fd5b60008083601f84011261361a576136196131b2565b5b8235905067ffffffffffffffff811115613637576136366135fa565b5b602083019150836001820283011115613653576136526135ff565b5b9250929050565b6000806020838503121561367157613670612ebd565b5b600083013567ffffffffffffffff81111561368f5761368e612ec2565b5b61369b85828601613604565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806136ee57607f821691505b602082108103613701576137006136a7565b5b50919050565b600060608201905061371c60008301866130c9565b61372960208301856133a4565b61373660408301846130c9565b949350505050565b600067ffffffffffffffff82169050919050565b61375b8161373e565b82525050565b60006020820190506137766000830184613752565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006137b2602083612f8d565b91506137bd8261377c565b602082019050919050565b600060208201905081810360008301526137e1816137a5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613844602683612f8d565b915061384f826137e8565b604082019050919050565b6000602082019050818103600083015261387381613837565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138aa565b6138f186836138aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061392e61392961392484613034565b613909565b613034565b9050919050565b6000819050919050565b61394883613913565b61395c61395482613935565b8484546138b7565b825550505050565b600090565b613971613964565b61397c81848461393f565b505050565b5b818110156139a057613995600082613969565b600181019050613982565b5050565b601f8211156139e5576139b681613885565b6139bf8461389a565b810160208510156139ce578190505b6139e26139da8561389a565b830182613981565b50505b505050565b600082821c905092915050565b6000613a08600019846008026139ea565b1980831691505092915050565b6000613a2183836139f7565b9150826002028217905092915050565b613a3b838361387a565b67ffffffffffffffff811115613a5457613a536131bc565b5b613a5e82546136d6565b613a698282856139a4565b6000601f831160018114613a985760008415613a86578287013590505b613a908582613a15565b865550613af8565b601f198416613aa686613885565b60005b82811015613ace57848901358255600182019150602085019450602081019050613aa9565b86831015613aeb5784890135613ae7601f8916826139f7565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b6000613b26613b21613b1c84613b01565b613909565b61373e565b9050919050565b613b3681613b0b565b82525050565b6000602082019050613b516000830184613b2d565b92915050565b613b6081613343565b8114613b6b57600080fd5b50565b600081519050613b7d81613b57565b92915050565b600060208284031215613b9957613b98612ebd565b5b6000613ba784828501613b6e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613bd782613bb0565b613be18185613bbb565b9350613bf1818560208601612f9e565b613bfa81612fc8565b840191505092915050565b6000608082019050613c1a60008301876130c9565b613c2760208301866130c9565b613c3460408301856133a4565b8181036060830152613c468184613bcc565b905095945050505050565b600081519050613c6081612ef3565b92915050565b600060208284031215613c7c57613c7b612ebd565b5b6000613c8a84828501613c51565b91505092915050565b600081905092915050565b6000613ca982612f82565b613cb38185613c93565b9350613cc3818560208601612f9e565b80840191505092915050565b6000613cdb8285613c9e565b9150613ce78284613c9e565b91508190509392505050565b613cfc82612f82565b67ffffffffffffffff811115613d1557613d146131bc565b5b613d1f82546136d6565b613d2a8282856139a4565b600060209050601f831160018114613d5d5760008415613d4b578287015190505b613d558582613a15565b865550613dbd565b601f198416613d6b86613885565b60005b82811015613d9357848901518255600182019150602085019450602081019050613d6e565b86831015613db05784890151613dac601f8916826139f7565b8355505b6001600288020188555050505b505050505050565b6000604082019050613dda60008301856130c9565b613de760208301846133a4565b9392505050565b600081905092915050565b6000613e0482613bb0565b613e0e8185613dee565b9350613e1e818560208601612f9e565b80840191505092915050565b6000613e368284613df9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220380bd5a68b98e6bd78843a94bafc7cfff04bf64efe3ba420922bca30d80de38c64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x3EA6 PUSH2 0x6C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x170D ADD MSTORE DUP2 DUP2 PUSH2 0x1762 ADD MSTORE PUSH2 0x1991 ADD MSTORE PUSH2 0x3EA6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD204C45E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xD7B518A8 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xEF690CC0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x554 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x432 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x348 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2DE23337 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x311F JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH2 0x7B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x3377 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH2 0xAAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x355E JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x3377 JUMP JUMPDEST PUSH2 0xF4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5D7 JUMPI POP PUSH2 0x5D6 DUP3 PUSH2 0x129F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5EA PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x5FB SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x627 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x674 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x649 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x674 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x657 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH2 0x694 DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AD DUP3 DUP3 PUSH2 0x6A8 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1484 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x737 DUP4 DUP4 PUSH2 0x732 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AD JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x7BF PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x80A JUMPI POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8FD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F75725570677261646561626C654E4654000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F554E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x905 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x978 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCFD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x985 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x98E DUP3 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x998 DUP3 DUP3 PUSH2 0x1870 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A6 PUSH2 0x198F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DA DUP3 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9EC PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAD0 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC19 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC2A SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC56 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0xCB9 PUSH2 0x147C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1A16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xD08 DUP5 DUP5 DUP5 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD13 PUSH2 0x147C JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD2D DUP3 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3C PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5A PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA7 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDBC PUSH1 0x33 PUSH2 0x1E69 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC8 PUSH1 0x33 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0xDD2 DUP4 DUP3 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xDDC DUP2 DUP4 PUSH2 0x1EAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6577205570677261646561626C6520576F726C642100000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE29 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH2 0xECD SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF9 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xF56 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF74 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP1 PUSH2 0x385A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1100 PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x114E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1183 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1191 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP7 PUSH1 0x32 SWAP2 DUP3 PUSH2 0x1229 SWAP3 SWAP2 SWAP1 PUSH2 0x3A31 JUMP JUMPDEST POP PUSH2 0x1232 PUSH2 0x1F16 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x1F20 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x136A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x137A JUMPI POP PUSH2 0x1379 DUP3 PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B5 DUP4 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1428 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x143C PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1491 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x216A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14A1 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14AE DUP6 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F0 JUMPI PUSH2 0x14EF DUP2 DUP6 DUP8 PUSH2 0x233E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1583 JUMPI PUSH2 0x1532 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1608 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x16FD DUP3 DUP3 PUSH2 0x2442 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1709 PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x17B8 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x179F PUSH2 0x247F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17F9 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1817 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18D8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1919 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1980 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198A DUP4 DUP4 PUSH2 0x24D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A14 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A93 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B86 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1D3E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C2F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CB3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1CAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D51 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D5C DUP4 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1D7F SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DAB SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DCD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E1F JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1E55 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E3C SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x1E5E DUP6 PUSH2 0x2588 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EA7 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x25F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F09 SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1F1E PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2A PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F78 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FAD JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1FBB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2042 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x204A PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x2052 PUSH2 0x261F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20AE JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x20A5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212A PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2174 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x21AF JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x0 PUSH2 0x21BF DUP6 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x222A JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x223D JUMPI POP PUSH2 0x223B DUP2 DUP6 PUSH2 0xE1E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x227F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2276 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x22E1 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2349 DUP4 DUP4 DUP4 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x23FD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B5 SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x290D JUMP JUMPDEST PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x244A PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2454 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2479 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24DF DUP3 PUSH2 0x2937 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x253C JUMPI PUSH2 0x2536 DUP3 DUP3 PUSH2 0x2A04 JUMP JUMPDEST POP PUSH2 0x2545 JUMP JUMPDEST PUSH2 0x2544 PUSH2 0x2A88 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2593 DUP3 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x259E PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x25E9 JUMP JUMPDEST DUP1 PUSH2 0x25C8 DUP5 PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25FB DUP4 DUP4 PUSH2 0x2B93 JUMP JUMPDEST PUSH2 0x2610 PUSH2 0x2606 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1B94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x261D PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2677 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x26AC JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x26BA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x26F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2741 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x147C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0x2845 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x283C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2904 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x28C5 JUMPI POP PUSH2 0x28C4 DUP5 DUP5 PUSH2 0xE1E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2903 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28EB DUP4 PUSH2 0x1431 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2917 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2993 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x29C0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A2E SWAP2 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A69 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A7E DUP6 DUP4 DUP4 PUSH2 0x2C8C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2AC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2AD4 DUP5 PUSH2 0x2D1B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B25 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2B88 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2B7C JUMPI PUSH2 0x2B7B PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2B33 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BFC SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C13 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C87 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2CA1 JUMPI PUSH2 0x2C9C DUP3 PUSH2 0x2E6E JUMP JUMPDEST PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2CC9 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2D0B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D02 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2D14 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2D79 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2D6F JUMPI PUSH2 0x2D6E PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2DB6 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2DAC JUMPI PUSH2 0x2DAB PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2DE5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2DDB JUMPI PUSH2 0x2DDA PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2E0E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2E04 JUMPI PUSH2 0x2E03 PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2E33 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2E29 JUMPI PUSH2 0x2E28 PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2E56 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2E4C JUMPI PUSH2 0x2E4B PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E65 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E81 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFC DUP2 PUSH2 0x2EC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F19 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F35 JUMPI PUSH2 0x2F34 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F43 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F61 DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE4 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x2FEE DUP2 DUP6 PUSH2 0x2F8D JUMP JUMPDEST SWAP4 POP PUSH2 0x2FFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3007 DUP2 PUSH2 0x2FC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x302C DUP2 DUP5 PUSH2 0x2FD9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3047 DUP2 PUSH2 0x3034 JUMP JUMPDEST DUP2 EQ PUSH2 0x3052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3064 DUP2 PUSH2 0x303E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3080 JUMPI PUSH2 0x307F PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x308E DUP5 DUP3 DUP6 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C2 DUP3 PUSH2 0x3097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D2 DUP2 PUSH2 0x30B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30FC DUP2 PUSH2 0x30B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3119 DUP2 PUSH2 0x30F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3136 JUMPI PUSH2 0x3135 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3144 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3155 DUP6 DUP3 DUP7 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3178 JUMPI PUSH2 0x3177 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3186 DUP7 DUP3 DUP8 ADD PUSH2 0x310A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3197 DUP7 DUP3 DUP8 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31A8 DUP7 DUP3 DUP8 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x31F4 DUP3 PUSH2 0x2FC8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3213 JUMPI PUSH2 0x3212 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3226 PUSH2 0x2EB3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3232 DUP3 DUP3 PUSH2 0x31EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x325B DUP3 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328A PUSH2 0x3285 DUP5 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0x321C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32A6 JUMPI PUSH2 0x32A5 PUSH2 0x31B7 JUMP JUMPDEST JUMPDEST PUSH2 0x32B1 DUP5 DUP3 DUP6 PUSH2 0x3268 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32CE JUMPI PUSH2 0x32CD PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FE JUMPI PUSH2 0x32FD PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330C DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x332D JUMPI PUSH2 0x332C PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x3339 DUP6 DUP3 DUP7 ADD PUSH2 0x32B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3356 DUP2 PUSH2 0x3343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3371 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x338D JUMPI PUSH2 0x338C PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x339B DUP5 DUP3 DUP6 ADD PUSH2 0x310A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33AD DUP2 PUSH2 0x3034 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33D7 DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP2 EQ PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F4 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3411 JUMPI PUSH2 0x3410 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341F DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3430 DUP6 DUP3 DUP7 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3454 JUMPI PUSH2 0x3453 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3462 DUP8 DUP3 DUP9 ADD PUSH2 0x310A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3473 DUP8 DUP3 DUP9 ADD PUSH2 0x310A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3484 DUP8 DUP3 DUP9 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x34B1 DUP8 DUP3 DUP9 ADD PUSH2 0x32B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x34E1 DUP3 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3501 PUSH2 0x34FC DUP5 PUSH2 0x34BD JUMP JUMPDEST PUSH2 0x321C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x351D JUMPI PUSH2 0x351C PUSH2 0x31B7 JUMP JUMPDEST JUMPDEST PUSH2 0x3528 DUP5 DUP3 DUP6 PUSH2 0x3268 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3545 JUMPI PUSH2 0x3544 PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3555 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3575 JUMPI PUSH2 0x3574 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3583 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x35A3 PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x35B0 DUP6 DUP3 DUP7 ADD PUSH2 0x3530 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35D1 JUMPI PUSH2 0x35D0 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35DF DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F0 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x361A JUMPI PUSH2 0x3619 PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x35FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3653 JUMPI PUSH2 0x3652 PUSH2 0x35FF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3671 JUMPI PUSH2 0x3670 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368F JUMPI PUSH2 0x368E PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x369B DUP6 DUP3 DUP7 ADD PUSH2 0x3604 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x36EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3701 JUMPI PUSH2 0x3700 PUSH2 0x36A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x371C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3729 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x3736 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x375B DUP2 PUSH2 0x373E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B2 PUSH1 0x20 DUP4 PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP PUSH2 0x37BD DUP3 PUSH2 0x377C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E1 DUP2 PUSH2 0x37A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3844 PUSH1 0x26 DUP4 PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP PUSH2 0x384F DUP3 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3873 DUP2 PUSH2 0x3837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x38F1 DUP7 DUP4 PUSH2 0x38AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392E PUSH2 0x3929 PUSH2 0x3924 DUP5 PUSH2 0x3034 JUMP JUMPDEST PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x3034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3948 DUP4 PUSH2 0x3913 JUMP JUMPDEST PUSH2 0x395C PUSH2 0x3954 DUP3 PUSH2 0x3935 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x38B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3971 PUSH2 0x3964 JUMP JUMPDEST PUSH2 0x397C DUP2 DUP5 DUP5 PUSH2 0x393F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39A0 JUMPI PUSH2 0x3995 PUSH1 0x0 DUP3 PUSH2 0x3969 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3982 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39E5 JUMPI PUSH2 0x39B6 DUP2 PUSH2 0x3885 JUMP JUMPDEST PUSH2 0x39BF DUP5 PUSH2 0x389A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39E2 PUSH2 0x39DA DUP6 PUSH2 0x389A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3981 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A08 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A21 DUP4 DUP4 PUSH2 0x39F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A3B DUP4 DUP4 PUSH2 0x387A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A54 JUMPI PUSH2 0x3A53 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x3A5E DUP3 SLOAD PUSH2 0x36D6 JUMP JUMPDEST PUSH2 0x3A69 DUP3 DUP3 DUP6 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3A98 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A86 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x3A90 DUP6 DUP3 PUSH2 0x3A15 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3AF8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3AA6 DUP7 PUSH2 0x3885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3ACE JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AA9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AEB JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x3AE7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B26 PUSH2 0x3B21 PUSH2 0x3B1C DUP5 PUSH2 0x3B01 JUMP JUMPDEST PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x373E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B36 DUP2 PUSH2 0x3B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B60 DUP2 PUSH2 0x3343 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B7D DUP2 PUSH2 0x3B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BA7 DUP5 DUP3 DUP6 ADD PUSH2 0x3B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD7 DUP3 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0x3BE1 DUP2 DUP6 PUSH2 0x3BBB JUMP JUMPDEST SWAP4 POP PUSH2 0x3BF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3BFA DUP2 PUSH2 0x2FC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C1A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3C27 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3C34 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C46 DUP2 DUP5 PUSH2 0x3BCC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C60 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C7C JUMPI PUSH2 0x3C7B PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C8A DUP5 DUP3 DUP6 ADD PUSH2 0x3C51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA9 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3CB3 DUP2 DUP6 PUSH2 0x3C93 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDB DUP3 DUP6 PUSH2 0x3C9E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE7 DUP3 DUP5 PUSH2 0x3C9E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3CFC DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x3D1F DUP3 SLOAD PUSH2 0x36D6 JUMP JUMPDEST PUSH2 0x3D2A DUP3 DUP3 DUP6 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D5D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3D4B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3D55 DUP6 DUP3 PUSH2 0x3A15 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3D6B DUP7 PUSH2 0x3885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3D93 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D6E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3DB0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3DAC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DDA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3DE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E04 DUP3 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0x3E0E DUP2 DUP6 PUSH2 0x3DEE JUMP JUMPDEST SWAP4 POP PUSH2 0x3E1E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E36 DUP3 DUP5 PUSH2 0x3DF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SIGNEXTEND 0xD5 0xA6 DUP12 SWAP9 0xE6 0xBD PUSH25 0x843A94BAFC7CFFF04BF64EFE3BA420922BCA30D80DE38C6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"298:978:22:-:0;;;1171:4:25;1128:48;;;;;;;;;298:978:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_6463":{"entryPoint":3268,"id":6463,"parameterSlots":0,"returnSlots":0},"@__Context_init_unchained_7890":{"entryPoint":9749,"id":7890,"parameterSlots":0,"returnSlots":0},"@__ERC721URIStorage_init_7752":{"entryPoint":5889,"id":7752,"parameterSlots":0,"returnSlots":0},"@__ERC721_init_6708":{"entryPoint":5867,"id":6708,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_6736":{"entryPoint":9282,"id":6736,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_6084":{"entryPoint":7968,"id":6084,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_6107":{"entryPoint":9759,"id":6107,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_6493":{"entryPoint":7958,"id":6493,"parameterSlots":0,"returnSlots":0},"@_approve_7552":{"entryPoint":5252,"id":7552,"parameterSlots":3,"returnSlots":0},"@_approve_7626":{"entryPoint":8554,"id":7626,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_5968":{"entryPoint":6129,"id":5968,"parameterSlots":1,"returnSlots":0},"@_baseURI_6892":{"entryPoint":9585,"id":6892,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_7172":{"entryPoint":9022,"id":7172,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_6361":{"entryPoint":9218,"id":6361,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_492":{"entryPoint":10888,"id":492,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_6569":{"entryPoint":6543,"id":6569,"parameterSlots":0,"returnSlots":0},"@_checkProxy_6553":{"entryPoint":5899,"id":6553,"parameterSlots":0,"returnSlots":0},"@_getApproved_7099":{"entryPoint":5169,"id":7099,"parameterSlots":1,"returnSlots":1},"@_getERC721Storage_6692":{"entryPoint":4993,"id":6692,"parameterSlots":0,"returnSlots":1},"@_getERC721URIStorageStorage_7746":{"entryPoint":9545,"id":7746,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_6438":{"entryPoint":5827,"id":6438,"parameterSlots":0,"returnSlots":1},"@_isAuthorized_7135":{"entryPoint":10316,"id":7135,"parameterSlots":3,"returnSlots":1},"@_isInitializing_6429":{"entryPoint":10509,"id":6429,"parameterSlots":0,"returnSlots":1},"@_mint_7348":{"entryPoint":11155,"id":7348,"parameterSlots":2,"returnSlots":0},"@_msgSender_7899":{"entryPoint":5244,"id":7899,"parameterSlots":0,"returnSlots":1},"@_ownerOf_7079":{"entryPoint":8479,"id":7079,"parameterSlots":1,"returnSlots":1},"@_requireOwned_7700":{"entryPoint":5033,"id":7700,"parameterSlots":1,"returnSlots":1},"@_revert_1002":{"entryPoint":11886,"id":1002,"parameterSlots":1,"returnSlots":0},"@_safeMint_7363":{"entryPoint":7821,"id":7363,"parameterSlots":2,"returnSlots":0},"@_safeMint_7393":{"entryPoint":9713,"id":7393,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_7671":{"entryPoint":6678,"id":7671,"parameterSlots":3,"returnSlots":0},"@_setImplementation_272":{"entryPoint":10551,"id":272,"parameterSlots":1,"returnSlots":0},"@_setTokenURI_7870":{"entryPoint":7851,"id":7870,"parameterSlots":2,"returnSlots":0},"@_update_7298":{"entryPoint":5270,"id":7298,"parameterSlots":3,"returnSlots":1},"@_upgradeToAndCallUUPS_6620":{"entryPoint":6256,"id":6620,"parameterSlots":2,"returnSlots":0},"@approve_6908":{"entryPoint":1691,"id":6908,"parameterSlots":2,"returnSlots":0},"@balanceOf_6802":{"entryPoint":2529,"id":6802,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_742":{"entryPoint":7060,"id":742,"parameterSlots":5,"returnSlots":0},"@current_7935":{"entryPoint":7785,"id":7935,"parameterSlots":1,"returnSlots":1},"@functionDelegateCall_920":{"entryPoint":10756,"id":920,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1112":{"entryPoint":10541,"id":1112,"parameterSlots":1,"returnSlots":1},"@getApproved_6925":{"entryPoint":1663,"id":6925,"parameterSlots":1,"returnSlots":1},"@getImplementation_245":{"entryPoint":9343,"id":245,"parameterSlots":0,"returnSlots":1},"@greetingNew_6008":{"entryPoint":3553,"id":6008,"parameterSlots":0,"returnSlots":1},"@greeting_5941":{"entryPoint":3776,"id":5941,"parameterSlots":0,"returnSlots":0},"@increment_7949":{"entryPoint":7799,"id":7949,"parameterSlots":1,"returnSlots":0},"@initialize_5959":{"entryPoint":4342,"id":5959,"parameterSlots":2,"returnSlots":0},"@isApprovedForAll_6965":{"entryPoint":3614,"id":6965,"parameterSlots":2,"returnSlots":1},"@log10_3791":{"entryPoint":11547,"id":3791,"parameterSlots":1,"returnSlots":1},"@name_6831":{"entryPoint":1502,"id":6831,"parameterSlots":0,"returnSlots":1},"@ownerOf_6815":{"entryPoint":2511,"id":6815,"parameterSlots":1,"returnSlots":1},"@owner_6116":{"entryPoint":3044,"id":6116,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_6511":{"entryPoint":2460,"id":6511,"parameterSlots":0,"returnSlots":1},"@reInitialize_6000":{"entryPoint":1971,"id":6000,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_6152":{"entryPoint":2730,"id":6152,"parameterSlots":0,"returnSlots":0},"@safeMint_6039":{"entryPoint":3380,"id":6039,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_7029":{"entryPoint":2397,"id":7029,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_7059":{"entryPoint":3325,"id":7059,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_6941":{"entryPoint":3246,"id":6941,"parameterSlots":2,"returnSlots":0},"@supportsInterface_6767":{"entryPoint":4767,"id":6767,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7779":{"entryPoint":1405,"id":7779,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8030":{"entryPoint":8373,"id":8030,"parameterSlots":1,"returnSlots":1},"@symbol_6847":{"entryPoint":3085,"id":6847,"parameterSlots":0,"returnSlots":1},"@toString_1279":{"entryPoint":10949,"id":1279,"parameterSlots":1,"returnSlots":1},"@tokenURI_6053":{"entryPoint":3362,"id":6053,"parameterSlots":1,"returnSlots":1},"@tokenURI_6883":{"entryPoint":9608,"id":6883,"parameterSlots":1,"returnSlots":1},"@tokenURI_7843":{"entryPoint":7493,"id":7843,"parameterSlots":1,"returnSlots":1},"@transferFrom_7011":{"entryPoint":1713,"id":7011,"parameterSlots":3,"returnSlots":0},"@transferOwnership_6180":{"entryPoint":3918,"id":6180,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_308":{"entryPoint":9430,"id":308,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_6531":{"entryPoint":2429,"id":6531,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_960":{"entryPoint":11404,"id":960,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12919,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13550,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":15214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":12985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":13828,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":13616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13754,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12639,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":13370,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13306,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":13031,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":13662,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12575,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":15235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":12063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":13914,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":12394,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12489,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12120,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":15149,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12249,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":14391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":14245,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13220,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":14162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15567,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15365,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15813,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":14087,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":15164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14280,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":14177,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":12828,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11955,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12855,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13501,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14469,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15280,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":14458,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12162,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15291,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15854,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12173,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15507,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14756,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":12471,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12108,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13123,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11975,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":15105,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12439,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12340,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":14142,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14721,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":15115,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14611,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":14897,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15603,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":12904,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12190,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14490,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14038,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14869,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":12779,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14601,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14839,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":15937,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13991,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12732,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14645,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":13818,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12722,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13823,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12727,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11970,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11965,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12232,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14506,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14826,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14697,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":14312,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":14204,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14519,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14655,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12531,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13262,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15191,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12019,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12350,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14692,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:29384:31","nodeType":"YulBlock","src":"0:29384:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"378:105:31","nodeType":"YulBlock","src":"378:105:31","statements":[{"nativeSrc":"388:89:31","nodeType":"YulAssignment","src":"388:89:31","value":{"arguments":[{"name":"value","nativeSrc":"403:5:31","nodeType":"YulIdentifier","src":"403:5:31"},{"kind":"number","nativeSrc":"410:66:31","nodeType":"YulLiteral","src":"410:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:31","nodeType":"YulIdentifier","src":"399:3:31"},"nativeSrc":"399:78:31","nodeType":"YulFunctionCall","src":"399:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:31","nodeType":"YulIdentifier","src":"388:7:31"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:31","nodeType":"YulTypedName","src":"360:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:31","nodeType":"YulTypedName","src":"370:7:31","type":""}],"src":"334:149:31"},{"body":{"nativeSrc":"531:78:31","nodeType":"YulBlock","src":"531:78:31","statements":[{"body":{"nativeSrc":"587:16:31","nodeType":"YulBlock","src":"587:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:31","nodeType":"YulLiteral","src":"596:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:31","nodeType":"YulLiteral","src":"599:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:31","nodeType":"YulIdentifier","src":"589:6:31"},"nativeSrc":"589:12:31","nodeType":"YulFunctionCall","src":"589:12:31"},"nativeSrc":"589:12:31","nodeType":"YulExpressionStatement","src":"589:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:31","nodeType":"YulIdentifier","src":"554:5:31"},{"arguments":[{"name":"value","nativeSrc":"578:5:31","nodeType":"YulIdentifier","src":"578:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:31","nodeType":"YulIdentifier","src":"561:16:31"},"nativeSrc":"561:23:31","nodeType":"YulFunctionCall","src":"561:23:31"}],"functionName":{"name":"eq","nativeSrc":"551:2:31","nodeType":"YulIdentifier","src":"551:2:31"},"nativeSrc":"551:34:31","nodeType":"YulFunctionCall","src":"551:34:31"}],"functionName":{"name":"iszero","nativeSrc":"544:6:31","nodeType":"YulIdentifier","src":"544:6:31"},"nativeSrc":"544:42:31","nodeType":"YulFunctionCall","src":"544:42:31"},"nativeSrc":"541:62:31","nodeType":"YulIf","src":"541:62:31"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:31","nodeType":"YulTypedName","src":"524:5:31","type":""}],"src":"489:120:31"},{"body":{"nativeSrc":"666:86:31","nodeType":"YulBlock","src":"666:86:31","statements":[{"nativeSrc":"676:29:31","nodeType":"YulAssignment","src":"676:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:31","nodeType":"YulIdentifier","src":"698:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:31","nodeType":"YulIdentifier","src":"685:12:31"},"nativeSrc":"685:20:31","nodeType":"YulFunctionCall","src":"685:20:31"},"variableNames":[{"name":"value","nativeSrc":"676:5:31","nodeType":"YulIdentifier","src":"676:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:31","nodeType":"YulIdentifier","src":"740:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:31","nodeType":"YulIdentifier","src":"714:25:31"},"nativeSrc":"714:32:31","nodeType":"YulFunctionCall","src":"714:32:31"},"nativeSrc":"714:32:31","nodeType":"YulExpressionStatement","src":"714:32:31"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:31","nodeType":"YulTypedName","src":"644:6:31","type":""},{"name":"end","nativeSrc":"652:3:31","nodeType":"YulTypedName","src":"652:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:31","nodeType":"YulTypedName","src":"660:5:31","type":""}],"src":"615:137:31"},{"body":{"nativeSrc":"823:262:31","nodeType":"YulBlock","src":"823:262:31","statements":[{"body":{"nativeSrc":"869:83:31","nodeType":"YulBlock","src":"869:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:31","nodeType":"YulIdentifier","src":"871:77:31"},"nativeSrc":"871:79:31","nodeType":"YulFunctionCall","src":"871:79:31"},"nativeSrc":"871:79:31","nodeType":"YulExpressionStatement","src":"871:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:31","nodeType":"YulIdentifier","src":"844:7:31"},{"name":"headStart","nativeSrc":"853:9:31","nodeType":"YulIdentifier","src":"853:9:31"}],"functionName":{"name":"sub","nativeSrc":"840:3:31","nodeType":"YulIdentifier","src":"840:3:31"},"nativeSrc":"840:23:31","nodeType":"YulFunctionCall","src":"840:23:31"},{"kind":"number","nativeSrc":"865:2:31","nodeType":"YulLiteral","src":"865:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:31","nodeType":"YulIdentifier","src":"836:3:31"},"nativeSrc":"836:32:31","nodeType":"YulFunctionCall","src":"836:32:31"},"nativeSrc":"833:119:31","nodeType":"YulIf","src":"833:119:31"},{"nativeSrc":"962:116:31","nodeType":"YulBlock","src":"962:116:31","statements":[{"nativeSrc":"977:15:31","nodeType":"YulVariableDeclaration","src":"977:15:31","value":{"kind":"number","nativeSrc":"991:1:31","nodeType":"YulLiteral","src":"991:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:31","nodeType":"YulTypedName","src":"981:6:31","type":""}]},{"nativeSrc":"1006:62:31","nodeType":"YulAssignment","src":"1006:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:31","nodeType":"YulIdentifier","src":"1040:9:31"},{"name":"offset","nativeSrc":"1051:6:31","nodeType":"YulIdentifier","src":"1051:6:31"}],"functionName":{"name":"add","nativeSrc":"1036:3:31","nodeType":"YulIdentifier","src":"1036:3:31"},"nativeSrc":"1036:22:31","nodeType":"YulFunctionCall","src":"1036:22:31"},{"name":"dataEnd","nativeSrc":"1060:7:31","nodeType":"YulIdentifier","src":"1060:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:31","nodeType":"YulIdentifier","src":"1016:19:31"},"nativeSrc":"1016:52:31","nodeType":"YulFunctionCall","src":"1016:52:31"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:31","nodeType":"YulIdentifier","src":"1006:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:31","nodeType":"YulTypedName","src":"793:9:31","type":""},{"name":"dataEnd","nativeSrc":"804:7:31","nodeType":"YulTypedName","src":"804:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:31","nodeType":"YulTypedName","src":"816:6:31","type":""}],"src":"758:327:31"},{"body":{"nativeSrc":"1133:48:31","nodeType":"YulBlock","src":"1133:48:31","statements":[{"nativeSrc":"1143:32:31","nodeType":"YulAssignment","src":"1143:32:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:31","nodeType":"YulIdentifier","src":"1168:5:31"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:31","nodeType":"YulIdentifier","src":"1161:6:31"},"nativeSrc":"1161:13:31","nodeType":"YulFunctionCall","src":"1161:13:31"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:31","nodeType":"YulIdentifier","src":"1154:6:31"},"nativeSrc":"1154:21:31","nodeType":"YulFunctionCall","src":"1154:21:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:31","nodeType":"YulIdentifier","src":"1143:7:31"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:31","nodeType":"YulTypedName","src":"1115:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:31","nodeType":"YulTypedName","src":"1125:7:31","type":""}],"src":"1091:90:31"},{"body":{"nativeSrc":"1246:50:31","nodeType":"YulBlock","src":"1246:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:31","nodeType":"YulIdentifier","src":"1263:3:31"},{"arguments":[{"name":"value","nativeSrc":"1283:5:31","nodeType":"YulIdentifier","src":"1283:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:31","nodeType":"YulIdentifier","src":"1268:14:31"},"nativeSrc":"1268:21:31","nodeType":"YulFunctionCall","src":"1268:21:31"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:31","nodeType":"YulIdentifier","src":"1256:6:31"},"nativeSrc":"1256:34:31","nodeType":"YulFunctionCall","src":"1256:34:31"},"nativeSrc":"1256:34:31","nodeType":"YulExpressionStatement","src":"1256:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:31","nodeType":"YulTypedName","src":"1234:5:31","type":""},{"name":"pos","nativeSrc":"1241:3:31","nodeType":"YulTypedName","src":"1241:3:31","type":""}],"src":"1187:109:31"},{"body":{"nativeSrc":"1394:118:31","nodeType":"YulBlock","src":"1394:118:31","statements":[{"nativeSrc":"1404:26:31","nodeType":"YulAssignment","src":"1404:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:31","nodeType":"YulIdentifier","src":"1416:9:31"},{"kind":"number","nativeSrc":"1427:2:31","nodeType":"YulLiteral","src":"1427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:31","nodeType":"YulIdentifier","src":"1412:3:31"},"nativeSrc":"1412:18:31","nodeType":"YulFunctionCall","src":"1412:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:31","nodeType":"YulIdentifier","src":"1404:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:31","nodeType":"YulIdentifier","src":"1478:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:31","nodeType":"YulIdentifier","src":"1491:9:31"},{"kind":"number","nativeSrc":"1502:1:31","nodeType":"YulLiteral","src":"1502:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:31","nodeType":"YulIdentifier","src":"1487:3:31"},"nativeSrc":"1487:17:31","nodeType":"YulFunctionCall","src":"1487:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:31","nodeType":"YulIdentifier","src":"1440:37:31"},"nativeSrc":"1440:65:31","nodeType":"YulFunctionCall","src":"1440:65:31"},"nativeSrc":"1440:65:31","nodeType":"YulExpressionStatement","src":"1440:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:31","nodeType":"YulTypedName","src":"1366:9:31","type":""},{"name":"value0","nativeSrc":"1378:6:31","nodeType":"YulTypedName","src":"1378:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:31","nodeType":"YulTypedName","src":"1389:4:31","type":""}],"src":"1302:210:31"},{"body":{"nativeSrc":"1577:40:31","nodeType":"YulBlock","src":"1577:40:31","statements":[{"nativeSrc":"1588:22:31","nodeType":"YulAssignment","src":"1588:22:31","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:31","nodeType":"YulIdentifier","src":"1604:5:31"}],"functionName":{"name":"mload","nativeSrc":"1598:5:31","nodeType":"YulIdentifier","src":"1598:5:31"},"nativeSrc":"1598:12:31","nodeType":"YulFunctionCall","src":"1598:12:31"},"variableNames":[{"name":"length","nativeSrc":"1588:6:31","nodeType":"YulIdentifier","src":"1588:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:31","nodeType":"YulTypedName","src":"1560:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:31","nodeType":"YulTypedName","src":"1570:6:31","type":""}],"src":"1518:99:31"},{"body":{"nativeSrc":"1719:73:31","nodeType":"YulBlock","src":"1719:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:31","nodeType":"YulIdentifier","src":"1736:3:31"},{"name":"length","nativeSrc":"1741:6:31","nodeType":"YulIdentifier","src":"1741:6:31"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:31","nodeType":"YulIdentifier","src":"1729:6:31"},"nativeSrc":"1729:19:31","nodeType":"YulFunctionCall","src":"1729:19:31"},"nativeSrc":"1729:19:31","nodeType":"YulExpressionStatement","src":"1729:19:31"},{"nativeSrc":"1757:29:31","nodeType":"YulAssignment","src":"1757:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:31","nodeType":"YulIdentifier","src":"1776:3:31"},{"kind":"number","nativeSrc":"1781:4:31","nodeType":"YulLiteral","src":"1781:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:31","nodeType":"YulIdentifier","src":"1772:3:31"},"nativeSrc":"1772:14:31","nodeType":"YulFunctionCall","src":"1772:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:31","nodeType":"YulIdentifier","src":"1757:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:31","nodeType":"YulTypedName","src":"1691:3:31","type":""},{"name":"length","nativeSrc":"1696:6:31","nodeType":"YulTypedName","src":"1696:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:31","nodeType":"YulTypedName","src":"1707:11:31","type":""}],"src":"1623:169:31"},{"body":{"nativeSrc":"1860:186:31","nodeType":"YulBlock","src":"1860:186:31","statements":[{"nativeSrc":"1871:10:31","nodeType":"YulVariableDeclaration","src":"1871:10:31","value":{"kind":"number","nativeSrc":"1880:1:31","nodeType":"YulLiteral","src":"1880:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:31","nodeType":"YulTypedName","src":"1875:1:31","type":""}]},{"body":{"nativeSrc":"1940:63:31","nodeType":"YulBlock","src":"1940:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:31","nodeType":"YulIdentifier","src":"1965:3:31"},{"name":"i","nativeSrc":"1970:1:31","nodeType":"YulIdentifier","src":"1970:1:31"}],"functionName":{"name":"add","nativeSrc":"1961:3:31","nodeType":"YulIdentifier","src":"1961:3:31"},"nativeSrc":"1961:11:31","nodeType":"YulFunctionCall","src":"1961:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:31","nodeType":"YulIdentifier","src":"1984:3:31"},{"name":"i","nativeSrc":"1989:1:31","nodeType":"YulIdentifier","src":"1989:1:31"}],"functionName":{"name":"add","nativeSrc":"1980:3:31","nodeType":"YulIdentifier","src":"1980:3:31"},"nativeSrc":"1980:11:31","nodeType":"YulFunctionCall","src":"1980:11:31"}],"functionName":{"name":"mload","nativeSrc":"1974:5:31","nodeType":"YulIdentifier","src":"1974:5:31"},"nativeSrc":"1974:18:31","nodeType":"YulFunctionCall","src":"1974:18:31"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:31","nodeType":"YulIdentifier","src":"1954:6:31"},"nativeSrc":"1954:39:31","nodeType":"YulFunctionCall","src":"1954:39:31"},"nativeSrc":"1954:39:31","nodeType":"YulExpressionStatement","src":"1954:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:31","nodeType":"YulIdentifier","src":"1901:1:31"},{"name":"length","nativeSrc":"1904:6:31","nodeType":"YulIdentifier","src":"1904:6:31"}],"functionName":{"name":"lt","nativeSrc":"1898:2:31","nodeType":"YulIdentifier","src":"1898:2:31"},"nativeSrc":"1898:13:31","nodeType":"YulFunctionCall","src":"1898:13:31"},"nativeSrc":"1890:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:31","nodeType":"YulBlock","src":"1912:19:31","statements":[{"nativeSrc":"1914:15:31","nodeType":"YulAssignment","src":"1914:15:31","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:31","nodeType":"YulIdentifier","src":"1923:1:31"},{"kind":"number","nativeSrc":"1926:2:31","nodeType":"YulLiteral","src":"1926:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:31","nodeType":"YulIdentifier","src":"1919:3:31"},"nativeSrc":"1919:10:31","nodeType":"YulFunctionCall","src":"1919:10:31"},"variableNames":[{"name":"i","nativeSrc":"1914:1:31","nodeType":"YulIdentifier","src":"1914:1:31"}]}]},"pre":{"nativeSrc":"1894:3:31","nodeType":"YulBlock","src":"1894:3:31","statements":[]},"src":"1890:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:31","nodeType":"YulIdentifier","src":"2023:3:31"},{"name":"length","nativeSrc":"2028:6:31","nodeType":"YulIdentifier","src":"2028:6:31"}],"functionName":{"name":"add","nativeSrc":"2019:3:31","nodeType":"YulIdentifier","src":"2019:3:31"},"nativeSrc":"2019:16:31","nodeType":"YulFunctionCall","src":"2019:16:31"},{"kind":"number","nativeSrc":"2037:1:31","nodeType":"YulLiteral","src":"2037:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:31","nodeType":"YulIdentifier","src":"2012:6:31"},"nativeSrc":"2012:27:31","nodeType":"YulFunctionCall","src":"2012:27:31"},"nativeSrc":"2012:27:31","nodeType":"YulExpressionStatement","src":"2012:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:31","nodeType":"YulTypedName","src":"1842:3:31","type":""},{"name":"dst","nativeSrc":"1847:3:31","nodeType":"YulTypedName","src":"1847:3:31","type":""},{"name":"length","nativeSrc":"1852:6:31","nodeType":"YulTypedName","src":"1852:6:31","type":""}],"src":"1798:248:31"},{"body":{"nativeSrc":"2100:54:31","nodeType":"YulBlock","src":"2100:54:31","statements":[{"nativeSrc":"2110:38:31","nodeType":"YulAssignment","src":"2110:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:31","nodeType":"YulIdentifier","src":"2128:5:31"},{"kind":"number","nativeSrc":"2135:2:31","nodeType":"YulLiteral","src":"2135:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:31","nodeType":"YulIdentifier","src":"2124:3:31"},"nativeSrc":"2124:14:31","nodeType":"YulFunctionCall","src":"2124:14:31"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:31","nodeType":"YulLiteral","src":"2144:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:31","nodeType":"YulIdentifier","src":"2140:3:31"},"nativeSrc":"2140:7:31","nodeType":"YulFunctionCall","src":"2140:7:31"}],"functionName":{"name":"and","nativeSrc":"2120:3:31","nodeType":"YulIdentifier","src":"2120:3:31"},"nativeSrc":"2120:28:31","nodeType":"YulFunctionCall","src":"2120:28:31"},"variableNames":[{"name":"result","nativeSrc":"2110:6:31","nodeType":"YulIdentifier","src":"2110:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:31","nodeType":"YulTypedName","src":"2083:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:31","nodeType":"YulTypedName","src":"2093:6:31","type":""}],"src":"2052:102:31"},{"body":{"nativeSrc":"2252:285:31","nodeType":"YulBlock","src":"2252:285:31","statements":[{"nativeSrc":"2262:53:31","nodeType":"YulVariableDeclaration","src":"2262:53:31","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:31","nodeType":"YulIdentifier","src":"2309:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:31","nodeType":"YulIdentifier","src":"2276:32:31"},"nativeSrc":"2276:39:31","nodeType":"YulFunctionCall","src":"2276:39:31"},"variables":[{"name":"length","nativeSrc":"2266:6:31","nodeType":"YulTypedName","src":"2266:6:31","type":""}]},{"nativeSrc":"2324:78:31","nodeType":"YulAssignment","src":"2324:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:31","nodeType":"YulIdentifier","src":"2390:3:31"},{"name":"length","nativeSrc":"2395:6:31","nodeType":"YulIdentifier","src":"2395:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:31","nodeType":"YulIdentifier","src":"2331:58:31"},"nativeSrc":"2331:71:31","nodeType":"YulFunctionCall","src":"2331:71:31"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:31","nodeType":"YulIdentifier","src":"2324:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:31","nodeType":"YulIdentifier","src":"2450:5:31"},{"kind":"number","nativeSrc":"2457:4:31","nodeType":"YulLiteral","src":"2457:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:31","nodeType":"YulIdentifier","src":"2446:3:31"},"nativeSrc":"2446:16:31","nodeType":"YulFunctionCall","src":"2446:16:31"},{"name":"pos","nativeSrc":"2464:3:31","nodeType":"YulIdentifier","src":"2464:3:31"},{"name":"length","nativeSrc":"2469:6:31","nodeType":"YulIdentifier","src":"2469:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:31","nodeType":"YulIdentifier","src":"2411:34:31"},"nativeSrc":"2411:65:31","nodeType":"YulFunctionCall","src":"2411:65:31"},"nativeSrc":"2411:65:31","nodeType":"YulExpressionStatement","src":"2411:65:31"},{"nativeSrc":"2485:46:31","nodeType":"YulAssignment","src":"2485:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:31","nodeType":"YulIdentifier","src":"2496:3:31"},{"arguments":[{"name":"length","nativeSrc":"2523:6:31","nodeType":"YulIdentifier","src":"2523:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:31","nodeType":"YulIdentifier","src":"2501:21:31"},"nativeSrc":"2501:29:31","nodeType":"YulFunctionCall","src":"2501:29:31"}],"functionName":{"name":"add","nativeSrc":"2492:3:31","nodeType":"YulIdentifier","src":"2492:3:31"},"nativeSrc":"2492:39:31","nodeType":"YulFunctionCall","src":"2492:39:31"},"variableNames":[{"name":"end","nativeSrc":"2485:3:31","nodeType":"YulIdentifier","src":"2485:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:31","nodeType":"YulTypedName","src":"2233:5:31","type":""},{"name":"pos","nativeSrc":"2240:3:31","nodeType":"YulTypedName","src":"2240:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:31","nodeType":"YulTypedName","src":"2248:3:31","type":""}],"src":"2160:377:31"},{"body":{"nativeSrc":"2661:195:31","nodeType":"YulBlock","src":"2661:195:31","statements":[{"nativeSrc":"2671:26:31","nodeType":"YulAssignment","src":"2671:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:31","nodeType":"YulIdentifier","src":"2683:9:31"},{"kind":"number","nativeSrc":"2694:2:31","nodeType":"YulLiteral","src":"2694:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:31","nodeType":"YulIdentifier","src":"2679:3:31"},"nativeSrc":"2679:18:31","nodeType":"YulFunctionCall","src":"2679:18:31"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:31","nodeType":"YulIdentifier","src":"2671:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:31","nodeType":"YulIdentifier","src":"2718:9:31"},{"kind":"number","nativeSrc":"2729:1:31","nodeType":"YulLiteral","src":"2729:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:31","nodeType":"YulIdentifier","src":"2714:3:31"},"nativeSrc":"2714:17:31","nodeType":"YulFunctionCall","src":"2714:17:31"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:31","nodeType":"YulIdentifier","src":"2737:4:31"},{"name":"headStart","nativeSrc":"2743:9:31","nodeType":"YulIdentifier","src":"2743:9:31"}],"functionName":{"name":"sub","nativeSrc":"2733:3:31","nodeType":"YulIdentifier","src":"2733:3:31"},"nativeSrc":"2733:20:31","nodeType":"YulFunctionCall","src":"2733:20:31"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:31","nodeType":"YulIdentifier","src":"2707:6:31"},"nativeSrc":"2707:47:31","nodeType":"YulFunctionCall","src":"2707:47:31"},"nativeSrc":"2707:47:31","nodeType":"YulExpressionStatement","src":"2707:47:31"},{"nativeSrc":"2763:86:31","nodeType":"YulAssignment","src":"2763:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:31","nodeType":"YulIdentifier","src":"2835:6:31"},{"name":"tail","nativeSrc":"2844:4:31","nodeType":"YulIdentifier","src":"2844:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:31","nodeType":"YulIdentifier","src":"2771:63:31"},"nativeSrc":"2771:78:31","nodeType":"YulFunctionCall","src":"2771:78:31"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:31","nodeType":"YulIdentifier","src":"2763:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:31","nodeType":"YulTypedName","src":"2633:9:31","type":""},{"name":"value0","nativeSrc":"2645:6:31","nodeType":"YulTypedName","src":"2645:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:31","nodeType":"YulTypedName","src":"2656:4:31","type":""}],"src":"2543:313:31"},{"body":{"nativeSrc":"2907:32:31","nodeType":"YulBlock","src":"2907:32:31","statements":[{"nativeSrc":"2917:16:31","nodeType":"YulAssignment","src":"2917:16:31","value":{"name":"value","nativeSrc":"2928:5:31","nodeType":"YulIdentifier","src":"2928:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:31","nodeType":"YulIdentifier","src":"2917:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:31","nodeType":"YulTypedName","src":"2889:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:31","nodeType":"YulTypedName","src":"2899:7:31","type":""}],"src":"2862:77:31"},{"body":{"nativeSrc":"2988:79:31","nodeType":"YulBlock","src":"2988:79:31","statements":[{"body":{"nativeSrc":"3045:16:31","nodeType":"YulBlock","src":"3045:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:31","nodeType":"YulLiteral","src":"3054:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:31","nodeType":"YulLiteral","src":"3057:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:31","nodeType":"YulIdentifier","src":"3047:6:31"},"nativeSrc":"3047:12:31","nodeType":"YulFunctionCall","src":"3047:12:31"},"nativeSrc":"3047:12:31","nodeType":"YulExpressionStatement","src":"3047:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:31","nodeType":"YulIdentifier","src":"3011:5:31"},{"arguments":[{"name":"value","nativeSrc":"3036:5:31","nodeType":"YulIdentifier","src":"3036:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:31","nodeType":"YulIdentifier","src":"3018:17:31"},"nativeSrc":"3018:24:31","nodeType":"YulFunctionCall","src":"3018:24:31"}],"functionName":{"name":"eq","nativeSrc":"3008:2:31","nodeType":"YulIdentifier","src":"3008:2:31"},"nativeSrc":"3008:35:31","nodeType":"YulFunctionCall","src":"3008:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:31","nodeType":"YulIdentifier","src":"3001:6:31"},"nativeSrc":"3001:43:31","nodeType":"YulFunctionCall","src":"3001:43:31"},"nativeSrc":"2998:63:31","nodeType":"YulIf","src":"2998:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:31","nodeType":"YulTypedName","src":"2981:5:31","type":""}],"src":"2945:122:31"},{"body":{"nativeSrc":"3125:87:31","nodeType":"YulBlock","src":"3125:87:31","statements":[{"nativeSrc":"3135:29:31","nodeType":"YulAssignment","src":"3135:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:31","nodeType":"YulIdentifier","src":"3157:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:31","nodeType":"YulIdentifier","src":"3144:12:31"},"nativeSrc":"3144:20:31","nodeType":"YulFunctionCall","src":"3144:20:31"},"variableNames":[{"name":"value","nativeSrc":"3135:5:31","nodeType":"YulIdentifier","src":"3135:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:31","nodeType":"YulIdentifier","src":"3200:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:31","nodeType":"YulIdentifier","src":"3173:26:31"},"nativeSrc":"3173:33:31","nodeType":"YulFunctionCall","src":"3173:33:31"},"nativeSrc":"3173:33:31","nodeType":"YulExpressionStatement","src":"3173:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:31","nodeType":"YulTypedName","src":"3103:6:31","type":""},{"name":"end","nativeSrc":"3111:3:31","nodeType":"YulTypedName","src":"3111:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:31","nodeType":"YulTypedName","src":"3119:5:31","type":""}],"src":"3073:139:31"},{"body":{"nativeSrc":"3284:263:31","nodeType":"YulBlock","src":"3284:263:31","statements":[{"body":{"nativeSrc":"3330:83:31","nodeType":"YulBlock","src":"3330:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:31","nodeType":"YulIdentifier","src":"3332:77:31"},"nativeSrc":"3332:79:31","nodeType":"YulFunctionCall","src":"3332:79:31"},"nativeSrc":"3332:79:31","nodeType":"YulExpressionStatement","src":"3332:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:31","nodeType":"YulIdentifier","src":"3305:7:31"},{"name":"headStart","nativeSrc":"3314:9:31","nodeType":"YulIdentifier","src":"3314:9:31"}],"functionName":{"name":"sub","nativeSrc":"3301:3:31","nodeType":"YulIdentifier","src":"3301:3:31"},"nativeSrc":"3301:23:31","nodeType":"YulFunctionCall","src":"3301:23:31"},{"kind":"number","nativeSrc":"3326:2:31","nodeType":"YulLiteral","src":"3326:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:31","nodeType":"YulIdentifier","src":"3297:3:31"},"nativeSrc":"3297:32:31","nodeType":"YulFunctionCall","src":"3297:32:31"},"nativeSrc":"3294:119:31","nodeType":"YulIf","src":"3294:119:31"},{"nativeSrc":"3423:117:31","nodeType":"YulBlock","src":"3423:117:31","statements":[{"nativeSrc":"3438:15:31","nodeType":"YulVariableDeclaration","src":"3438:15:31","value":{"kind":"number","nativeSrc":"3452:1:31","nodeType":"YulLiteral","src":"3452:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:31","nodeType":"YulTypedName","src":"3442:6:31","type":""}]},{"nativeSrc":"3467:63:31","nodeType":"YulAssignment","src":"3467:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:31","nodeType":"YulIdentifier","src":"3502:9:31"},{"name":"offset","nativeSrc":"3513:6:31","nodeType":"YulIdentifier","src":"3513:6:31"}],"functionName":{"name":"add","nativeSrc":"3498:3:31","nodeType":"YulIdentifier","src":"3498:3:31"},"nativeSrc":"3498:22:31","nodeType":"YulFunctionCall","src":"3498:22:31"},{"name":"dataEnd","nativeSrc":"3522:7:31","nodeType":"YulIdentifier","src":"3522:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:31","nodeType":"YulIdentifier","src":"3477:20:31"},"nativeSrc":"3477:53:31","nodeType":"YulFunctionCall","src":"3477:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:31","nodeType":"YulIdentifier","src":"3467:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:31","nodeType":"YulTypedName","src":"3254:9:31","type":""},{"name":"dataEnd","nativeSrc":"3265:7:31","nodeType":"YulTypedName","src":"3265:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:31","nodeType":"YulTypedName","src":"3277:6:31","type":""}],"src":"3218:329:31"},{"body":{"nativeSrc":"3598:81:31","nodeType":"YulBlock","src":"3598:81:31","statements":[{"nativeSrc":"3608:65:31","nodeType":"YulAssignment","src":"3608:65:31","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:31","nodeType":"YulIdentifier","src":"3623:5:31"},{"kind":"number","nativeSrc":"3630:42:31","nodeType":"YulLiteral","src":"3630:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:31","nodeType":"YulIdentifier","src":"3619:3:31"},"nativeSrc":"3619:54:31","nodeType":"YulFunctionCall","src":"3619:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:31","nodeType":"YulIdentifier","src":"3608:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:31","nodeType":"YulTypedName","src":"3580:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:31","nodeType":"YulTypedName","src":"3590:7:31","type":""}],"src":"3553:126:31"},{"body":{"nativeSrc":"3730:51:31","nodeType":"YulBlock","src":"3730:51:31","statements":[{"nativeSrc":"3740:35:31","nodeType":"YulAssignment","src":"3740:35:31","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:31","nodeType":"YulIdentifier","src":"3769:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:31","nodeType":"YulIdentifier","src":"3751:17:31"},"nativeSrc":"3751:24:31","nodeType":"YulFunctionCall","src":"3751:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:31","nodeType":"YulIdentifier","src":"3740:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:31","nodeType":"YulTypedName","src":"3712:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:31","nodeType":"YulTypedName","src":"3722:7:31","type":""}],"src":"3685:96:31"},{"body":{"nativeSrc":"3852:53:31","nodeType":"YulBlock","src":"3852:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:31","nodeType":"YulIdentifier","src":"3869:3:31"},{"arguments":[{"name":"value","nativeSrc":"3892:5:31","nodeType":"YulIdentifier","src":"3892:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:31","nodeType":"YulIdentifier","src":"3874:17:31"},"nativeSrc":"3874:24:31","nodeType":"YulFunctionCall","src":"3874:24:31"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:31","nodeType":"YulIdentifier","src":"3862:6:31"},"nativeSrc":"3862:37:31","nodeType":"YulFunctionCall","src":"3862:37:31"},"nativeSrc":"3862:37:31","nodeType":"YulExpressionStatement","src":"3862:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:31","nodeType":"YulTypedName","src":"3840:5:31","type":""},{"name":"pos","nativeSrc":"3847:3:31","nodeType":"YulTypedName","src":"3847:3:31","type":""}],"src":"3787:118:31"},{"body":{"nativeSrc":"4009:124:31","nodeType":"YulBlock","src":"4009:124:31","statements":[{"nativeSrc":"4019:26:31","nodeType":"YulAssignment","src":"4019:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:31","nodeType":"YulIdentifier","src":"4031:9:31"},{"kind":"number","nativeSrc":"4042:2:31","nodeType":"YulLiteral","src":"4042:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:31","nodeType":"YulIdentifier","src":"4027:3:31"},"nativeSrc":"4027:18:31","nodeType":"YulFunctionCall","src":"4027:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:31","nodeType":"YulIdentifier","src":"4019:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:31","nodeType":"YulIdentifier","src":"4099:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:31","nodeType":"YulIdentifier","src":"4112:9:31"},{"kind":"number","nativeSrc":"4123:1:31","nodeType":"YulLiteral","src":"4123:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:31","nodeType":"YulIdentifier","src":"4108:3:31"},"nativeSrc":"4108:17:31","nodeType":"YulFunctionCall","src":"4108:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:31","nodeType":"YulIdentifier","src":"4055:43:31"},"nativeSrc":"4055:71:31","nodeType":"YulFunctionCall","src":"4055:71:31"},"nativeSrc":"4055:71:31","nodeType":"YulExpressionStatement","src":"4055:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:31","nodeType":"YulTypedName","src":"3981:9:31","type":""},{"name":"value0","nativeSrc":"3993:6:31","nodeType":"YulTypedName","src":"3993:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:31","nodeType":"YulTypedName","src":"4004:4:31","type":""}],"src":"3911:222:31"},{"body":{"nativeSrc":"4182:79:31","nodeType":"YulBlock","src":"4182:79:31","statements":[{"body":{"nativeSrc":"4239:16:31","nodeType":"YulBlock","src":"4239:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:31","nodeType":"YulLiteral","src":"4248:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:31","nodeType":"YulLiteral","src":"4251:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:31","nodeType":"YulIdentifier","src":"4241:6:31"},"nativeSrc":"4241:12:31","nodeType":"YulFunctionCall","src":"4241:12:31"},"nativeSrc":"4241:12:31","nodeType":"YulExpressionStatement","src":"4241:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:31","nodeType":"YulIdentifier","src":"4205:5:31"},{"arguments":[{"name":"value","nativeSrc":"4230:5:31","nodeType":"YulIdentifier","src":"4230:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:31","nodeType":"YulIdentifier","src":"4212:17:31"},"nativeSrc":"4212:24:31","nodeType":"YulFunctionCall","src":"4212:24:31"}],"functionName":{"name":"eq","nativeSrc":"4202:2:31","nodeType":"YulIdentifier","src":"4202:2:31"},"nativeSrc":"4202:35:31","nodeType":"YulFunctionCall","src":"4202:35:31"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:31","nodeType":"YulIdentifier","src":"4195:6:31"},"nativeSrc":"4195:43:31","nodeType":"YulFunctionCall","src":"4195:43:31"},"nativeSrc":"4192:63:31","nodeType":"YulIf","src":"4192:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:31","nodeType":"YulTypedName","src":"4175:5:31","type":""}],"src":"4139:122:31"},{"body":{"nativeSrc":"4319:87:31","nodeType":"YulBlock","src":"4319:87:31","statements":[{"nativeSrc":"4329:29:31","nodeType":"YulAssignment","src":"4329:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:31","nodeType":"YulIdentifier","src":"4351:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:31","nodeType":"YulIdentifier","src":"4338:12:31"},"nativeSrc":"4338:20:31","nodeType":"YulFunctionCall","src":"4338:20:31"},"variableNames":[{"name":"value","nativeSrc":"4329:5:31","nodeType":"YulIdentifier","src":"4329:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:31","nodeType":"YulIdentifier","src":"4394:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:31","nodeType":"YulIdentifier","src":"4367:26:31"},"nativeSrc":"4367:33:31","nodeType":"YulFunctionCall","src":"4367:33:31"},"nativeSrc":"4367:33:31","nodeType":"YulExpressionStatement","src":"4367:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:31","nodeType":"YulTypedName","src":"4297:6:31","type":""},{"name":"end","nativeSrc":"4305:3:31","nodeType":"YulTypedName","src":"4305:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:31","nodeType":"YulTypedName","src":"4313:5:31","type":""}],"src":"4267:139:31"},{"body":{"nativeSrc":"4495:391:31","nodeType":"YulBlock","src":"4495:391:31","statements":[{"body":{"nativeSrc":"4541:83:31","nodeType":"YulBlock","src":"4541:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:31","nodeType":"YulIdentifier","src":"4543:77:31"},"nativeSrc":"4543:79:31","nodeType":"YulFunctionCall","src":"4543:79:31"},"nativeSrc":"4543:79:31","nodeType":"YulExpressionStatement","src":"4543:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:31","nodeType":"YulIdentifier","src":"4516:7:31"},{"name":"headStart","nativeSrc":"4525:9:31","nodeType":"YulIdentifier","src":"4525:9:31"}],"functionName":{"name":"sub","nativeSrc":"4512:3:31","nodeType":"YulIdentifier","src":"4512:3:31"},"nativeSrc":"4512:23:31","nodeType":"YulFunctionCall","src":"4512:23:31"},{"kind":"number","nativeSrc":"4537:2:31","nodeType":"YulLiteral","src":"4537:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:31","nodeType":"YulIdentifier","src":"4508:3:31"},"nativeSrc":"4508:32:31","nodeType":"YulFunctionCall","src":"4508:32:31"},"nativeSrc":"4505:119:31","nodeType":"YulIf","src":"4505:119:31"},{"nativeSrc":"4634:117:31","nodeType":"YulBlock","src":"4634:117:31","statements":[{"nativeSrc":"4649:15:31","nodeType":"YulVariableDeclaration","src":"4649:15:31","value":{"kind":"number","nativeSrc":"4663:1:31","nodeType":"YulLiteral","src":"4663:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:31","nodeType":"YulTypedName","src":"4653:6:31","type":""}]},{"nativeSrc":"4678:63:31","nodeType":"YulAssignment","src":"4678:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:31","nodeType":"YulIdentifier","src":"4713:9:31"},{"name":"offset","nativeSrc":"4724:6:31","nodeType":"YulIdentifier","src":"4724:6:31"}],"functionName":{"name":"add","nativeSrc":"4709:3:31","nodeType":"YulIdentifier","src":"4709:3:31"},"nativeSrc":"4709:22:31","nodeType":"YulFunctionCall","src":"4709:22:31"},{"name":"dataEnd","nativeSrc":"4733:7:31","nodeType":"YulIdentifier","src":"4733:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:31","nodeType":"YulIdentifier","src":"4688:20:31"},"nativeSrc":"4688:53:31","nodeType":"YulFunctionCall","src":"4688:53:31"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:31","nodeType":"YulIdentifier","src":"4678:6:31"}]}]},{"nativeSrc":"4761:118:31","nodeType":"YulBlock","src":"4761:118:31","statements":[{"nativeSrc":"4776:16:31","nodeType":"YulVariableDeclaration","src":"4776:16:31","value":{"kind":"number","nativeSrc":"4790:2:31","nodeType":"YulLiteral","src":"4790:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:31","nodeType":"YulTypedName","src":"4780:6:31","type":""}]},{"nativeSrc":"4806:63:31","nodeType":"YulAssignment","src":"4806:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:31","nodeType":"YulIdentifier","src":"4841:9:31"},{"name":"offset","nativeSrc":"4852:6:31","nodeType":"YulIdentifier","src":"4852:6:31"}],"functionName":{"name":"add","nativeSrc":"4837:3:31","nodeType":"YulIdentifier","src":"4837:3:31"},"nativeSrc":"4837:22:31","nodeType":"YulFunctionCall","src":"4837:22:31"},{"name":"dataEnd","nativeSrc":"4861:7:31","nodeType":"YulIdentifier","src":"4861:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:31","nodeType":"YulIdentifier","src":"4816:20:31"},"nativeSrc":"4816:53:31","nodeType":"YulFunctionCall","src":"4816:53:31"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:31","nodeType":"YulIdentifier","src":"4806:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:31","nodeType":"YulTypedName","src":"4457:9:31","type":""},{"name":"dataEnd","nativeSrc":"4468:7:31","nodeType":"YulTypedName","src":"4468:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:31","nodeType":"YulTypedName","src":"4480:6:31","type":""},{"name":"value1","nativeSrc":"4488:6:31","nodeType":"YulTypedName","src":"4488:6:31","type":""}],"src":"4412:474:31"},{"body":{"nativeSrc":"4992:519:31","nodeType":"YulBlock","src":"4992:519:31","statements":[{"body":{"nativeSrc":"5038:83:31","nodeType":"YulBlock","src":"5038:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:31","nodeType":"YulIdentifier","src":"5040:77:31"},"nativeSrc":"5040:79:31","nodeType":"YulFunctionCall","src":"5040:79:31"},"nativeSrc":"5040:79:31","nodeType":"YulExpressionStatement","src":"5040:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:31","nodeType":"YulIdentifier","src":"5013:7:31"},{"name":"headStart","nativeSrc":"5022:9:31","nodeType":"YulIdentifier","src":"5022:9:31"}],"functionName":{"name":"sub","nativeSrc":"5009:3:31","nodeType":"YulIdentifier","src":"5009:3:31"},"nativeSrc":"5009:23:31","nodeType":"YulFunctionCall","src":"5009:23:31"},{"kind":"number","nativeSrc":"5034:2:31","nodeType":"YulLiteral","src":"5034:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:31","nodeType":"YulIdentifier","src":"5005:3:31"},"nativeSrc":"5005:32:31","nodeType":"YulFunctionCall","src":"5005:32:31"},"nativeSrc":"5002:119:31","nodeType":"YulIf","src":"5002:119:31"},{"nativeSrc":"5131:117:31","nodeType":"YulBlock","src":"5131:117:31","statements":[{"nativeSrc":"5146:15:31","nodeType":"YulVariableDeclaration","src":"5146:15:31","value":{"kind":"number","nativeSrc":"5160:1:31","nodeType":"YulLiteral","src":"5160:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:31","nodeType":"YulTypedName","src":"5150:6:31","type":""}]},{"nativeSrc":"5175:63:31","nodeType":"YulAssignment","src":"5175:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:31","nodeType":"YulIdentifier","src":"5210:9:31"},{"name":"offset","nativeSrc":"5221:6:31","nodeType":"YulIdentifier","src":"5221:6:31"}],"functionName":{"name":"add","nativeSrc":"5206:3:31","nodeType":"YulIdentifier","src":"5206:3:31"},"nativeSrc":"5206:22:31","nodeType":"YulFunctionCall","src":"5206:22:31"},{"name":"dataEnd","nativeSrc":"5230:7:31","nodeType":"YulIdentifier","src":"5230:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:31","nodeType":"YulIdentifier","src":"5185:20:31"},"nativeSrc":"5185:53:31","nodeType":"YulFunctionCall","src":"5185:53:31"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:31","nodeType":"YulIdentifier","src":"5175:6:31"}]}]},{"nativeSrc":"5258:118:31","nodeType":"YulBlock","src":"5258:118:31","statements":[{"nativeSrc":"5273:16:31","nodeType":"YulVariableDeclaration","src":"5273:16:31","value":{"kind":"number","nativeSrc":"5287:2:31","nodeType":"YulLiteral","src":"5287:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:31","nodeType":"YulTypedName","src":"5277:6:31","type":""}]},{"nativeSrc":"5303:63:31","nodeType":"YulAssignment","src":"5303:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:31","nodeType":"YulIdentifier","src":"5338:9:31"},{"name":"offset","nativeSrc":"5349:6:31","nodeType":"YulIdentifier","src":"5349:6:31"}],"functionName":{"name":"add","nativeSrc":"5334:3:31","nodeType":"YulIdentifier","src":"5334:3:31"},"nativeSrc":"5334:22:31","nodeType":"YulFunctionCall","src":"5334:22:31"},{"name":"dataEnd","nativeSrc":"5358:7:31","nodeType":"YulIdentifier","src":"5358:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:31","nodeType":"YulIdentifier","src":"5313:20:31"},"nativeSrc":"5313:53:31","nodeType":"YulFunctionCall","src":"5313:53:31"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:31","nodeType":"YulIdentifier","src":"5303:6:31"}]}]},{"nativeSrc":"5386:118:31","nodeType":"YulBlock","src":"5386:118:31","statements":[{"nativeSrc":"5401:16:31","nodeType":"YulVariableDeclaration","src":"5401:16:31","value":{"kind":"number","nativeSrc":"5415:2:31","nodeType":"YulLiteral","src":"5415:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:31","nodeType":"YulTypedName","src":"5405:6:31","type":""}]},{"nativeSrc":"5431:63:31","nodeType":"YulAssignment","src":"5431:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:31","nodeType":"YulIdentifier","src":"5466:9:31"},{"name":"offset","nativeSrc":"5477:6:31","nodeType":"YulIdentifier","src":"5477:6:31"}],"functionName":{"name":"add","nativeSrc":"5462:3:31","nodeType":"YulIdentifier","src":"5462:3:31"},"nativeSrc":"5462:22:31","nodeType":"YulFunctionCall","src":"5462:22:31"},{"name":"dataEnd","nativeSrc":"5486:7:31","nodeType":"YulIdentifier","src":"5486:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:31","nodeType":"YulIdentifier","src":"5441:20:31"},"nativeSrc":"5441:53:31","nodeType":"YulFunctionCall","src":"5441:53:31"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:31","nodeType":"YulIdentifier","src":"5431:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:31","nodeType":"YulTypedName","src":"4946:9:31","type":""},{"name":"dataEnd","nativeSrc":"4957:7:31","nodeType":"YulTypedName","src":"4957:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:31","nodeType":"YulTypedName","src":"4969:6:31","type":""},{"name":"value1","nativeSrc":"4977:6:31","nodeType":"YulTypedName","src":"4977:6:31","type":""},{"name":"value2","nativeSrc":"4985:6:31","nodeType":"YulTypedName","src":"4985:6:31","type":""}],"src":"4892:619:31"},{"body":{"nativeSrc":"5606:28:31","nodeType":"YulBlock","src":"5606:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5623:1:31","nodeType":"YulLiteral","src":"5623:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5626:1:31","nodeType":"YulLiteral","src":"5626:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5616:6:31","nodeType":"YulIdentifier","src":"5616:6:31"},"nativeSrc":"5616:12:31","nodeType":"YulFunctionCall","src":"5616:12:31"},"nativeSrc":"5616:12:31","nodeType":"YulExpressionStatement","src":"5616:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5517:117:31","nodeType":"YulFunctionDefinition","src":"5517:117:31"},{"body":{"nativeSrc":"5729:28:31","nodeType":"YulBlock","src":"5729:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5746:1:31","nodeType":"YulLiteral","src":"5746:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5749:1:31","nodeType":"YulLiteral","src":"5749:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5739:6:31","nodeType":"YulIdentifier","src":"5739:6:31"},"nativeSrc":"5739:12:31","nodeType":"YulFunctionCall","src":"5739:12:31"},"nativeSrc":"5739:12:31","nodeType":"YulExpressionStatement","src":"5739:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5640:117:31","nodeType":"YulFunctionDefinition","src":"5640:117:31"},{"body":{"nativeSrc":"5791:152:31","nodeType":"YulBlock","src":"5791:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5808:1:31","nodeType":"YulLiteral","src":"5808:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5811:77:31","nodeType":"YulLiteral","src":"5811:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5801:6:31","nodeType":"YulIdentifier","src":"5801:6:31"},"nativeSrc":"5801:88:31","nodeType":"YulFunctionCall","src":"5801:88:31"},"nativeSrc":"5801:88:31","nodeType":"YulExpressionStatement","src":"5801:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5905:1:31","nodeType":"YulLiteral","src":"5905:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"5908:4:31","nodeType":"YulLiteral","src":"5908:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5898:6:31","nodeType":"YulIdentifier","src":"5898:6:31"},"nativeSrc":"5898:15:31","nodeType":"YulFunctionCall","src":"5898:15:31"},"nativeSrc":"5898:15:31","nodeType":"YulExpressionStatement","src":"5898:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5929:1:31","nodeType":"YulLiteral","src":"5929:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5932:4:31","nodeType":"YulLiteral","src":"5932:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5922:6:31","nodeType":"YulIdentifier","src":"5922:6:31"},"nativeSrc":"5922:15:31","nodeType":"YulFunctionCall","src":"5922:15:31"},"nativeSrc":"5922:15:31","nodeType":"YulExpressionStatement","src":"5922:15:31"}]},"name":"panic_error_0x41","nativeSrc":"5763:180:31","nodeType":"YulFunctionDefinition","src":"5763:180:31"},{"body":{"nativeSrc":"5992:238:31","nodeType":"YulBlock","src":"5992:238:31","statements":[{"nativeSrc":"6002:58:31","nodeType":"YulVariableDeclaration","src":"6002:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"6024:6:31","nodeType":"YulIdentifier","src":"6024:6:31"},{"arguments":[{"name":"size","nativeSrc":"6054:4:31","nodeType":"YulIdentifier","src":"6054:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6032:21:31","nodeType":"YulIdentifier","src":"6032:21:31"},"nativeSrc":"6032:27:31","nodeType":"YulFunctionCall","src":"6032:27:31"}],"functionName":{"name":"add","nativeSrc":"6020:3:31","nodeType":"YulIdentifier","src":"6020:3:31"},"nativeSrc":"6020:40:31","nodeType":"YulFunctionCall","src":"6020:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"6006:10:31","nodeType":"YulTypedName","src":"6006:10:31","type":""}]},{"body":{"nativeSrc":"6171:22:31","nodeType":"YulBlock","src":"6171:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6173:16:31","nodeType":"YulIdentifier","src":"6173:16:31"},"nativeSrc":"6173:18:31","nodeType":"YulFunctionCall","src":"6173:18:31"},"nativeSrc":"6173:18:31","nodeType":"YulExpressionStatement","src":"6173:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6114:10:31","nodeType":"YulIdentifier","src":"6114:10:31"},{"kind":"number","nativeSrc":"6126:18:31","nodeType":"YulLiteral","src":"6126:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6111:2:31","nodeType":"YulIdentifier","src":"6111:2:31"},"nativeSrc":"6111:34:31","nodeType":"YulFunctionCall","src":"6111:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6150:10:31","nodeType":"YulIdentifier","src":"6150:10:31"},{"name":"memPtr","nativeSrc":"6162:6:31","nodeType":"YulIdentifier","src":"6162:6:31"}],"functionName":{"name":"lt","nativeSrc":"6147:2:31","nodeType":"YulIdentifier","src":"6147:2:31"},"nativeSrc":"6147:22:31","nodeType":"YulFunctionCall","src":"6147:22:31"}],"functionName":{"name":"or","nativeSrc":"6108:2:31","nodeType":"YulIdentifier","src":"6108:2:31"},"nativeSrc":"6108:62:31","nodeType":"YulFunctionCall","src":"6108:62:31"},"nativeSrc":"6105:88:31","nodeType":"YulIf","src":"6105:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6209:2:31","nodeType":"YulLiteral","src":"6209:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6213:10:31","nodeType":"YulIdentifier","src":"6213:10:31"}],"functionName":{"name":"mstore","nativeSrc":"6202:6:31","nodeType":"YulIdentifier","src":"6202:6:31"},"nativeSrc":"6202:22:31","nodeType":"YulFunctionCall","src":"6202:22:31"},"nativeSrc":"6202:22:31","nodeType":"YulExpressionStatement","src":"6202:22:31"}]},"name":"finalize_allocation","nativeSrc":"5949:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5978:6:31","nodeType":"YulTypedName","src":"5978:6:31","type":""},{"name":"size","nativeSrc":"5986:4:31","nodeType":"YulTypedName","src":"5986:4:31","type":""}],"src":"5949:281:31"},{"body":{"nativeSrc":"6277:88:31","nodeType":"YulBlock","src":"6277:88:31","statements":[{"nativeSrc":"6287:30:31","nodeType":"YulAssignment","src":"6287:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6297:18:31","nodeType":"YulIdentifier","src":"6297:18:31"},"nativeSrc":"6297:20:31","nodeType":"YulFunctionCall","src":"6297:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"6287:6:31","nodeType":"YulIdentifier","src":"6287:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6346:6:31","nodeType":"YulIdentifier","src":"6346:6:31"},{"name":"size","nativeSrc":"6354:4:31","nodeType":"YulIdentifier","src":"6354:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6326:19:31","nodeType":"YulIdentifier","src":"6326:19:31"},"nativeSrc":"6326:33:31","nodeType":"YulFunctionCall","src":"6326:33:31"},"nativeSrc":"6326:33:31","nodeType":"YulExpressionStatement","src":"6326:33:31"}]},"name":"allocate_memory","nativeSrc":"6236:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6261:4:31","nodeType":"YulTypedName","src":"6261:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6270:6:31","nodeType":"YulTypedName","src":"6270:6:31","type":""}],"src":"6236:129:31"},{"body":{"nativeSrc":"6437:241:31","nodeType":"YulBlock","src":"6437:241:31","statements":[{"body":{"nativeSrc":"6542:22:31","nodeType":"YulBlock","src":"6542:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6544:16:31","nodeType":"YulIdentifier","src":"6544:16:31"},"nativeSrc":"6544:18:31","nodeType":"YulFunctionCall","src":"6544:18:31"},"nativeSrc":"6544:18:31","nodeType":"YulExpressionStatement","src":"6544:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6514:6:31","nodeType":"YulIdentifier","src":"6514:6:31"},{"kind":"number","nativeSrc":"6522:18:31","nodeType":"YulLiteral","src":"6522:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6511:2:31","nodeType":"YulIdentifier","src":"6511:2:31"},"nativeSrc":"6511:30:31","nodeType":"YulFunctionCall","src":"6511:30:31"},"nativeSrc":"6508:56:31","nodeType":"YulIf","src":"6508:56:31"},{"nativeSrc":"6574:37:31","nodeType":"YulAssignment","src":"6574:37:31","value":{"arguments":[{"name":"length","nativeSrc":"6604:6:31","nodeType":"YulIdentifier","src":"6604:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6582:21:31","nodeType":"YulIdentifier","src":"6582:21:31"},"nativeSrc":"6582:29:31","nodeType":"YulFunctionCall","src":"6582:29:31"},"variableNames":[{"name":"size","nativeSrc":"6574:4:31","nodeType":"YulIdentifier","src":"6574:4:31"}]},{"nativeSrc":"6648:23:31","nodeType":"YulAssignment","src":"6648:23:31","value":{"arguments":[{"name":"size","nativeSrc":"6660:4:31","nodeType":"YulIdentifier","src":"6660:4:31"},{"kind":"number","nativeSrc":"6666:4:31","nodeType":"YulLiteral","src":"6666:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6656:3:31","nodeType":"YulIdentifier","src":"6656:3:31"},"nativeSrc":"6656:15:31","nodeType":"YulFunctionCall","src":"6656:15:31"},"variableNames":[{"name":"size","nativeSrc":"6648:4:31","nodeType":"YulIdentifier","src":"6648:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6371:307:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6421:6:31","nodeType":"YulTypedName","src":"6421:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6432:4:31","nodeType":"YulTypedName","src":"6432:4:31","type":""}],"src":"6371:307:31"},{"body":{"nativeSrc":"6748:84:31","nodeType":"YulBlock","src":"6748:84:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6772:3:31","nodeType":"YulIdentifier","src":"6772:3:31"},{"name":"src","nativeSrc":"6777:3:31","nodeType":"YulIdentifier","src":"6777:3:31"},{"name":"length","nativeSrc":"6782:6:31","nodeType":"YulIdentifier","src":"6782:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"6759:12:31","nodeType":"YulIdentifier","src":"6759:12:31"},"nativeSrc":"6759:30:31","nodeType":"YulFunctionCall","src":"6759:30:31"},"nativeSrc":"6759:30:31","nodeType":"YulExpressionStatement","src":"6759:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6809:3:31","nodeType":"YulIdentifier","src":"6809:3:31"},{"name":"length","nativeSrc":"6814:6:31","nodeType":"YulIdentifier","src":"6814:6:31"}],"functionName":{"name":"add","nativeSrc":"6805:3:31","nodeType":"YulIdentifier","src":"6805:3:31"},"nativeSrc":"6805:16:31","nodeType":"YulFunctionCall","src":"6805:16:31"},{"kind":"number","nativeSrc":"6823:1:31","nodeType":"YulLiteral","src":"6823:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6798:6:31","nodeType":"YulIdentifier","src":"6798:6:31"},"nativeSrc":"6798:27:31","nodeType":"YulFunctionCall","src":"6798:27:31"},"nativeSrc":"6798:27:31","nodeType":"YulExpressionStatement","src":"6798:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6684:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6730:3:31","nodeType":"YulTypedName","src":"6730:3:31","type":""},{"name":"dst","nativeSrc":"6735:3:31","nodeType":"YulTypedName","src":"6735:3:31","type":""},{"name":"length","nativeSrc":"6740:6:31","nodeType":"YulTypedName","src":"6740:6:31","type":""}],"src":"6684:148:31"},{"body":{"nativeSrc":"6921:340:31","nodeType":"YulBlock","src":"6921:340:31","statements":[{"nativeSrc":"6931:74:31","nodeType":"YulAssignment","src":"6931:74:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6997:6:31","nodeType":"YulIdentifier","src":"6997:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6956:40:31","nodeType":"YulIdentifier","src":"6956:40:31"},"nativeSrc":"6956:48:31","nodeType":"YulFunctionCall","src":"6956:48:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"6940:15:31","nodeType":"YulIdentifier","src":"6940:15:31"},"nativeSrc":"6940:65:31","nodeType":"YulFunctionCall","src":"6940:65:31"},"variableNames":[{"name":"array","nativeSrc":"6931:5:31","nodeType":"YulIdentifier","src":"6931:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7021:5:31","nodeType":"YulIdentifier","src":"7021:5:31"},{"name":"length","nativeSrc":"7028:6:31","nodeType":"YulIdentifier","src":"7028:6:31"}],"functionName":{"name":"mstore","nativeSrc":"7014:6:31","nodeType":"YulIdentifier","src":"7014:6:31"},"nativeSrc":"7014:21:31","nodeType":"YulFunctionCall","src":"7014:21:31"},"nativeSrc":"7014:21:31","nodeType":"YulExpressionStatement","src":"7014:21:31"},{"nativeSrc":"7044:27:31","nodeType":"YulVariableDeclaration","src":"7044:27:31","value":{"arguments":[{"name":"array","nativeSrc":"7059:5:31","nodeType":"YulIdentifier","src":"7059:5:31"},{"kind":"number","nativeSrc":"7066:4:31","nodeType":"YulLiteral","src":"7066:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7055:3:31","nodeType":"YulIdentifier","src":"7055:3:31"},"nativeSrc":"7055:16:31","nodeType":"YulFunctionCall","src":"7055:16:31"},"variables":[{"name":"dst","nativeSrc":"7048:3:31","nodeType":"YulTypedName","src":"7048:3:31","type":""}]},{"body":{"nativeSrc":"7109:83:31","nodeType":"YulBlock","src":"7109:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7111:77:31","nodeType":"YulIdentifier","src":"7111:77:31"},"nativeSrc":"7111:79:31","nodeType":"YulFunctionCall","src":"7111:79:31"},"nativeSrc":"7111:79:31","nodeType":"YulExpressionStatement","src":"7111:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7090:3:31","nodeType":"YulIdentifier","src":"7090:3:31"},{"name":"length","nativeSrc":"7095:6:31","nodeType":"YulIdentifier","src":"7095:6:31"}],"functionName":{"name":"add","nativeSrc":"7086:3:31","nodeType":"YulIdentifier","src":"7086:3:31"},"nativeSrc":"7086:16:31","nodeType":"YulFunctionCall","src":"7086:16:31"},{"name":"end","nativeSrc":"7104:3:31","nodeType":"YulIdentifier","src":"7104:3:31"}],"functionName":{"name":"gt","nativeSrc":"7083:2:31","nodeType":"YulIdentifier","src":"7083:2:31"},"nativeSrc":"7083:25:31","nodeType":"YulFunctionCall","src":"7083:25:31"},"nativeSrc":"7080:112:31","nodeType":"YulIf","src":"7080:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7238:3:31","nodeType":"YulIdentifier","src":"7238:3:31"},{"name":"dst","nativeSrc":"7243:3:31","nodeType":"YulIdentifier","src":"7243:3:31"},{"name":"length","nativeSrc":"7248:6:31","nodeType":"YulIdentifier","src":"7248:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7201:36:31","nodeType":"YulIdentifier","src":"7201:36:31"},"nativeSrc":"7201:54:31","nodeType":"YulFunctionCall","src":"7201:54:31"},"nativeSrc":"7201:54:31","nodeType":"YulExpressionStatement","src":"7201:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6838:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6894:3:31","nodeType":"YulTypedName","src":"6894:3:31","type":""},{"name":"length","nativeSrc":"6899:6:31","nodeType":"YulTypedName","src":"6899:6:31","type":""},{"name":"end","nativeSrc":"6907:3:31","nodeType":"YulTypedName","src":"6907:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6915:5:31","nodeType":"YulTypedName","src":"6915:5:31","type":""}],"src":"6838:423:31"},{"body":{"nativeSrc":"7341:277:31","nodeType":"YulBlock","src":"7341:277:31","statements":[{"body":{"nativeSrc":"7390:83:31","nodeType":"YulBlock","src":"7390:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7392:77:31","nodeType":"YulIdentifier","src":"7392:77:31"},"nativeSrc":"7392:79:31","nodeType":"YulFunctionCall","src":"7392:79:31"},"nativeSrc":"7392:79:31","nodeType":"YulExpressionStatement","src":"7392:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7369:6:31","nodeType":"YulIdentifier","src":"7369:6:31"},{"kind":"number","nativeSrc":"7377:4:31","nodeType":"YulLiteral","src":"7377:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7365:3:31","nodeType":"YulIdentifier","src":"7365:3:31"},"nativeSrc":"7365:17:31","nodeType":"YulFunctionCall","src":"7365:17:31"},{"name":"end","nativeSrc":"7384:3:31","nodeType":"YulIdentifier","src":"7384:3:31"}],"functionName":{"name":"slt","nativeSrc":"7361:3:31","nodeType":"YulIdentifier","src":"7361:3:31"},"nativeSrc":"7361:27:31","nodeType":"YulFunctionCall","src":"7361:27:31"}],"functionName":{"name":"iszero","nativeSrc":"7354:6:31","nodeType":"YulIdentifier","src":"7354:6:31"},"nativeSrc":"7354:35:31","nodeType":"YulFunctionCall","src":"7354:35:31"},"nativeSrc":"7351:122:31","nodeType":"YulIf","src":"7351:122:31"},{"nativeSrc":"7482:34:31","nodeType":"YulVariableDeclaration","src":"7482:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"7509:6:31","nodeType":"YulIdentifier","src":"7509:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"7496:12:31","nodeType":"YulIdentifier","src":"7496:12:31"},"nativeSrc":"7496:20:31","nodeType":"YulFunctionCall","src":"7496:20:31"},"variables":[{"name":"length","nativeSrc":"7486:6:31","nodeType":"YulTypedName","src":"7486:6:31","type":""}]},{"nativeSrc":"7525:87:31","nodeType":"YulAssignment","src":"7525:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7585:6:31","nodeType":"YulIdentifier","src":"7585:6:31"},{"kind":"number","nativeSrc":"7593:4:31","nodeType":"YulLiteral","src":"7593:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7581:3:31","nodeType":"YulIdentifier","src":"7581:3:31"},"nativeSrc":"7581:17:31","nodeType":"YulFunctionCall","src":"7581:17:31"},{"name":"length","nativeSrc":"7600:6:31","nodeType":"YulIdentifier","src":"7600:6:31"},{"name":"end","nativeSrc":"7608:3:31","nodeType":"YulIdentifier","src":"7608:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7534:46:31","nodeType":"YulIdentifier","src":"7534:46:31"},"nativeSrc":"7534:78:31","nodeType":"YulFunctionCall","src":"7534:78:31"},"variableNames":[{"name":"array","nativeSrc":"7525:5:31","nodeType":"YulIdentifier","src":"7525:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7280:338:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7319:6:31","nodeType":"YulTypedName","src":"7319:6:31","type":""},{"name":"end","nativeSrc":"7327:3:31","nodeType":"YulTypedName","src":"7327:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7335:5:31","nodeType":"YulTypedName","src":"7335:5:31","type":""}],"src":"7280:338:31"},{"body":{"nativeSrc":"7716:560:31","nodeType":"YulBlock","src":"7716:560:31","statements":[{"body":{"nativeSrc":"7762:83:31","nodeType":"YulBlock","src":"7762:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7764:77:31","nodeType":"YulIdentifier","src":"7764:77:31"},"nativeSrc":"7764:79:31","nodeType":"YulFunctionCall","src":"7764:79:31"},"nativeSrc":"7764:79:31","nodeType":"YulExpressionStatement","src":"7764:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7737:7:31","nodeType":"YulIdentifier","src":"7737:7:31"},{"name":"headStart","nativeSrc":"7746:9:31","nodeType":"YulIdentifier","src":"7746:9:31"}],"functionName":{"name":"sub","nativeSrc":"7733:3:31","nodeType":"YulIdentifier","src":"7733:3:31"},"nativeSrc":"7733:23:31","nodeType":"YulFunctionCall","src":"7733:23:31"},{"kind":"number","nativeSrc":"7758:2:31","nodeType":"YulLiteral","src":"7758:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7729:3:31","nodeType":"YulIdentifier","src":"7729:3:31"},"nativeSrc":"7729:32:31","nodeType":"YulFunctionCall","src":"7729:32:31"},"nativeSrc":"7726:119:31","nodeType":"YulIf","src":"7726:119:31"},{"nativeSrc":"7855:117:31","nodeType":"YulBlock","src":"7855:117:31","statements":[{"nativeSrc":"7870:15:31","nodeType":"YulVariableDeclaration","src":"7870:15:31","value":{"kind":"number","nativeSrc":"7884:1:31","nodeType":"YulLiteral","src":"7884:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7874:6:31","nodeType":"YulTypedName","src":"7874:6:31","type":""}]},{"nativeSrc":"7899:63:31","nodeType":"YulAssignment","src":"7899:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7934:9:31","nodeType":"YulIdentifier","src":"7934:9:31"},{"name":"offset","nativeSrc":"7945:6:31","nodeType":"YulIdentifier","src":"7945:6:31"}],"functionName":{"name":"add","nativeSrc":"7930:3:31","nodeType":"YulIdentifier","src":"7930:3:31"},"nativeSrc":"7930:22:31","nodeType":"YulFunctionCall","src":"7930:22:31"},{"name":"dataEnd","nativeSrc":"7954:7:31","nodeType":"YulIdentifier","src":"7954:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7909:20:31","nodeType":"YulIdentifier","src":"7909:20:31"},"nativeSrc":"7909:53:31","nodeType":"YulFunctionCall","src":"7909:53:31"},"variableNames":[{"name":"value0","nativeSrc":"7899:6:31","nodeType":"YulIdentifier","src":"7899:6:31"}]}]},{"nativeSrc":"7982:287:31","nodeType":"YulBlock","src":"7982:287:31","statements":[{"nativeSrc":"7997:46:31","nodeType":"YulVariableDeclaration","src":"7997:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8028:9:31","nodeType":"YulIdentifier","src":"8028:9:31"},{"kind":"number","nativeSrc":"8039:2:31","nodeType":"YulLiteral","src":"8039:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8024:3:31","nodeType":"YulIdentifier","src":"8024:3:31"},"nativeSrc":"8024:18:31","nodeType":"YulFunctionCall","src":"8024:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"8011:12:31","nodeType":"YulIdentifier","src":"8011:12:31"},"nativeSrc":"8011:32:31","nodeType":"YulFunctionCall","src":"8011:32:31"},"variables":[{"name":"offset","nativeSrc":"8001:6:31","nodeType":"YulTypedName","src":"8001:6:31","type":""}]},{"body":{"nativeSrc":"8090:83:31","nodeType":"YulBlock","src":"8090:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8092:77:31","nodeType":"YulIdentifier","src":"8092:77:31"},"nativeSrc":"8092:79:31","nodeType":"YulFunctionCall","src":"8092:79:31"},"nativeSrc":"8092:79:31","nodeType":"YulExpressionStatement","src":"8092:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8062:6:31","nodeType":"YulIdentifier","src":"8062:6:31"},{"kind":"number","nativeSrc":"8070:18:31","nodeType":"YulLiteral","src":"8070:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8059:2:31","nodeType":"YulIdentifier","src":"8059:2:31"},"nativeSrc":"8059:30:31","nodeType":"YulFunctionCall","src":"8059:30:31"},"nativeSrc":"8056:117:31","nodeType":"YulIf","src":"8056:117:31"},{"nativeSrc":"8187:72:31","nodeType":"YulAssignment","src":"8187:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8231:9:31","nodeType":"YulIdentifier","src":"8231:9:31"},{"name":"offset","nativeSrc":"8242:6:31","nodeType":"YulIdentifier","src":"8242:6:31"}],"functionName":{"name":"add","nativeSrc":"8227:3:31","nodeType":"YulIdentifier","src":"8227:3:31"},"nativeSrc":"8227:22:31","nodeType":"YulFunctionCall","src":"8227:22:31"},{"name":"dataEnd","nativeSrc":"8251:7:31","nodeType":"YulIdentifier","src":"8251:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8197:29:31","nodeType":"YulIdentifier","src":"8197:29:31"},"nativeSrc":"8197:62:31","nodeType":"YulFunctionCall","src":"8197:62:31"},"variableNames":[{"name":"value1","nativeSrc":"8187:6:31","nodeType":"YulIdentifier","src":"8187:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"7624:652:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7678:9:31","nodeType":"YulTypedName","src":"7678:9:31","type":""},{"name":"dataEnd","nativeSrc":"7689:7:31","nodeType":"YulTypedName","src":"7689:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7701:6:31","nodeType":"YulTypedName","src":"7701:6:31","type":""},{"name":"value1","nativeSrc":"7709:6:31","nodeType":"YulTypedName","src":"7709:6:31","type":""}],"src":"7624:652:31"},{"body":{"nativeSrc":"8327:32:31","nodeType":"YulBlock","src":"8327:32:31","statements":[{"nativeSrc":"8337:16:31","nodeType":"YulAssignment","src":"8337:16:31","value":{"name":"value","nativeSrc":"8348:5:31","nodeType":"YulIdentifier","src":"8348:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"8337:7:31","nodeType":"YulIdentifier","src":"8337:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8282:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8309:5:31","nodeType":"YulTypedName","src":"8309:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8319:7:31","nodeType":"YulTypedName","src":"8319:7:31","type":""}],"src":"8282:77:31"},{"body":{"nativeSrc":"8430:53:31","nodeType":"YulBlock","src":"8430:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8447:3:31","nodeType":"YulIdentifier","src":"8447:3:31"},{"arguments":[{"name":"value","nativeSrc":"8470:5:31","nodeType":"YulIdentifier","src":"8470:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8452:17:31","nodeType":"YulIdentifier","src":"8452:17:31"},"nativeSrc":"8452:24:31","nodeType":"YulFunctionCall","src":"8452:24:31"}],"functionName":{"name":"mstore","nativeSrc":"8440:6:31","nodeType":"YulIdentifier","src":"8440:6:31"},"nativeSrc":"8440:37:31","nodeType":"YulFunctionCall","src":"8440:37:31"},"nativeSrc":"8440:37:31","nodeType":"YulExpressionStatement","src":"8440:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8365:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8418:5:31","nodeType":"YulTypedName","src":"8418:5:31","type":""},{"name":"pos","nativeSrc":"8425:3:31","nodeType":"YulTypedName","src":"8425:3:31","type":""}],"src":"8365:118:31"},{"body":{"nativeSrc":"8587:124:31","nodeType":"YulBlock","src":"8587:124:31","statements":[{"nativeSrc":"8597:26:31","nodeType":"YulAssignment","src":"8597:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8609:9:31","nodeType":"YulIdentifier","src":"8609:9:31"},{"kind":"number","nativeSrc":"8620:2:31","nodeType":"YulLiteral","src":"8620:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8605:3:31","nodeType":"YulIdentifier","src":"8605:3:31"},"nativeSrc":"8605:18:31","nodeType":"YulFunctionCall","src":"8605:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8597:4:31","nodeType":"YulIdentifier","src":"8597:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8677:6:31","nodeType":"YulIdentifier","src":"8677:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"8690:9:31","nodeType":"YulIdentifier","src":"8690:9:31"},{"kind":"number","nativeSrc":"8701:1:31","nodeType":"YulLiteral","src":"8701:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8686:3:31","nodeType":"YulIdentifier","src":"8686:3:31"},"nativeSrc":"8686:17:31","nodeType":"YulFunctionCall","src":"8686:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8633:43:31","nodeType":"YulIdentifier","src":"8633:43:31"},"nativeSrc":"8633:71:31","nodeType":"YulFunctionCall","src":"8633:71:31"},"nativeSrc":"8633:71:31","nodeType":"YulExpressionStatement","src":"8633:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8489:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8559:9:31","nodeType":"YulTypedName","src":"8559:9:31","type":""},{"name":"value0","nativeSrc":"8571:6:31","nodeType":"YulTypedName","src":"8571:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8582:4:31","nodeType":"YulTypedName","src":"8582:4:31","type":""}],"src":"8489:222:31"},{"body":{"nativeSrc":"8783:263:31","nodeType":"YulBlock","src":"8783:263:31","statements":[{"body":{"nativeSrc":"8829:83:31","nodeType":"YulBlock","src":"8829:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8831:77:31","nodeType":"YulIdentifier","src":"8831:77:31"},"nativeSrc":"8831:79:31","nodeType":"YulFunctionCall","src":"8831:79:31"},"nativeSrc":"8831:79:31","nodeType":"YulExpressionStatement","src":"8831:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8804:7:31","nodeType":"YulIdentifier","src":"8804:7:31"},{"name":"headStart","nativeSrc":"8813:9:31","nodeType":"YulIdentifier","src":"8813:9:31"}],"functionName":{"name":"sub","nativeSrc":"8800:3:31","nodeType":"YulIdentifier","src":"8800:3:31"},"nativeSrc":"8800:23:31","nodeType":"YulFunctionCall","src":"8800:23:31"},{"kind":"number","nativeSrc":"8825:2:31","nodeType":"YulLiteral","src":"8825:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8796:3:31","nodeType":"YulIdentifier","src":"8796:3:31"},"nativeSrc":"8796:32:31","nodeType":"YulFunctionCall","src":"8796:32:31"},"nativeSrc":"8793:119:31","nodeType":"YulIf","src":"8793:119:31"},{"nativeSrc":"8922:117:31","nodeType":"YulBlock","src":"8922:117:31","statements":[{"nativeSrc":"8937:15:31","nodeType":"YulVariableDeclaration","src":"8937:15:31","value":{"kind":"number","nativeSrc":"8951:1:31","nodeType":"YulLiteral","src":"8951:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8941:6:31","nodeType":"YulTypedName","src":"8941:6:31","type":""}]},{"nativeSrc":"8966:63:31","nodeType":"YulAssignment","src":"8966:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9001:9:31","nodeType":"YulIdentifier","src":"9001:9:31"},{"name":"offset","nativeSrc":"9012:6:31","nodeType":"YulIdentifier","src":"9012:6:31"}],"functionName":{"name":"add","nativeSrc":"8997:3:31","nodeType":"YulIdentifier","src":"8997:3:31"},"nativeSrc":"8997:22:31","nodeType":"YulFunctionCall","src":"8997:22:31"},{"name":"dataEnd","nativeSrc":"9021:7:31","nodeType":"YulIdentifier","src":"9021:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8976:20:31","nodeType":"YulIdentifier","src":"8976:20:31"},"nativeSrc":"8976:53:31","nodeType":"YulFunctionCall","src":"8976:53:31"},"variableNames":[{"name":"value0","nativeSrc":"8966:6:31","nodeType":"YulIdentifier","src":"8966:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8717:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8753:9:31","nodeType":"YulTypedName","src":"8753:9:31","type":""},{"name":"dataEnd","nativeSrc":"8764:7:31","nodeType":"YulTypedName","src":"8764:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8776:6:31","nodeType":"YulTypedName","src":"8776:6:31","type":""}],"src":"8717:329:31"},{"body":{"nativeSrc":"9117:53:31","nodeType":"YulBlock","src":"9117:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9134:3:31","nodeType":"YulIdentifier","src":"9134:3:31"},{"arguments":[{"name":"value","nativeSrc":"9157:5:31","nodeType":"YulIdentifier","src":"9157:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9139:17:31","nodeType":"YulIdentifier","src":"9139:17:31"},"nativeSrc":"9139:24:31","nodeType":"YulFunctionCall","src":"9139:24:31"}],"functionName":{"name":"mstore","nativeSrc":"9127:6:31","nodeType":"YulIdentifier","src":"9127:6:31"},"nativeSrc":"9127:37:31","nodeType":"YulFunctionCall","src":"9127:37:31"},"nativeSrc":"9127:37:31","nodeType":"YulExpressionStatement","src":"9127:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9052:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9105:5:31","nodeType":"YulTypedName","src":"9105:5:31","type":""},{"name":"pos","nativeSrc":"9112:3:31","nodeType":"YulTypedName","src":"9112:3:31","type":""}],"src":"9052:118:31"},{"body":{"nativeSrc":"9274:124:31","nodeType":"YulBlock","src":"9274:124:31","statements":[{"nativeSrc":"9284:26:31","nodeType":"YulAssignment","src":"9284:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"9296:9:31","nodeType":"YulIdentifier","src":"9296:9:31"},{"kind":"number","nativeSrc":"9307:2:31","nodeType":"YulLiteral","src":"9307:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9292:3:31","nodeType":"YulIdentifier","src":"9292:3:31"},"nativeSrc":"9292:18:31","nodeType":"YulFunctionCall","src":"9292:18:31"},"variableNames":[{"name":"tail","nativeSrc":"9284:4:31","nodeType":"YulIdentifier","src":"9284:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9364:6:31","nodeType":"YulIdentifier","src":"9364:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"9377:9:31","nodeType":"YulIdentifier","src":"9377:9:31"},{"kind":"number","nativeSrc":"9388:1:31","nodeType":"YulLiteral","src":"9388:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9373:3:31","nodeType":"YulIdentifier","src":"9373:3:31"},"nativeSrc":"9373:17:31","nodeType":"YulFunctionCall","src":"9373:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9320:43:31","nodeType":"YulIdentifier","src":"9320:43:31"},"nativeSrc":"9320:71:31","nodeType":"YulFunctionCall","src":"9320:71:31"},"nativeSrc":"9320:71:31","nodeType":"YulExpressionStatement","src":"9320:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"9176:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9246:9:31","nodeType":"YulTypedName","src":"9246:9:31","type":""},{"name":"value0","nativeSrc":"9258:6:31","nodeType":"YulTypedName","src":"9258:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9269:4:31","nodeType":"YulTypedName","src":"9269:4:31","type":""}],"src":"9176:222:31"},{"body":{"nativeSrc":"9444:76:31","nodeType":"YulBlock","src":"9444:76:31","statements":[{"body":{"nativeSrc":"9498:16:31","nodeType":"YulBlock","src":"9498:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9507:1:31","nodeType":"YulLiteral","src":"9507:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"9510:1:31","nodeType":"YulLiteral","src":"9510:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9500:6:31","nodeType":"YulIdentifier","src":"9500:6:31"},"nativeSrc":"9500:12:31","nodeType":"YulFunctionCall","src":"9500:12:31"},"nativeSrc":"9500:12:31","nodeType":"YulExpressionStatement","src":"9500:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9467:5:31","nodeType":"YulIdentifier","src":"9467:5:31"},{"arguments":[{"name":"value","nativeSrc":"9489:5:31","nodeType":"YulIdentifier","src":"9489:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9474:14:31","nodeType":"YulIdentifier","src":"9474:14:31"},"nativeSrc":"9474:21:31","nodeType":"YulFunctionCall","src":"9474:21:31"}],"functionName":{"name":"eq","nativeSrc":"9464:2:31","nodeType":"YulIdentifier","src":"9464:2:31"},"nativeSrc":"9464:32:31","nodeType":"YulFunctionCall","src":"9464:32:31"}],"functionName":{"name":"iszero","nativeSrc":"9457:6:31","nodeType":"YulIdentifier","src":"9457:6:31"},"nativeSrc":"9457:40:31","nodeType":"YulFunctionCall","src":"9457:40:31"},"nativeSrc":"9454:60:31","nodeType":"YulIf","src":"9454:60:31"}]},"name":"validator_revert_t_bool","nativeSrc":"9404:116:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9437:5:31","nodeType":"YulTypedName","src":"9437:5:31","type":""}],"src":"9404:116:31"},{"body":{"nativeSrc":"9575:84:31","nodeType":"YulBlock","src":"9575:84:31","statements":[{"nativeSrc":"9585:29:31","nodeType":"YulAssignment","src":"9585:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"9607:6:31","nodeType":"YulIdentifier","src":"9607:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"9594:12:31","nodeType":"YulIdentifier","src":"9594:12:31"},"nativeSrc":"9594:20:31","nodeType":"YulFunctionCall","src":"9594:20:31"},"variableNames":[{"name":"value","nativeSrc":"9585:5:31","nodeType":"YulIdentifier","src":"9585:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9647:5:31","nodeType":"YulIdentifier","src":"9647:5:31"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9623:23:31","nodeType":"YulIdentifier","src":"9623:23:31"},"nativeSrc":"9623:30:31","nodeType":"YulFunctionCall","src":"9623:30:31"},"nativeSrc":"9623:30:31","nodeType":"YulExpressionStatement","src":"9623:30:31"}]},"name":"abi_decode_t_bool","nativeSrc":"9526:133:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9553:6:31","nodeType":"YulTypedName","src":"9553:6:31","type":""},{"name":"end","nativeSrc":"9561:3:31","nodeType":"YulTypedName","src":"9561:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9569:5:31","nodeType":"YulTypedName","src":"9569:5:31","type":""}],"src":"9526:133:31"},{"body":{"nativeSrc":"9745:388:31","nodeType":"YulBlock","src":"9745:388:31","statements":[{"body":{"nativeSrc":"9791:83:31","nodeType":"YulBlock","src":"9791:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9793:77:31","nodeType":"YulIdentifier","src":"9793:77:31"},"nativeSrc":"9793:79:31","nodeType":"YulFunctionCall","src":"9793:79:31"},"nativeSrc":"9793:79:31","nodeType":"YulExpressionStatement","src":"9793:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9766:7:31","nodeType":"YulIdentifier","src":"9766:7:31"},{"name":"headStart","nativeSrc":"9775:9:31","nodeType":"YulIdentifier","src":"9775:9:31"}],"functionName":{"name":"sub","nativeSrc":"9762:3:31","nodeType":"YulIdentifier","src":"9762:3:31"},"nativeSrc":"9762:23:31","nodeType":"YulFunctionCall","src":"9762:23:31"},{"kind":"number","nativeSrc":"9787:2:31","nodeType":"YulLiteral","src":"9787:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9758:3:31","nodeType":"YulIdentifier","src":"9758:3:31"},"nativeSrc":"9758:32:31","nodeType":"YulFunctionCall","src":"9758:32:31"},"nativeSrc":"9755:119:31","nodeType":"YulIf","src":"9755:119:31"},{"nativeSrc":"9884:117:31","nodeType":"YulBlock","src":"9884:117:31","statements":[{"nativeSrc":"9899:15:31","nodeType":"YulVariableDeclaration","src":"9899:15:31","value":{"kind":"number","nativeSrc":"9913:1:31","nodeType":"YulLiteral","src":"9913:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9903:6:31","nodeType":"YulTypedName","src":"9903:6:31","type":""}]},{"nativeSrc":"9928:63:31","nodeType":"YulAssignment","src":"9928:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9963:9:31","nodeType":"YulIdentifier","src":"9963:9:31"},{"name":"offset","nativeSrc":"9974:6:31","nodeType":"YulIdentifier","src":"9974:6:31"}],"functionName":{"name":"add","nativeSrc":"9959:3:31","nodeType":"YulIdentifier","src":"9959:3:31"},"nativeSrc":"9959:22:31","nodeType":"YulFunctionCall","src":"9959:22:31"},{"name":"dataEnd","nativeSrc":"9983:7:31","nodeType":"YulIdentifier","src":"9983:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9938:20:31","nodeType":"YulIdentifier","src":"9938:20:31"},"nativeSrc":"9938:53:31","nodeType":"YulFunctionCall","src":"9938:53:31"},"variableNames":[{"name":"value0","nativeSrc":"9928:6:31","nodeType":"YulIdentifier","src":"9928:6:31"}]}]},{"nativeSrc":"10011:115:31","nodeType":"YulBlock","src":"10011:115:31","statements":[{"nativeSrc":"10026:16:31","nodeType":"YulVariableDeclaration","src":"10026:16:31","value":{"kind":"number","nativeSrc":"10040:2:31","nodeType":"YulLiteral","src":"10040:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10030:6:31","nodeType":"YulTypedName","src":"10030:6:31","type":""}]},{"nativeSrc":"10056:60:31","nodeType":"YulAssignment","src":"10056:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10088:9:31","nodeType":"YulIdentifier","src":"10088:9:31"},{"name":"offset","nativeSrc":"10099:6:31","nodeType":"YulIdentifier","src":"10099:6:31"}],"functionName":{"name":"add","nativeSrc":"10084:3:31","nodeType":"YulIdentifier","src":"10084:3:31"},"nativeSrc":"10084:22:31","nodeType":"YulFunctionCall","src":"10084:22:31"},{"name":"dataEnd","nativeSrc":"10108:7:31","nodeType":"YulIdentifier","src":"10108:7:31"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"10066:17:31","nodeType":"YulIdentifier","src":"10066:17:31"},"nativeSrc":"10066:50:31","nodeType":"YulFunctionCall","src":"10066:50:31"},"variableNames":[{"name":"value1","nativeSrc":"10056:6:31","nodeType":"YulIdentifier","src":"10056:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"9665:468:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9707:9:31","nodeType":"YulTypedName","src":"9707:9:31","type":""},{"name":"dataEnd","nativeSrc":"9718:7:31","nodeType":"YulTypedName","src":"9718:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9730:6:31","nodeType":"YulTypedName","src":"9730:6:31","type":""},{"name":"value1","nativeSrc":"9738:6:31","nodeType":"YulTypedName","src":"9738:6:31","type":""}],"src":"9665:468:31"},{"body":{"nativeSrc":"10265:817:31","nodeType":"YulBlock","src":"10265:817:31","statements":[{"body":{"nativeSrc":"10312:83:31","nodeType":"YulBlock","src":"10312:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10314:77:31","nodeType":"YulIdentifier","src":"10314:77:31"},"nativeSrc":"10314:79:31","nodeType":"YulFunctionCall","src":"10314:79:31"},"nativeSrc":"10314:79:31","nodeType":"YulExpressionStatement","src":"10314:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10286:7:31","nodeType":"YulIdentifier","src":"10286:7:31"},{"name":"headStart","nativeSrc":"10295:9:31","nodeType":"YulIdentifier","src":"10295:9:31"}],"functionName":{"name":"sub","nativeSrc":"10282:3:31","nodeType":"YulIdentifier","src":"10282:3:31"},"nativeSrc":"10282:23:31","nodeType":"YulFunctionCall","src":"10282:23:31"},{"kind":"number","nativeSrc":"10307:3:31","nodeType":"YulLiteral","src":"10307:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"10278:3:31","nodeType":"YulIdentifier","src":"10278:3:31"},"nativeSrc":"10278:33:31","nodeType":"YulFunctionCall","src":"10278:33:31"},"nativeSrc":"10275:120:31","nodeType":"YulIf","src":"10275:120:31"},{"nativeSrc":"10405:117:31","nodeType":"YulBlock","src":"10405:117:31","statements":[{"nativeSrc":"10420:15:31","nodeType":"YulVariableDeclaration","src":"10420:15:31","value":{"kind":"number","nativeSrc":"10434:1:31","nodeType":"YulLiteral","src":"10434:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10424:6:31","nodeType":"YulTypedName","src":"10424:6:31","type":""}]},{"nativeSrc":"10449:63:31","nodeType":"YulAssignment","src":"10449:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10484:9:31","nodeType":"YulIdentifier","src":"10484:9:31"},{"name":"offset","nativeSrc":"10495:6:31","nodeType":"YulIdentifier","src":"10495:6:31"}],"functionName":{"name":"add","nativeSrc":"10480:3:31","nodeType":"YulIdentifier","src":"10480:3:31"},"nativeSrc":"10480:22:31","nodeType":"YulFunctionCall","src":"10480:22:31"},{"name":"dataEnd","nativeSrc":"10504:7:31","nodeType":"YulIdentifier","src":"10504:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10459:20:31","nodeType":"YulIdentifier","src":"10459:20:31"},"nativeSrc":"10459:53:31","nodeType":"YulFunctionCall","src":"10459:53:31"},"variableNames":[{"name":"value0","nativeSrc":"10449:6:31","nodeType":"YulIdentifier","src":"10449:6:31"}]}]},{"nativeSrc":"10532:118:31","nodeType":"YulBlock","src":"10532:118:31","statements":[{"nativeSrc":"10547:16:31","nodeType":"YulVariableDeclaration","src":"10547:16:31","value":{"kind":"number","nativeSrc":"10561:2:31","nodeType":"YulLiteral","src":"10561:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10551:6:31","nodeType":"YulTypedName","src":"10551:6:31","type":""}]},{"nativeSrc":"10577:63:31","nodeType":"YulAssignment","src":"10577:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10612:9:31","nodeType":"YulIdentifier","src":"10612:9:31"},{"name":"offset","nativeSrc":"10623:6:31","nodeType":"YulIdentifier","src":"10623:6:31"}],"functionName":{"name":"add","nativeSrc":"10608:3:31","nodeType":"YulIdentifier","src":"10608:3:31"},"nativeSrc":"10608:22:31","nodeType":"YulFunctionCall","src":"10608:22:31"},{"name":"dataEnd","nativeSrc":"10632:7:31","nodeType":"YulIdentifier","src":"10632:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10587:20:31","nodeType":"YulIdentifier","src":"10587:20:31"},"nativeSrc":"10587:53:31","nodeType":"YulFunctionCall","src":"10587:53:31"},"variableNames":[{"name":"value1","nativeSrc":"10577:6:31","nodeType":"YulIdentifier","src":"10577:6:31"}]}]},{"nativeSrc":"10660:118:31","nodeType":"YulBlock","src":"10660:118:31","statements":[{"nativeSrc":"10675:16:31","nodeType":"YulVariableDeclaration","src":"10675:16:31","value":{"kind":"number","nativeSrc":"10689:2:31","nodeType":"YulLiteral","src":"10689:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10679:6:31","nodeType":"YulTypedName","src":"10679:6:31","type":""}]},{"nativeSrc":"10705:63:31","nodeType":"YulAssignment","src":"10705:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10740:9:31","nodeType":"YulIdentifier","src":"10740:9:31"},{"name":"offset","nativeSrc":"10751:6:31","nodeType":"YulIdentifier","src":"10751:6:31"}],"functionName":{"name":"add","nativeSrc":"10736:3:31","nodeType":"YulIdentifier","src":"10736:3:31"},"nativeSrc":"10736:22:31","nodeType":"YulFunctionCall","src":"10736:22:31"},{"name":"dataEnd","nativeSrc":"10760:7:31","nodeType":"YulIdentifier","src":"10760:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10715:20:31","nodeType":"YulIdentifier","src":"10715:20:31"},"nativeSrc":"10715:53:31","nodeType":"YulFunctionCall","src":"10715:53:31"},"variableNames":[{"name":"value2","nativeSrc":"10705:6:31","nodeType":"YulIdentifier","src":"10705:6:31"}]}]},{"nativeSrc":"10788:287:31","nodeType":"YulBlock","src":"10788:287:31","statements":[{"nativeSrc":"10803:46:31","nodeType":"YulVariableDeclaration","src":"10803:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10834:9:31","nodeType":"YulIdentifier","src":"10834:9:31"},{"kind":"number","nativeSrc":"10845:2:31","nodeType":"YulLiteral","src":"10845:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10830:3:31","nodeType":"YulIdentifier","src":"10830:3:31"},"nativeSrc":"10830:18:31","nodeType":"YulFunctionCall","src":"10830:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"10817:12:31","nodeType":"YulIdentifier","src":"10817:12:31"},"nativeSrc":"10817:32:31","nodeType":"YulFunctionCall","src":"10817:32:31"},"variables":[{"name":"offset","nativeSrc":"10807:6:31","nodeType":"YulTypedName","src":"10807:6:31","type":""}]},{"body":{"nativeSrc":"10896:83:31","nodeType":"YulBlock","src":"10896:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10898:77:31","nodeType":"YulIdentifier","src":"10898:77:31"},"nativeSrc":"10898:79:31","nodeType":"YulFunctionCall","src":"10898:79:31"},"nativeSrc":"10898:79:31","nodeType":"YulExpressionStatement","src":"10898:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10868:6:31","nodeType":"YulIdentifier","src":"10868:6:31"},{"kind":"number","nativeSrc":"10876:18:31","nodeType":"YulLiteral","src":"10876:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10865:2:31","nodeType":"YulIdentifier","src":"10865:2:31"},"nativeSrc":"10865:30:31","nodeType":"YulFunctionCall","src":"10865:30:31"},"nativeSrc":"10862:117:31","nodeType":"YulIf","src":"10862:117:31"},{"nativeSrc":"10993:72:31","nodeType":"YulAssignment","src":"10993:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11037:9:31","nodeType":"YulIdentifier","src":"11037:9:31"},{"name":"offset","nativeSrc":"11048:6:31","nodeType":"YulIdentifier","src":"11048:6:31"}],"functionName":{"name":"add","nativeSrc":"11033:3:31","nodeType":"YulIdentifier","src":"11033:3:31"},"nativeSrc":"11033:22:31","nodeType":"YulFunctionCall","src":"11033:22:31"},{"name":"dataEnd","nativeSrc":"11057:7:31","nodeType":"YulIdentifier","src":"11057:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11003:29:31","nodeType":"YulIdentifier","src":"11003:29:31"},"nativeSrc":"11003:62:31","nodeType":"YulFunctionCall","src":"11003:62:31"},"variableNames":[{"name":"value3","nativeSrc":"10993:6:31","nodeType":"YulIdentifier","src":"10993:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"10139:943:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10211:9:31","nodeType":"YulTypedName","src":"10211:9:31","type":""},{"name":"dataEnd","nativeSrc":"10222:7:31","nodeType":"YulTypedName","src":"10222:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10234:6:31","nodeType":"YulTypedName","src":"10234:6:31","type":""},{"name":"value1","nativeSrc":"10242:6:31","nodeType":"YulTypedName","src":"10242:6:31","type":""},{"name":"value2","nativeSrc":"10250:6:31","nodeType":"YulTypedName","src":"10250:6:31","type":""},{"name":"value3","nativeSrc":"10258:6:31","nodeType":"YulTypedName","src":"10258:6:31","type":""}],"src":"10139:943:31"},{"body":{"nativeSrc":"11155:241:31","nodeType":"YulBlock","src":"11155:241:31","statements":[{"body":{"nativeSrc":"11260:22:31","nodeType":"YulBlock","src":"11260:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"11262:16:31","nodeType":"YulIdentifier","src":"11262:16:31"},"nativeSrc":"11262:18:31","nodeType":"YulFunctionCall","src":"11262:18:31"},"nativeSrc":"11262:18:31","nodeType":"YulExpressionStatement","src":"11262:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11232:6:31","nodeType":"YulIdentifier","src":"11232:6:31"},{"kind":"number","nativeSrc":"11240:18:31","nodeType":"YulLiteral","src":"11240:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11229:2:31","nodeType":"YulIdentifier","src":"11229:2:31"},"nativeSrc":"11229:30:31","nodeType":"YulFunctionCall","src":"11229:30:31"},"nativeSrc":"11226:56:31","nodeType":"YulIf","src":"11226:56:31"},{"nativeSrc":"11292:37:31","nodeType":"YulAssignment","src":"11292:37:31","value":{"arguments":[{"name":"length","nativeSrc":"11322:6:31","nodeType":"YulIdentifier","src":"11322:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11300:21:31","nodeType":"YulIdentifier","src":"11300:21:31"},"nativeSrc":"11300:29:31","nodeType":"YulFunctionCall","src":"11300:29:31"},"variableNames":[{"name":"size","nativeSrc":"11292:4:31","nodeType":"YulIdentifier","src":"11292:4:31"}]},{"nativeSrc":"11366:23:31","nodeType":"YulAssignment","src":"11366:23:31","value":{"arguments":[{"name":"size","nativeSrc":"11378:4:31","nodeType":"YulIdentifier","src":"11378:4:31"},{"kind":"number","nativeSrc":"11384:4:31","nodeType":"YulLiteral","src":"11384:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11374:3:31","nodeType":"YulIdentifier","src":"11374:3:31"},"nativeSrc":"11374:15:31","nodeType":"YulFunctionCall","src":"11374:15:31"},"variableNames":[{"name":"size","nativeSrc":"11366:4:31","nodeType":"YulIdentifier","src":"11366:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"11088:308:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"11139:6:31","nodeType":"YulTypedName","src":"11139:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"11150:4:31","nodeType":"YulTypedName","src":"11150:4:31","type":""}],"src":"11088:308:31"},{"body":{"nativeSrc":"11486:341:31","nodeType":"YulBlock","src":"11486:341:31","statements":[{"nativeSrc":"11496:75:31","nodeType":"YulAssignment","src":"11496:75:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"11563:6:31","nodeType":"YulIdentifier","src":"11563:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"11521:41:31","nodeType":"YulIdentifier","src":"11521:41:31"},"nativeSrc":"11521:49:31","nodeType":"YulFunctionCall","src":"11521:49:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"11505:15:31","nodeType":"YulIdentifier","src":"11505:15:31"},"nativeSrc":"11505:66:31","nodeType":"YulFunctionCall","src":"11505:66:31"},"variableNames":[{"name":"array","nativeSrc":"11496:5:31","nodeType":"YulIdentifier","src":"11496:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"11587:5:31","nodeType":"YulIdentifier","src":"11587:5:31"},{"name":"length","nativeSrc":"11594:6:31","nodeType":"YulIdentifier","src":"11594:6:31"}],"functionName":{"name":"mstore","nativeSrc":"11580:6:31","nodeType":"YulIdentifier","src":"11580:6:31"},"nativeSrc":"11580:21:31","nodeType":"YulFunctionCall","src":"11580:21:31"},"nativeSrc":"11580:21:31","nodeType":"YulExpressionStatement","src":"11580:21:31"},{"nativeSrc":"11610:27:31","nodeType":"YulVariableDeclaration","src":"11610:27:31","value":{"arguments":[{"name":"array","nativeSrc":"11625:5:31","nodeType":"YulIdentifier","src":"11625:5:31"},{"kind":"number","nativeSrc":"11632:4:31","nodeType":"YulLiteral","src":"11632:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11621:3:31","nodeType":"YulIdentifier","src":"11621:3:31"},"nativeSrc":"11621:16:31","nodeType":"YulFunctionCall","src":"11621:16:31"},"variables":[{"name":"dst","nativeSrc":"11614:3:31","nodeType":"YulTypedName","src":"11614:3:31","type":""}]},{"body":{"nativeSrc":"11675:83:31","nodeType":"YulBlock","src":"11675:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"11677:77:31","nodeType":"YulIdentifier","src":"11677:77:31"},"nativeSrc":"11677:79:31","nodeType":"YulFunctionCall","src":"11677:79:31"},"nativeSrc":"11677:79:31","nodeType":"YulExpressionStatement","src":"11677:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11656:3:31","nodeType":"YulIdentifier","src":"11656:3:31"},{"name":"length","nativeSrc":"11661:6:31","nodeType":"YulIdentifier","src":"11661:6:31"}],"functionName":{"name":"add","nativeSrc":"11652:3:31","nodeType":"YulIdentifier","src":"11652:3:31"},"nativeSrc":"11652:16:31","nodeType":"YulFunctionCall","src":"11652:16:31"},{"name":"end","nativeSrc":"11670:3:31","nodeType":"YulIdentifier","src":"11670:3:31"}],"functionName":{"name":"gt","nativeSrc":"11649:2:31","nodeType":"YulIdentifier","src":"11649:2:31"},"nativeSrc":"11649:25:31","nodeType":"YulFunctionCall","src":"11649:25:31"},"nativeSrc":"11646:112:31","nodeType":"YulIf","src":"11646:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"11804:3:31","nodeType":"YulIdentifier","src":"11804:3:31"},{"name":"dst","nativeSrc":"11809:3:31","nodeType":"YulIdentifier","src":"11809:3:31"},{"name":"length","nativeSrc":"11814:6:31","nodeType":"YulIdentifier","src":"11814:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11767:36:31","nodeType":"YulIdentifier","src":"11767:36:31"},"nativeSrc":"11767:54:31","nodeType":"YulFunctionCall","src":"11767:54:31"},"nativeSrc":"11767:54:31","nodeType":"YulExpressionStatement","src":"11767:54:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11402:425:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11459:3:31","nodeType":"YulTypedName","src":"11459:3:31","type":""},{"name":"length","nativeSrc":"11464:6:31","nodeType":"YulTypedName","src":"11464:6:31","type":""},{"name":"end","nativeSrc":"11472:3:31","nodeType":"YulTypedName","src":"11472:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11480:5:31","nodeType":"YulTypedName","src":"11480:5:31","type":""}],"src":"11402:425:31"},{"body":{"nativeSrc":"11909:278:31","nodeType":"YulBlock","src":"11909:278:31","statements":[{"body":{"nativeSrc":"11958:83:31","nodeType":"YulBlock","src":"11958:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11960:77:31","nodeType":"YulIdentifier","src":"11960:77:31"},"nativeSrc":"11960:79:31","nodeType":"YulFunctionCall","src":"11960:79:31"},"nativeSrc":"11960:79:31","nodeType":"YulExpressionStatement","src":"11960:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11937:6:31","nodeType":"YulIdentifier","src":"11937:6:31"},{"kind":"number","nativeSrc":"11945:4:31","nodeType":"YulLiteral","src":"11945:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11933:3:31","nodeType":"YulIdentifier","src":"11933:3:31"},"nativeSrc":"11933:17:31","nodeType":"YulFunctionCall","src":"11933:17:31"},{"name":"end","nativeSrc":"11952:3:31","nodeType":"YulIdentifier","src":"11952:3:31"}],"functionName":{"name":"slt","nativeSrc":"11929:3:31","nodeType":"YulIdentifier","src":"11929:3:31"},"nativeSrc":"11929:27:31","nodeType":"YulFunctionCall","src":"11929:27:31"}],"functionName":{"name":"iszero","nativeSrc":"11922:6:31","nodeType":"YulIdentifier","src":"11922:6:31"},"nativeSrc":"11922:35:31","nodeType":"YulFunctionCall","src":"11922:35:31"},"nativeSrc":"11919:122:31","nodeType":"YulIf","src":"11919:122:31"},{"nativeSrc":"12050:34:31","nodeType":"YulVariableDeclaration","src":"12050:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"12077:6:31","nodeType":"YulIdentifier","src":"12077:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"12064:12:31","nodeType":"YulIdentifier","src":"12064:12:31"},"nativeSrc":"12064:20:31","nodeType":"YulFunctionCall","src":"12064:20:31"},"variables":[{"name":"length","nativeSrc":"12054:6:31","nodeType":"YulTypedName","src":"12054:6:31","type":""}]},{"nativeSrc":"12093:88:31","nodeType":"YulAssignment","src":"12093:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"12154:6:31","nodeType":"YulIdentifier","src":"12154:6:31"},{"kind":"number","nativeSrc":"12162:4:31","nodeType":"YulLiteral","src":"12162:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12150:3:31","nodeType":"YulIdentifier","src":"12150:3:31"},"nativeSrc":"12150:17:31","nodeType":"YulFunctionCall","src":"12150:17:31"},{"name":"length","nativeSrc":"12169:6:31","nodeType":"YulIdentifier","src":"12169:6:31"},{"name":"end","nativeSrc":"12177:3:31","nodeType":"YulIdentifier","src":"12177:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"12102:47:31","nodeType":"YulIdentifier","src":"12102:47:31"},"nativeSrc":"12102:79:31","nodeType":"YulFunctionCall","src":"12102:79:31"},"variableNames":[{"name":"array","nativeSrc":"12093:5:31","nodeType":"YulIdentifier","src":"12093:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11847:340:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11887:6:31","nodeType":"YulTypedName","src":"11887:6:31","type":""},{"name":"end","nativeSrc":"11895:3:31","nodeType":"YulTypedName","src":"11895:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11903:5:31","nodeType":"YulTypedName","src":"11903:5:31","type":""}],"src":"11847:340:31"},{"body":{"nativeSrc":"12286:561:31","nodeType":"YulBlock","src":"12286:561:31","statements":[{"body":{"nativeSrc":"12332:83:31","nodeType":"YulBlock","src":"12332:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12334:77:31","nodeType":"YulIdentifier","src":"12334:77:31"},"nativeSrc":"12334:79:31","nodeType":"YulFunctionCall","src":"12334:79:31"},"nativeSrc":"12334:79:31","nodeType":"YulExpressionStatement","src":"12334:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12307:7:31","nodeType":"YulIdentifier","src":"12307:7:31"},{"name":"headStart","nativeSrc":"12316:9:31","nodeType":"YulIdentifier","src":"12316:9:31"}],"functionName":{"name":"sub","nativeSrc":"12303:3:31","nodeType":"YulIdentifier","src":"12303:3:31"},"nativeSrc":"12303:23:31","nodeType":"YulFunctionCall","src":"12303:23:31"},{"kind":"number","nativeSrc":"12328:2:31","nodeType":"YulLiteral","src":"12328:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12299:3:31","nodeType":"YulIdentifier","src":"12299:3:31"},"nativeSrc":"12299:32:31","nodeType":"YulFunctionCall","src":"12299:32:31"},"nativeSrc":"12296:119:31","nodeType":"YulIf","src":"12296:119:31"},{"nativeSrc":"12425:117:31","nodeType":"YulBlock","src":"12425:117:31","statements":[{"nativeSrc":"12440:15:31","nodeType":"YulVariableDeclaration","src":"12440:15:31","value":{"kind":"number","nativeSrc":"12454:1:31","nodeType":"YulLiteral","src":"12454:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12444:6:31","nodeType":"YulTypedName","src":"12444:6:31","type":""}]},{"nativeSrc":"12469:63:31","nodeType":"YulAssignment","src":"12469:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12504:9:31","nodeType":"YulIdentifier","src":"12504:9:31"},{"name":"offset","nativeSrc":"12515:6:31","nodeType":"YulIdentifier","src":"12515:6:31"}],"functionName":{"name":"add","nativeSrc":"12500:3:31","nodeType":"YulIdentifier","src":"12500:3:31"},"nativeSrc":"12500:22:31","nodeType":"YulFunctionCall","src":"12500:22:31"},{"name":"dataEnd","nativeSrc":"12524:7:31","nodeType":"YulIdentifier","src":"12524:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12479:20:31","nodeType":"YulIdentifier","src":"12479:20:31"},"nativeSrc":"12479:53:31","nodeType":"YulFunctionCall","src":"12479:53:31"},"variableNames":[{"name":"value0","nativeSrc":"12469:6:31","nodeType":"YulIdentifier","src":"12469:6:31"}]}]},{"nativeSrc":"12552:288:31","nodeType":"YulBlock","src":"12552:288:31","statements":[{"nativeSrc":"12567:46:31","nodeType":"YulVariableDeclaration","src":"12567:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12598:9:31","nodeType":"YulIdentifier","src":"12598:9:31"},{"kind":"number","nativeSrc":"12609:2:31","nodeType":"YulLiteral","src":"12609:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12594:3:31","nodeType":"YulIdentifier","src":"12594:3:31"},"nativeSrc":"12594:18:31","nodeType":"YulFunctionCall","src":"12594:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"12581:12:31","nodeType":"YulIdentifier","src":"12581:12:31"},"nativeSrc":"12581:32:31","nodeType":"YulFunctionCall","src":"12581:32:31"},"variables":[{"name":"offset","nativeSrc":"12571:6:31","nodeType":"YulTypedName","src":"12571:6:31","type":""}]},{"body":{"nativeSrc":"12660:83:31","nodeType":"YulBlock","src":"12660:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12662:77:31","nodeType":"YulIdentifier","src":"12662:77:31"},"nativeSrc":"12662:79:31","nodeType":"YulFunctionCall","src":"12662:79:31"},"nativeSrc":"12662:79:31","nodeType":"YulExpressionStatement","src":"12662:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12632:6:31","nodeType":"YulIdentifier","src":"12632:6:31"},{"kind":"number","nativeSrc":"12640:18:31","nodeType":"YulLiteral","src":"12640:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12629:2:31","nodeType":"YulIdentifier","src":"12629:2:31"},"nativeSrc":"12629:30:31","nodeType":"YulFunctionCall","src":"12629:30:31"},"nativeSrc":"12626:117:31","nodeType":"YulIf","src":"12626:117:31"},{"nativeSrc":"12757:73:31","nodeType":"YulAssignment","src":"12757:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12802:9:31","nodeType":"YulIdentifier","src":"12802:9:31"},{"name":"offset","nativeSrc":"12813:6:31","nodeType":"YulIdentifier","src":"12813:6:31"}],"functionName":{"name":"add","nativeSrc":"12798:3:31","nodeType":"YulIdentifier","src":"12798:3:31"},"nativeSrc":"12798:22:31","nodeType":"YulFunctionCall","src":"12798:22:31"},{"name":"dataEnd","nativeSrc":"12822:7:31","nodeType":"YulIdentifier","src":"12822:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12767:30:31","nodeType":"YulIdentifier","src":"12767:30:31"},"nativeSrc":"12767:63:31","nodeType":"YulFunctionCall","src":"12767:63:31"},"variableNames":[{"name":"value1","nativeSrc":"12757:6:31","nodeType":"YulIdentifier","src":"12757:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"12193:654:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12248:9:31","nodeType":"YulTypedName","src":"12248:9:31","type":""},{"name":"dataEnd","nativeSrc":"12259:7:31","nodeType":"YulTypedName","src":"12259:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12271:6:31","nodeType":"YulTypedName","src":"12271:6:31","type":""},{"name":"value1","nativeSrc":"12279:6:31","nodeType":"YulTypedName","src":"12279:6:31","type":""}],"src":"12193:654:31"},{"body":{"nativeSrc":"12936:391:31","nodeType":"YulBlock","src":"12936:391:31","statements":[{"body":{"nativeSrc":"12982:83:31","nodeType":"YulBlock","src":"12982:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12984:77:31","nodeType":"YulIdentifier","src":"12984:77:31"},"nativeSrc":"12984:79:31","nodeType":"YulFunctionCall","src":"12984:79:31"},"nativeSrc":"12984:79:31","nodeType":"YulExpressionStatement","src":"12984:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12957:7:31","nodeType":"YulIdentifier","src":"12957:7:31"},{"name":"headStart","nativeSrc":"12966:9:31","nodeType":"YulIdentifier","src":"12966:9:31"}],"functionName":{"name":"sub","nativeSrc":"12953:3:31","nodeType":"YulIdentifier","src":"12953:3:31"},"nativeSrc":"12953:23:31","nodeType":"YulFunctionCall","src":"12953:23:31"},{"kind":"number","nativeSrc":"12978:2:31","nodeType":"YulLiteral","src":"12978:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12949:3:31","nodeType":"YulIdentifier","src":"12949:3:31"},"nativeSrc":"12949:32:31","nodeType":"YulFunctionCall","src":"12949:32:31"},"nativeSrc":"12946:119:31","nodeType":"YulIf","src":"12946:119:31"},{"nativeSrc":"13075:117:31","nodeType":"YulBlock","src":"13075:117:31","statements":[{"nativeSrc":"13090:15:31","nodeType":"YulVariableDeclaration","src":"13090:15:31","value":{"kind":"number","nativeSrc":"13104:1:31","nodeType":"YulLiteral","src":"13104:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13094:6:31","nodeType":"YulTypedName","src":"13094:6:31","type":""}]},{"nativeSrc":"13119:63:31","nodeType":"YulAssignment","src":"13119:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13154:9:31","nodeType":"YulIdentifier","src":"13154:9:31"},{"name":"offset","nativeSrc":"13165:6:31","nodeType":"YulIdentifier","src":"13165:6:31"}],"functionName":{"name":"add","nativeSrc":"13150:3:31","nodeType":"YulIdentifier","src":"13150:3:31"},"nativeSrc":"13150:22:31","nodeType":"YulFunctionCall","src":"13150:22:31"},{"name":"dataEnd","nativeSrc":"13174:7:31","nodeType":"YulIdentifier","src":"13174:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13129:20:31","nodeType":"YulIdentifier","src":"13129:20:31"},"nativeSrc":"13129:53:31","nodeType":"YulFunctionCall","src":"13129:53:31"},"variableNames":[{"name":"value0","nativeSrc":"13119:6:31","nodeType":"YulIdentifier","src":"13119:6:31"}]}]},{"nativeSrc":"13202:118:31","nodeType":"YulBlock","src":"13202:118:31","statements":[{"nativeSrc":"13217:16:31","nodeType":"YulVariableDeclaration","src":"13217:16:31","value":{"kind":"number","nativeSrc":"13231:2:31","nodeType":"YulLiteral","src":"13231:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13221:6:31","nodeType":"YulTypedName","src":"13221:6:31","type":""}]},{"nativeSrc":"13247:63:31","nodeType":"YulAssignment","src":"13247:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13282:9:31","nodeType":"YulIdentifier","src":"13282:9:31"},{"name":"offset","nativeSrc":"13293:6:31","nodeType":"YulIdentifier","src":"13293:6:31"}],"functionName":{"name":"add","nativeSrc":"13278:3:31","nodeType":"YulIdentifier","src":"13278:3:31"},"nativeSrc":"13278:22:31","nodeType":"YulFunctionCall","src":"13278:22:31"},{"name":"dataEnd","nativeSrc":"13302:7:31","nodeType":"YulIdentifier","src":"13302:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13257:20:31","nodeType":"YulIdentifier","src":"13257:20:31"},"nativeSrc":"13257:53:31","nodeType":"YulFunctionCall","src":"13257:53:31"},"variableNames":[{"name":"value1","nativeSrc":"13247:6:31","nodeType":"YulIdentifier","src":"13247:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"12853:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12898:9:31","nodeType":"YulTypedName","src":"12898:9:31","type":""},{"name":"dataEnd","nativeSrc":"12909:7:31","nodeType":"YulTypedName","src":"12909:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12921:6:31","nodeType":"YulTypedName","src":"12921:6:31","type":""},{"name":"value1","nativeSrc":"12929:6:31","nodeType":"YulTypedName","src":"12929:6:31","type":""}],"src":"12853:474:31"},{"body":{"nativeSrc":"13422:28:31","nodeType":"YulBlock","src":"13422:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13439:1:31","nodeType":"YulLiteral","src":"13439:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"13442:1:31","nodeType":"YulLiteral","src":"13442:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13432:6:31","nodeType":"YulIdentifier","src":"13432:6:31"},"nativeSrc":"13432:12:31","nodeType":"YulFunctionCall","src":"13432:12:31"},"nativeSrc":"13432:12:31","nodeType":"YulExpressionStatement","src":"13432:12:31"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"13333:117:31","nodeType":"YulFunctionDefinition","src":"13333:117:31"},{"body":{"nativeSrc":"13545:28:31","nodeType":"YulBlock","src":"13545:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13562:1:31","nodeType":"YulLiteral","src":"13562:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"13565:1:31","nodeType":"YulLiteral","src":"13565:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13555:6:31","nodeType":"YulIdentifier","src":"13555:6:31"},"nativeSrc":"13555:12:31","nodeType":"YulFunctionCall","src":"13555:12:31"},"nativeSrc":"13555:12:31","nodeType":"YulExpressionStatement","src":"13555:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"13456:117:31","nodeType":"YulFunctionDefinition","src":"13456:117:31"},{"body":{"nativeSrc":"13668:478:31","nodeType":"YulBlock","src":"13668:478:31","statements":[{"body":{"nativeSrc":"13717:83:31","nodeType":"YulBlock","src":"13717:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13719:77:31","nodeType":"YulIdentifier","src":"13719:77:31"},"nativeSrc":"13719:79:31","nodeType":"YulFunctionCall","src":"13719:79:31"},"nativeSrc":"13719:79:31","nodeType":"YulExpressionStatement","src":"13719:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13696:6:31","nodeType":"YulIdentifier","src":"13696:6:31"},{"kind":"number","nativeSrc":"13704:4:31","nodeType":"YulLiteral","src":"13704:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13692:3:31","nodeType":"YulIdentifier","src":"13692:3:31"},"nativeSrc":"13692:17:31","nodeType":"YulFunctionCall","src":"13692:17:31"},{"name":"end","nativeSrc":"13711:3:31","nodeType":"YulIdentifier","src":"13711:3:31"}],"functionName":{"name":"slt","nativeSrc":"13688:3:31","nodeType":"YulIdentifier","src":"13688:3:31"},"nativeSrc":"13688:27:31","nodeType":"YulFunctionCall","src":"13688:27:31"}],"functionName":{"name":"iszero","nativeSrc":"13681:6:31","nodeType":"YulIdentifier","src":"13681:6:31"},"nativeSrc":"13681:35:31","nodeType":"YulFunctionCall","src":"13681:35:31"},"nativeSrc":"13678:122:31","nodeType":"YulIf","src":"13678:122:31"},{"nativeSrc":"13809:30:31","nodeType":"YulAssignment","src":"13809:30:31","value":{"arguments":[{"name":"offset","nativeSrc":"13832:6:31","nodeType":"YulIdentifier","src":"13832:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"13819:12:31","nodeType":"YulIdentifier","src":"13819:12:31"},"nativeSrc":"13819:20:31","nodeType":"YulFunctionCall","src":"13819:20:31"},"variableNames":[{"name":"length","nativeSrc":"13809:6:31","nodeType":"YulIdentifier","src":"13809:6:31"}]},{"body":{"nativeSrc":"13882:83:31","nodeType":"YulBlock","src":"13882:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"13884:77:31","nodeType":"YulIdentifier","src":"13884:77:31"},"nativeSrc":"13884:79:31","nodeType":"YulFunctionCall","src":"13884:79:31"},"nativeSrc":"13884:79:31","nodeType":"YulExpressionStatement","src":"13884:79:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13854:6:31","nodeType":"YulIdentifier","src":"13854:6:31"},{"kind":"number","nativeSrc":"13862:18:31","nodeType":"YulLiteral","src":"13862:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13851:2:31","nodeType":"YulIdentifier","src":"13851:2:31"},"nativeSrc":"13851:30:31","nodeType":"YulFunctionCall","src":"13851:30:31"},"nativeSrc":"13848:117:31","nodeType":"YulIf","src":"13848:117:31"},{"nativeSrc":"13974:29:31","nodeType":"YulAssignment","src":"13974:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"13990:6:31","nodeType":"YulIdentifier","src":"13990:6:31"},{"kind":"number","nativeSrc":"13998:4:31","nodeType":"YulLiteral","src":"13998:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13986:3:31","nodeType":"YulIdentifier","src":"13986:3:31"},"nativeSrc":"13986:17:31","nodeType":"YulFunctionCall","src":"13986:17:31"},"variableNames":[{"name":"arrayPos","nativeSrc":"13974:8:31","nodeType":"YulIdentifier","src":"13974:8:31"}]},{"body":{"nativeSrc":"14057:83:31","nodeType":"YulBlock","src":"14057:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"14059:77:31","nodeType":"YulIdentifier","src":"14059:77:31"},"nativeSrc":"14059:79:31","nodeType":"YulFunctionCall","src":"14059:79:31"},"nativeSrc":"14059:79:31","nodeType":"YulExpressionStatement","src":"14059:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"14022:8:31","nodeType":"YulIdentifier","src":"14022:8:31"},{"arguments":[{"name":"length","nativeSrc":"14036:6:31","nodeType":"YulIdentifier","src":"14036:6:31"},{"kind":"number","nativeSrc":"14044:4:31","nodeType":"YulLiteral","src":"14044:4:31","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"14032:3:31","nodeType":"YulIdentifier","src":"14032:3:31"},"nativeSrc":"14032:17:31","nodeType":"YulFunctionCall","src":"14032:17:31"}],"functionName":{"name":"add","nativeSrc":"14018:3:31","nodeType":"YulIdentifier","src":"14018:3:31"},"nativeSrc":"14018:32:31","nodeType":"YulFunctionCall","src":"14018:32:31"},{"name":"end","nativeSrc":"14052:3:31","nodeType":"YulIdentifier","src":"14052:3:31"}],"functionName":{"name":"gt","nativeSrc":"14015:2:31","nodeType":"YulIdentifier","src":"14015:2:31"},"nativeSrc":"14015:41:31","nodeType":"YulFunctionCall","src":"14015:41:31"},"nativeSrc":"14012:128:31","nodeType":"YulIf","src":"14012:128:31"}]},"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"13593:553:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13635:6:31","nodeType":"YulTypedName","src":"13635:6:31","type":""},{"name":"end","nativeSrc":"13643:3:31","nodeType":"YulTypedName","src":"13643:3:31","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"13651:8:31","nodeType":"YulTypedName","src":"13651:8:31","type":""},{"name":"length","nativeSrc":"13661:6:31","nodeType":"YulTypedName","src":"13661:6:31","type":""}],"src":"13593:553:31"},{"body":{"nativeSrc":"14238:443:31","nodeType":"YulBlock","src":"14238:443:31","statements":[{"body":{"nativeSrc":"14284:83:31","nodeType":"YulBlock","src":"14284:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14286:77:31","nodeType":"YulIdentifier","src":"14286:77:31"},"nativeSrc":"14286:79:31","nodeType":"YulFunctionCall","src":"14286:79:31"},"nativeSrc":"14286:79:31","nodeType":"YulExpressionStatement","src":"14286:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14259:7:31","nodeType":"YulIdentifier","src":"14259:7:31"},{"name":"headStart","nativeSrc":"14268:9:31","nodeType":"YulIdentifier","src":"14268:9:31"}],"functionName":{"name":"sub","nativeSrc":"14255:3:31","nodeType":"YulIdentifier","src":"14255:3:31"},"nativeSrc":"14255:23:31","nodeType":"YulFunctionCall","src":"14255:23:31"},{"kind":"number","nativeSrc":"14280:2:31","nodeType":"YulLiteral","src":"14280:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14251:3:31","nodeType":"YulIdentifier","src":"14251:3:31"},"nativeSrc":"14251:32:31","nodeType":"YulFunctionCall","src":"14251:32:31"},"nativeSrc":"14248:119:31","nodeType":"YulIf","src":"14248:119:31"},{"nativeSrc":"14377:297:31","nodeType":"YulBlock","src":"14377:297:31","statements":[{"nativeSrc":"14392:45:31","nodeType":"YulVariableDeclaration","src":"14392:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14423:9:31","nodeType":"YulIdentifier","src":"14423:9:31"},{"kind":"number","nativeSrc":"14434:1:31","nodeType":"YulLiteral","src":"14434:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14419:3:31","nodeType":"YulIdentifier","src":"14419:3:31"},"nativeSrc":"14419:17:31","nodeType":"YulFunctionCall","src":"14419:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"14406:12:31","nodeType":"YulIdentifier","src":"14406:12:31"},"nativeSrc":"14406:31:31","nodeType":"YulFunctionCall","src":"14406:31:31"},"variables":[{"name":"offset","nativeSrc":"14396:6:31","nodeType":"YulTypedName","src":"14396:6:31","type":""}]},{"body":{"nativeSrc":"14484:83:31","nodeType":"YulBlock","src":"14484:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14486:77:31","nodeType":"YulIdentifier","src":"14486:77:31"},"nativeSrc":"14486:79:31","nodeType":"YulFunctionCall","src":"14486:79:31"},"nativeSrc":"14486:79:31","nodeType":"YulExpressionStatement","src":"14486:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14456:6:31","nodeType":"YulIdentifier","src":"14456:6:31"},{"kind":"number","nativeSrc":"14464:18:31","nodeType":"YulLiteral","src":"14464:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14453:2:31","nodeType":"YulIdentifier","src":"14453:2:31"},"nativeSrc":"14453:30:31","nodeType":"YulFunctionCall","src":"14453:30:31"},"nativeSrc":"14450:117:31","nodeType":"YulIf","src":"14450:117:31"},{"nativeSrc":"14581:83:31","nodeType":"YulAssignment","src":"14581:83:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14636:9:31","nodeType":"YulIdentifier","src":"14636:9:31"},{"name":"offset","nativeSrc":"14647:6:31","nodeType":"YulIdentifier","src":"14647:6:31"}],"functionName":{"name":"add","nativeSrc":"14632:3:31","nodeType":"YulIdentifier","src":"14632:3:31"},"nativeSrc":"14632:22:31","nodeType":"YulFunctionCall","src":"14632:22:31"},{"name":"dataEnd","nativeSrc":"14656:7:31","nodeType":"YulIdentifier","src":"14656:7:31"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"14599:32:31","nodeType":"YulIdentifier","src":"14599:32:31"},"nativeSrc":"14599:65:31","nodeType":"YulFunctionCall","src":"14599:65:31"},"variableNames":[{"name":"value0","nativeSrc":"14581:6:31","nodeType":"YulIdentifier","src":"14581:6:31"},{"name":"value1","nativeSrc":"14589:6:31","nodeType":"YulIdentifier","src":"14589:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nativeSrc":"14152:529:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14200:9:31","nodeType":"YulTypedName","src":"14200:9:31","type":""},{"name":"dataEnd","nativeSrc":"14211:7:31","nodeType":"YulTypedName","src":"14211:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14223:6:31","nodeType":"YulTypedName","src":"14223:6:31","type":""},{"name":"value1","nativeSrc":"14231:6:31","nodeType":"YulTypedName","src":"14231:6:31","type":""}],"src":"14152:529:31"},{"body":{"nativeSrc":"14715:152:31","nodeType":"YulBlock","src":"14715:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14732:1:31","nodeType":"YulLiteral","src":"14732:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14735:77:31","nodeType":"YulLiteral","src":"14735:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14725:6:31","nodeType":"YulIdentifier","src":"14725:6:31"},"nativeSrc":"14725:88:31","nodeType":"YulFunctionCall","src":"14725:88:31"},"nativeSrc":"14725:88:31","nodeType":"YulExpressionStatement","src":"14725:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14829:1:31","nodeType":"YulLiteral","src":"14829:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"14832:4:31","nodeType":"YulLiteral","src":"14832:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"14822:6:31","nodeType":"YulIdentifier","src":"14822:6:31"},"nativeSrc":"14822:15:31","nodeType":"YulFunctionCall","src":"14822:15:31"},"nativeSrc":"14822:15:31","nodeType":"YulExpressionStatement","src":"14822:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14853:1:31","nodeType":"YulLiteral","src":"14853:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14856:4:31","nodeType":"YulLiteral","src":"14856:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14846:6:31","nodeType":"YulIdentifier","src":"14846:6:31"},"nativeSrc":"14846:15:31","nodeType":"YulFunctionCall","src":"14846:15:31"},"nativeSrc":"14846:15:31","nodeType":"YulExpressionStatement","src":"14846:15:31"}]},"name":"panic_error_0x22","nativeSrc":"14687:180:31","nodeType":"YulFunctionDefinition","src":"14687:180:31"},{"body":{"nativeSrc":"14924:269:31","nodeType":"YulBlock","src":"14924:269:31","statements":[{"nativeSrc":"14934:22:31","nodeType":"YulAssignment","src":"14934:22:31","value":{"arguments":[{"name":"data","nativeSrc":"14948:4:31","nodeType":"YulIdentifier","src":"14948:4:31"},{"kind":"number","nativeSrc":"14954:1:31","nodeType":"YulLiteral","src":"14954:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"14944:3:31","nodeType":"YulIdentifier","src":"14944:3:31"},"nativeSrc":"14944:12:31","nodeType":"YulFunctionCall","src":"14944:12:31"},"variableNames":[{"name":"length","nativeSrc":"14934:6:31","nodeType":"YulIdentifier","src":"14934:6:31"}]},{"nativeSrc":"14965:38:31","nodeType":"YulVariableDeclaration","src":"14965:38:31","value":{"arguments":[{"name":"data","nativeSrc":"14995:4:31","nodeType":"YulIdentifier","src":"14995:4:31"},{"kind":"number","nativeSrc":"15001:1:31","nodeType":"YulLiteral","src":"15001:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"14991:3:31","nodeType":"YulIdentifier","src":"14991:3:31"},"nativeSrc":"14991:12:31","nodeType":"YulFunctionCall","src":"14991:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"14969:18:31","nodeType":"YulTypedName","src":"14969:18:31","type":""}]},{"body":{"nativeSrc":"15042:51:31","nodeType":"YulBlock","src":"15042:51:31","statements":[{"nativeSrc":"15056:27:31","nodeType":"YulAssignment","src":"15056:27:31","value":{"arguments":[{"name":"length","nativeSrc":"15070:6:31","nodeType":"YulIdentifier","src":"15070:6:31"},{"kind":"number","nativeSrc":"15078:4:31","nodeType":"YulLiteral","src":"15078:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"15066:3:31","nodeType":"YulIdentifier","src":"15066:3:31"},"nativeSrc":"15066:17:31","nodeType":"YulFunctionCall","src":"15066:17:31"},"variableNames":[{"name":"length","nativeSrc":"15056:6:31","nodeType":"YulIdentifier","src":"15056:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15022:18:31","nodeType":"YulIdentifier","src":"15022:18:31"}],"functionName":{"name":"iszero","nativeSrc":"15015:6:31","nodeType":"YulIdentifier","src":"15015:6:31"},"nativeSrc":"15015:26:31","nodeType":"YulFunctionCall","src":"15015:26:31"},"nativeSrc":"15012:81:31","nodeType":"YulIf","src":"15012:81:31"},{"body":{"nativeSrc":"15145:42:31","nodeType":"YulBlock","src":"15145:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"15159:16:31","nodeType":"YulIdentifier","src":"15159:16:31"},"nativeSrc":"15159:18:31","nodeType":"YulFunctionCall","src":"15159:18:31"},"nativeSrc":"15159:18:31","nodeType":"YulExpressionStatement","src":"15159:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"15109:18:31","nodeType":"YulIdentifier","src":"15109:18:31"},{"arguments":[{"name":"length","nativeSrc":"15132:6:31","nodeType":"YulIdentifier","src":"15132:6:31"},{"kind":"number","nativeSrc":"15140:2:31","nodeType":"YulLiteral","src":"15140:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"15129:2:31","nodeType":"YulIdentifier","src":"15129:2:31"},"nativeSrc":"15129:14:31","nodeType":"YulFunctionCall","src":"15129:14:31"}],"functionName":{"name":"eq","nativeSrc":"15106:2:31","nodeType":"YulIdentifier","src":"15106:2:31"},"nativeSrc":"15106:38:31","nodeType":"YulFunctionCall","src":"15106:38:31"},"nativeSrc":"15103:84:31","nodeType":"YulIf","src":"15103:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"14873:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"14908:4:31","nodeType":"YulTypedName","src":"14908:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14917:6:31","nodeType":"YulTypedName","src":"14917:6:31","type":""}],"src":"14873:320:31"},{"body":{"nativeSrc":"15353:288:31","nodeType":"YulBlock","src":"15353:288:31","statements":[{"nativeSrc":"15363:26:31","nodeType":"YulAssignment","src":"15363:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"15375:9:31","nodeType":"YulIdentifier","src":"15375:9:31"},{"kind":"number","nativeSrc":"15386:2:31","nodeType":"YulLiteral","src":"15386:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15371:3:31","nodeType":"YulIdentifier","src":"15371:3:31"},"nativeSrc":"15371:18:31","nodeType":"YulFunctionCall","src":"15371:18:31"},"variableNames":[{"name":"tail","nativeSrc":"15363:4:31","nodeType":"YulIdentifier","src":"15363:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15443:6:31","nodeType":"YulIdentifier","src":"15443:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"15456:9:31","nodeType":"YulIdentifier","src":"15456:9:31"},{"kind":"number","nativeSrc":"15467:1:31","nodeType":"YulLiteral","src":"15467:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15452:3:31","nodeType":"YulIdentifier","src":"15452:3:31"},"nativeSrc":"15452:17:31","nodeType":"YulFunctionCall","src":"15452:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15399:43:31","nodeType":"YulIdentifier","src":"15399:43:31"},"nativeSrc":"15399:71:31","nodeType":"YulFunctionCall","src":"15399:71:31"},"nativeSrc":"15399:71:31","nodeType":"YulExpressionStatement","src":"15399:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15524:6:31","nodeType":"YulIdentifier","src":"15524:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"15537:9:31","nodeType":"YulIdentifier","src":"15537:9:31"},{"kind":"number","nativeSrc":"15548:2:31","nodeType":"YulLiteral","src":"15548:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15533:3:31","nodeType":"YulIdentifier","src":"15533:3:31"},"nativeSrc":"15533:18:31","nodeType":"YulFunctionCall","src":"15533:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15480:43:31","nodeType":"YulIdentifier","src":"15480:43:31"},"nativeSrc":"15480:72:31","nodeType":"YulFunctionCall","src":"15480:72:31"},"nativeSrc":"15480:72:31","nodeType":"YulExpressionStatement","src":"15480:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15606:6:31","nodeType":"YulIdentifier","src":"15606:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"15619:9:31","nodeType":"YulIdentifier","src":"15619:9:31"},{"kind":"number","nativeSrc":"15630:2:31","nodeType":"YulLiteral","src":"15630:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15615:3:31","nodeType":"YulIdentifier","src":"15615:3:31"},"nativeSrc":"15615:18:31","nodeType":"YulFunctionCall","src":"15615:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15562:43:31","nodeType":"YulIdentifier","src":"15562:43:31"},"nativeSrc":"15562:72:31","nodeType":"YulFunctionCall","src":"15562:72:31"},"nativeSrc":"15562:72:31","nodeType":"YulExpressionStatement","src":"15562:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"15199:442:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15309:9:31","nodeType":"YulTypedName","src":"15309:9:31","type":""},{"name":"value2","nativeSrc":"15321:6:31","nodeType":"YulTypedName","src":"15321:6:31","type":""},{"name":"value1","nativeSrc":"15329:6:31","nodeType":"YulTypedName","src":"15329:6:31","type":""},{"name":"value0","nativeSrc":"15337:6:31","nodeType":"YulTypedName","src":"15337:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15348:4:31","nodeType":"YulTypedName","src":"15348:4:31","type":""}],"src":"15199:442:31"},{"body":{"nativeSrc":"15691:57:31","nodeType":"YulBlock","src":"15691:57:31","statements":[{"nativeSrc":"15701:41:31","nodeType":"YulAssignment","src":"15701:41:31","value":{"arguments":[{"name":"value","nativeSrc":"15716:5:31","nodeType":"YulIdentifier","src":"15716:5:31"},{"kind":"number","nativeSrc":"15723:18:31","nodeType":"YulLiteral","src":"15723:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"15712:3:31","nodeType":"YulIdentifier","src":"15712:3:31"},"nativeSrc":"15712:30:31","nodeType":"YulFunctionCall","src":"15712:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"15701:7:31","nodeType":"YulIdentifier","src":"15701:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"15647:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15673:5:31","nodeType":"YulTypedName","src":"15673:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"15683:7:31","nodeType":"YulTypedName","src":"15683:7:31","type":""}],"src":"15647:101:31"},{"body":{"nativeSrc":"15817:52:31","nodeType":"YulBlock","src":"15817:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15834:3:31","nodeType":"YulIdentifier","src":"15834:3:31"},{"arguments":[{"name":"value","nativeSrc":"15856:5:31","nodeType":"YulIdentifier","src":"15856:5:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"15839:16:31","nodeType":"YulIdentifier","src":"15839:16:31"},"nativeSrc":"15839:23:31","nodeType":"YulFunctionCall","src":"15839:23:31"}],"functionName":{"name":"mstore","nativeSrc":"15827:6:31","nodeType":"YulIdentifier","src":"15827:6:31"},"nativeSrc":"15827:36:31","nodeType":"YulFunctionCall","src":"15827:36:31"},"nativeSrc":"15827:36:31","nodeType":"YulExpressionStatement","src":"15827:36:31"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"15754:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15805:5:31","nodeType":"YulTypedName","src":"15805:5:31","type":""},{"name":"pos","nativeSrc":"15812:3:31","nodeType":"YulTypedName","src":"15812:3:31","type":""}],"src":"15754:115:31"},{"body":{"nativeSrc":"15971:122:31","nodeType":"YulBlock","src":"15971:122:31","statements":[{"nativeSrc":"15981:26:31","nodeType":"YulAssignment","src":"15981:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"15993:9:31","nodeType":"YulIdentifier","src":"15993:9:31"},{"kind":"number","nativeSrc":"16004:2:31","nodeType":"YulLiteral","src":"16004:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15989:3:31","nodeType":"YulIdentifier","src":"15989:3:31"},"nativeSrc":"15989:18:31","nodeType":"YulFunctionCall","src":"15989:18:31"},"variableNames":[{"name":"tail","nativeSrc":"15981:4:31","nodeType":"YulIdentifier","src":"15981:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16059:6:31","nodeType":"YulIdentifier","src":"16059:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"16072:9:31","nodeType":"YulIdentifier","src":"16072:9:31"},{"kind":"number","nativeSrc":"16083:1:31","nodeType":"YulLiteral","src":"16083:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16068:3:31","nodeType":"YulIdentifier","src":"16068:3:31"},"nativeSrc":"16068:17:31","nodeType":"YulFunctionCall","src":"16068:17:31"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"16017:41:31","nodeType":"YulIdentifier","src":"16017:41:31"},"nativeSrc":"16017:69:31","nodeType":"YulFunctionCall","src":"16017:69:31"},"nativeSrc":"16017:69:31","nodeType":"YulExpressionStatement","src":"16017:69:31"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"15875:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15943:9:31","nodeType":"YulTypedName","src":"15943:9:31","type":""},{"name":"value0","nativeSrc":"15955:6:31","nodeType":"YulTypedName","src":"15955:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15966:4:31","nodeType":"YulTypedName","src":"15966:4:31","type":""}],"src":"15875:218:31"},{"body":{"nativeSrc":"16205:76:31","nodeType":"YulBlock","src":"16205:76:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16227:6:31","nodeType":"YulIdentifier","src":"16227:6:31"},{"kind":"number","nativeSrc":"16235:1:31","nodeType":"YulLiteral","src":"16235:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16223:3:31","nodeType":"YulIdentifier","src":"16223:3:31"},"nativeSrc":"16223:14:31","nodeType":"YulFunctionCall","src":"16223:14:31"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"16239:34:31","nodeType":"YulLiteral","src":"16239:34:31","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"16216:6:31","nodeType":"YulIdentifier","src":"16216:6:31"},"nativeSrc":"16216:58:31","nodeType":"YulFunctionCall","src":"16216:58:31"},"nativeSrc":"16216:58:31","nodeType":"YulExpressionStatement","src":"16216:58:31"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"16099:182:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16197:6:31","nodeType":"YulTypedName","src":"16197:6:31","type":""}],"src":"16099:182:31"},{"body":{"nativeSrc":"16433:220:31","nodeType":"YulBlock","src":"16433:220:31","statements":[{"nativeSrc":"16443:74:31","nodeType":"YulAssignment","src":"16443:74:31","value":{"arguments":[{"name":"pos","nativeSrc":"16509:3:31","nodeType":"YulIdentifier","src":"16509:3:31"},{"kind":"number","nativeSrc":"16514:2:31","nodeType":"YulLiteral","src":"16514:2:31","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16450:58:31","nodeType":"YulIdentifier","src":"16450:58:31"},"nativeSrc":"16450:67:31","nodeType":"YulFunctionCall","src":"16450:67:31"},"variableNames":[{"name":"pos","nativeSrc":"16443:3:31","nodeType":"YulIdentifier","src":"16443:3:31"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16615:3:31","nodeType":"YulIdentifier","src":"16615:3:31"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"16526:88:31","nodeType":"YulIdentifier","src":"16526:88:31"},"nativeSrc":"16526:93:31","nodeType":"YulFunctionCall","src":"16526:93:31"},"nativeSrc":"16526:93:31","nodeType":"YulExpressionStatement","src":"16526:93:31"},{"nativeSrc":"16628:19:31","nodeType":"YulAssignment","src":"16628:19:31","value":{"arguments":[{"name":"pos","nativeSrc":"16639:3:31","nodeType":"YulIdentifier","src":"16639:3:31"},{"kind":"number","nativeSrc":"16644:2:31","nodeType":"YulLiteral","src":"16644:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16635:3:31","nodeType":"YulIdentifier","src":"16635:3:31"},"nativeSrc":"16635:12:31","nodeType":"YulFunctionCall","src":"16635:12:31"},"variableNames":[{"name":"end","nativeSrc":"16628:3:31","nodeType":"YulIdentifier","src":"16628:3:31"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"16287:366:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16421:3:31","nodeType":"YulTypedName","src":"16421:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16429:3:31","nodeType":"YulTypedName","src":"16429:3:31","type":""}],"src":"16287:366:31"},{"body":{"nativeSrc":"16830:248:31","nodeType":"YulBlock","src":"16830:248:31","statements":[{"nativeSrc":"16840:26:31","nodeType":"YulAssignment","src":"16840:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"16852:9:31","nodeType":"YulIdentifier","src":"16852:9:31"},{"kind":"number","nativeSrc":"16863:2:31","nodeType":"YulLiteral","src":"16863:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16848:3:31","nodeType":"YulIdentifier","src":"16848:3:31"},"nativeSrc":"16848:18:31","nodeType":"YulFunctionCall","src":"16848:18:31"},"variableNames":[{"name":"tail","nativeSrc":"16840:4:31","nodeType":"YulIdentifier","src":"16840:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16887:9:31","nodeType":"YulIdentifier","src":"16887:9:31"},{"kind":"number","nativeSrc":"16898:1:31","nodeType":"YulLiteral","src":"16898:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16883:3:31","nodeType":"YulIdentifier","src":"16883:3:31"},"nativeSrc":"16883:17:31","nodeType":"YulFunctionCall","src":"16883:17:31"},{"arguments":[{"name":"tail","nativeSrc":"16906:4:31","nodeType":"YulIdentifier","src":"16906:4:31"},{"name":"headStart","nativeSrc":"16912:9:31","nodeType":"YulIdentifier","src":"16912:9:31"}],"functionName":{"name":"sub","nativeSrc":"16902:3:31","nodeType":"YulIdentifier","src":"16902:3:31"},"nativeSrc":"16902:20:31","nodeType":"YulFunctionCall","src":"16902:20:31"}],"functionName":{"name":"mstore","nativeSrc":"16876:6:31","nodeType":"YulIdentifier","src":"16876:6:31"},"nativeSrc":"16876:47:31","nodeType":"YulFunctionCall","src":"16876:47:31"},"nativeSrc":"16876:47:31","nodeType":"YulExpressionStatement","src":"16876:47:31"},{"nativeSrc":"16932:139:31","nodeType":"YulAssignment","src":"16932:139:31","value":{"arguments":[{"name":"tail","nativeSrc":"17066:4:31","nodeType":"YulIdentifier","src":"17066:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"16940:124:31","nodeType":"YulIdentifier","src":"16940:124:31"},"nativeSrc":"16940:131:31","nodeType":"YulFunctionCall","src":"16940:131:31"},"variableNames":[{"name":"tail","nativeSrc":"16932:4:31","nodeType":"YulIdentifier","src":"16932:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16659:419:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16810:9:31","nodeType":"YulTypedName","src":"16810:9:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16825:4:31","nodeType":"YulTypedName","src":"16825:4:31","type":""}],"src":"16659:419:31"},{"body":{"nativeSrc":"17190:119:31","nodeType":"YulBlock","src":"17190:119:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17212:6:31","nodeType":"YulIdentifier","src":"17212:6:31"},{"kind":"number","nativeSrc":"17220:1:31","nodeType":"YulLiteral","src":"17220:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17208:3:31","nodeType":"YulIdentifier","src":"17208:3:31"},"nativeSrc":"17208:14:31","nodeType":"YulFunctionCall","src":"17208:14:31"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"17224:34:31","nodeType":"YulLiteral","src":"17224:34:31","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"17201:6:31","nodeType":"YulIdentifier","src":"17201:6:31"},"nativeSrc":"17201:58:31","nodeType":"YulFunctionCall","src":"17201:58:31"},"nativeSrc":"17201:58:31","nodeType":"YulExpressionStatement","src":"17201:58:31"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17280:6:31","nodeType":"YulIdentifier","src":"17280:6:31"},{"kind":"number","nativeSrc":"17288:2:31","nodeType":"YulLiteral","src":"17288:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17276:3:31","nodeType":"YulIdentifier","src":"17276:3:31"},"nativeSrc":"17276:15:31","nodeType":"YulFunctionCall","src":"17276:15:31"},{"hexValue":"646472657373","kind":"string","nativeSrc":"17293:8:31","nodeType":"YulLiteral","src":"17293:8:31","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"17269:6:31","nodeType":"YulIdentifier","src":"17269:6:31"},"nativeSrc":"17269:33:31","nodeType":"YulFunctionCall","src":"17269:33:31"},"nativeSrc":"17269:33:31","nodeType":"YulExpressionStatement","src":"17269:33:31"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"17084:225:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17182:6:31","nodeType":"YulTypedName","src":"17182:6:31","type":""}],"src":"17084:225:31"},{"body":{"nativeSrc":"17461:220:31","nodeType":"YulBlock","src":"17461:220:31","statements":[{"nativeSrc":"17471:74:31","nodeType":"YulAssignment","src":"17471:74:31","value":{"arguments":[{"name":"pos","nativeSrc":"17537:3:31","nodeType":"YulIdentifier","src":"17537:3:31"},{"kind":"number","nativeSrc":"17542:2:31","nodeType":"YulLiteral","src":"17542:2:31","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17478:58:31","nodeType":"YulIdentifier","src":"17478:58:31"},"nativeSrc":"17478:67:31","nodeType":"YulFunctionCall","src":"17478:67:31"},"variableNames":[{"name":"pos","nativeSrc":"17471:3:31","nodeType":"YulIdentifier","src":"17471:3:31"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17643:3:31","nodeType":"YulIdentifier","src":"17643:3:31"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"17554:88:31","nodeType":"YulIdentifier","src":"17554:88:31"},"nativeSrc":"17554:93:31","nodeType":"YulFunctionCall","src":"17554:93:31"},"nativeSrc":"17554:93:31","nodeType":"YulExpressionStatement","src":"17554:93:31"},{"nativeSrc":"17656:19:31","nodeType":"YulAssignment","src":"17656:19:31","value":{"arguments":[{"name":"pos","nativeSrc":"17667:3:31","nodeType":"YulIdentifier","src":"17667:3:31"},{"kind":"number","nativeSrc":"17672:2:31","nodeType":"YulLiteral","src":"17672:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17663:3:31","nodeType":"YulIdentifier","src":"17663:3:31"},"nativeSrc":"17663:12:31","nodeType":"YulFunctionCall","src":"17663:12:31"},"variableNames":[{"name":"end","nativeSrc":"17656:3:31","nodeType":"YulIdentifier","src":"17656:3:31"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"17315:366:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17449:3:31","nodeType":"YulTypedName","src":"17449:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17457:3:31","nodeType":"YulTypedName","src":"17457:3:31","type":""}],"src":"17315:366:31"},{"body":{"nativeSrc":"17858:248:31","nodeType":"YulBlock","src":"17858:248:31","statements":[{"nativeSrc":"17868:26:31","nodeType":"YulAssignment","src":"17868:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"17880:9:31","nodeType":"YulIdentifier","src":"17880:9:31"},{"kind":"number","nativeSrc":"17891:2:31","nodeType":"YulLiteral","src":"17891:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17876:3:31","nodeType":"YulIdentifier","src":"17876:3:31"},"nativeSrc":"17876:18:31","nodeType":"YulFunctionCall","src":"17876:18:31"},"variableNames":[{"name":"tail","nativeSrc":"17868:4:31","nodeType":"YulIdentifier","src":"17868:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17915:9:31","nodeType":"YulIdentifier","src":"17915:9:31"},{"kind":"number","nativeSrc":"17926:1:31","nodeType":"YulLiteral","src":"17926:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17911:3:31","nodeType":"YulIdentifier","src":"17911:3:31"},"nativeSrc":"17911:17:31","nodeType":"YulFunctionCall","src":"17911:17:31"},{"arguments":[{"name":"tail","nativeSrc":"17934:4:31","nodeType":"YulIdentifier","src":"17934:4:31"},{"name":"headStart","nativeSrc":"17940:9:31","nodeType":"YulIdentifier","src":"17940:9:31"}],"functionName":{"name":"sub","nativeSrc":"17930:3:31","nodeType":"YulIdentifier","src":"17930:3:31"},"nativeSrc":"17930:20:31","nodeType":"YulFunctionCall","src":"17930:20:31"}],"functionName":{"name":"mstore","nativeSrc":"17904:6:31","nodeType":"YulIdentifier","src":"17904:6:31"},"nativeSrc":"17904:47:31","nodeType":"YulFunctionCall","src":"17904:47:31"},"nativeSrc":"17904:47:31","nodeType":"YulExpressionStatement","src":"17904:47:31"},{"nativeSrc":"17960:139:31","nodeType":"YulAssignment","src":"17960:139:31","value":{"arguments":[{"name":"tail","nativeSrc":"18094:4:31","nodeType":"YulIdentifier","src":"18094:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"17968:124:31","nodeType":"YulIdentifier","src":"17968:124:31"},"nativeSrc":"17968:131:31","nodeType":"YulFunctionCall","src":"17968:131:31"},"variableNames":[{"name":"tail","nativeSrc":"17960:4:31","nodeType":"YulIdentifier","src":"17960:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17687:419:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17838:9:31","nodeType":"YulTypedName","src":"17838:9:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17853:4:31","nodeType":"YulTypedName","src":"17853:4:31","type":""}],"src":"17687:419:31"},{"body":{"nativeSrc":"18178:31:31","nodeType":"YulBlock","src":"18178:31:31","statements":[{"nativeSrc":"18189:13:31","nodeType":"YulAssignment","src":"18189:13:31","value":{"name":"len","nativeSrc":"18199:3:31","nodeType":"YulIdentifier","src":"18199:3:31"},"variableNames":[{"name":"length","nativeSrc":"18189:6:31","nodeType":"YulIdentifier","src":"18189:6:31"}]}]},"name":"array_length_t_string_calldata_ptr","nativeSrc":"18112:97:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18156:5:31","nodeType":"YulTypedName","src":"18156:5:31","type":""},{"name":"len","nativeSrc":"18163:3:31","nodeType":"YulTypedName","src":"18163:3:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18171:6:31","nodeType":"YulTypedName","src":"18171:6:31","type":""}],"src":"18112:97:31"},{"body":{"nativeSrc":"18269:87:31","nodeType":"YulBlock","src":"18269:87:31","statements":[{"nativeSrc":"18279:11:31","nodeType":"YulAssignment","src":"18279:11:31","value":{"name":"ptr","nativeSrc":"18287:3:31","nodeType":"YulIdentifier","src":"18287:3:31"},"variableNames":[{"name":"data","nativeSrc":"18279:4:31","nodeType":"YulIdentifier","src":"18279:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18307:1:31","nodeType":"YulLiteral","src":"18307:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"18310:3:31","nodeType":"YulIdentifier","src":"18310:3:31"}],"functionName":{"name":"mstore","nativeSrc":"18300:6:31","nodeType":"YulIdentifier","src":"18300:6:31"},"nativeSrc":"18300:14:31","nodeType":"YulFunctionCall","src":"18300:14:31"},"nativeSrc":"18300:14:31","nodeType":"YulExpressionStatement","src":"18300:14:31"},{"nativeSrc":"18323:26:31","nodeType":"YulAssignment","src":"18323:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"18341:1:31","nodeType":"YulLiteral","src":"18341:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"18344:4:31","nodeType":"YulLiteral","src":"18344:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"18331:9:31","nodeType":"YulIdentifier","src":"18331:9:31"},"nativeSrc":"18331:18:31","nodeType":"YulFunctionCall","src":"18331:18:31"},"variableNames":[{"name":"data","nativeSrc":"18323:4:31","nodeType":"YulIdentifier","src":"18323:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"18215:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"18256:3:31","nodeType":"YulTypedName","src":"18256:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"18264:4:31","nodeType":"YulTypedName","src":"18264:4:31","type":""}],"src":"18215:141:31"},{"body":{"nativeSrc":"18406:49:31","nodeType":"YulBlock","src":"18406:49:31","statements":[{"nativeSrc":"18416:33:31","nodeType":"YulAssignment","src":"18416:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18434:5:31","nodeType":"YulIdentifier","src":"18434:5:31"},{"kind":"number","nativeSrc":"18441:2:31","nodeType":"YulLiteral","src":"18441:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"18430:3:31","nodeType":"YulIdentifier","src":"18430:3:31"},"nativeSrc":"18430:14:31","nodeType":"YulFunctionCall","src":"18430:14:31"},{"kind":"number","nativeSrc":"18446:2:31","nodeType":"YulLiteral","src":"18446:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"18426:3:31","nodeType":"YulIdentifier","src":"18426:3:31"},"nativeSrc":"18426:23:31","nodeType":"YulFunctionCall","src":"18426:23:31"},"variableNames":[{"name":"result","nativeSrc":"18416:6:31","nodeType":"YulIdentifier","src":"18416:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"18362:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18389:5:31","nodeType":"YulTypedName","src":"18389:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18399:6:31","nodeType":"YulTypedName","src":"18399:6:31","type":""}],"src":"18362:93:31"},{"body":{"nativeSrc":"18514:54:31","nodeType":"YulBlock","src":"18514:54:31","statements":[{"nativeSrc":"18524:37:31","nodeType":"YulAssignment","src":"18524:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"18549:4:31","nodeType":"YulIdentifier","src":"18549:4:31"},{"name":"value","nativeSrc":"18555:5:31","nodeType":"YulIdentifier","src":"18555:5:31"}],"functionName":{"name":"shl","nativeSrc":"18545:3:31","nodeType":"YulIdentifier","src":"18545:3:31"},"nativeSrc":"18545:16:31","nodeType":"YulFunctionCall","src":"18545:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"18524:8:31","nodeType":"YulIdentifier","src":"18524:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"18461:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"18489:4:31","nodeType":"YulTypedName","src":"18489:4:31","type":""},{"name":"value","nativeSrc":"18495:5:31","nodeType":"YulTypedName","src":"18495:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"18505:8:31","nodeType":"YulTypedName","src":"18505:8:31","type":""}],"src":"18461:107:31"},{"body":{"nativeSrc":"18650:317:31","nodeType":"YulBlock","src":"18650:317:31","statements":[{"nativeSrc":"18660:35:31","nodeType":"YulVariableDeclaration","src":"18660:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"18681:10:31","nodeType":"YulIdentifier","src":"18681:10:31"},{"kind":"number","nativeSrc":"18693:1:31","nodeType":"YulLiteral","src":"18693:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"18677:3:31","nodeType":"YulIdentifier","src":"18677:3:31"},"nativeSrc":"18677:18:31","nodeType":"YulFunctionCall","src":"18677:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"18664:9:31","nodeType":"YulTypedName","src":"18664:9:31","type":""}]},{"nativeSrc":"18704:109:31","nodeType":"YulVariableDeclaration","src":"18704:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18735:9:31","nodeType":"YulIdentifier","src":"18735:9:31"},{"kind":"number","nativeSrc":"18746:66:31","nodeType":"YulLiteral","src":"18746:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18716:18:31","nodeType":"YulIdentifier","src":"18716:18:31"},"nativeSrc":"18716:97:31","nodeType":"YulFunctionCall","src":"18716:97:31"},"variables":[{"name":"mask","nativeSrc":"18708:4:31","nodeType":"YulTypedName","src":"18708:4:31","type":""}]},{"nativeSrc":"18822:51:31","nodeType":"YulAssignment","src":"18822:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18853:9:31","nodeType":"YulIdentifier","src":"18853:9:31"},{"name":"toInsert","nativeSrc":"18864:8:31","nodeType":"YulIdentifier","src":"18864:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18834:18:31","nodeType":"YulIdentifier","src":"18834:18:31"},"nativeSrc":"18834:39:31","nodeType":"YulFunctionCall","src":"18834:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"18822:8:31","nodeType":"YulIdentifier","src":"18822:8:31"}]},{"nativeSrc":"18882:30:31","nodeType":"YulAssignment","src":"18882:30:31","value":{"arguments":[{"name":"value","nativeSrc":"18895:5:31","nodeType":"YulIdentifier","src":"18895:5:31"},{"arguments":[{"name":"mask","nativeSrc":"18906:4:31","nodeType":"YulIdentifier","src":"18906:4:31"}],"functionName":{"name":"not","nativeSrc":"18902:3:31","nodeType":"YulIdentifier","src":"18902:3:31"},"nativeSrc":"18902:9:31","nodeType":"YulFunctionCall","src":"18902:9:31"}],"functionName":{"name":"and","nativeSrc":"18891:3:31","nodeType":"YulIdentifier","src":"18891:3:31"},"nativeSrc":"18891:21:31","nodeType":"YulFunctionCall","src":"18891:21:31"},"variableNames":[{"name":"value","nativeSrc":"18882:5:31","nodeType":"YulIdentifier","src":"18882:5:31"}]},{"nativeSrc":"18921:40:31","nodeType":"YulAssignment","src":"18921:40:31","value":{"arguments":[{"name":"value","nativeSrc":"18934:5:31","nodeType":"YulIdentifier","src":"18934:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"18945:8:31","nodeType":"YulIdentifier","src":"18945:8:31"},{"name":"mask","nativeSrc":"18955:4:31","nodeType":"YulIdentifier","src":"18955:4:31"}],"functionName":{"name":"and","nativeSrc":"18941:3:31","nodeType":"YulIdentifier","src":"18941:3:31"},"nativeSrc":"18941:19:31","nodeType":"YulFunctionCall","src":"18941:19:31"}],"functionName":{"name":"or","nativeSrc":"18931:2:31","nodeType":"YulIdentifier","src":"18931:2:31"},"nativeSrc":"18931:30:31","nodeType":"YulFunctionCall","src":"18931:30:31"},"variableNames":[{"name":"result","nativeSrc":"18921:6:31","nodeType":"YulIdentifier","src":"18921:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"18574:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18611:5:31","nodeType":"YulTypedName","src":"18611:5:31","type":""},{"name":"shiftBytes","nativeSrc":"18618:10:31","nodeType":"YulTypedName","src":"18618:10:31","type":""},{"name":"toInsert","nativeSrc":"18630:8:31","nodeType":"YulTypedName","src":"18630:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18643:6:31","nodeType":"YulTypedName","src":"18643:6:31","type":""}],"src":"18574:393:31"},{"body":{"nativeSrc":"19005:28:31","nodeType":"YulBlock","src":"19005:28:31","statements":[{"nativeSrc":"19015:12:31","nodeType":"YulAssignment","src":"19015:12:31","value":{"name":"value","nativeSrc":"19022:5:31","nodeType":"YulIdentifier","src":"19022:5:31"},"variableNames":[{"name":"ret","nativeSrc":"19015:3:31","nodeType":"YulIdentifier","src":"19015:3:31"}]}]},"name":"identity","nativeSrc":"18973:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18991:5:31","nodeType":"YulTypedName","src":"18991:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19001:3:31","nodeType":"YulTypedName","src":"19001:3:31","type":""}],"src":"18973:60:31"},{"body":{"nativeSrc":"19099:82:31","nodeType":"YulBlock","src":"19099:82:31","statements":[{"nativeSrc":"19109:66:31","nodeType":"YulAssignment","src":"19109:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19167:5:31","nodeType":"YulIdentifier","src":"19167:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19149:17:31","nodeType":"YulIdentifier","src":"19149:17:31"},"nativeSrc":"19149:24:31","nodeType":"YulFunctionCall","src":"19149:24:31"}],"functionName":{"name":"identity","nativeSrc":"19140:8:31","nodeType":"YulIdentifier","src":"19140:8:31"},"nativeSrc":"19140:34:31","nodeType":"YulFunctionCall","src":"19140:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19122:17:31","nodeType":"YulIdentifier","src":"19122:17:31"},"nativeSrc":"19122:53:31","nodeType":"YulFunctionCall","src":"19122:53:31"},"variableNames":[{"name":"converted","nativeSrc":"19109:9:31","nodeType":"YulIdentifier","src":"19109:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"19039:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19079:5:31","nodeType":"YulTypedName","src":"19079:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"19089:9:31","nodeType":"YulTypedName","src":"19089:9:31","type":""}],"src":"19039:142:31"},{"body":{"nativeSrc":"19234:28:31","nodeType":"YulBlock","src":"19234:28:31","statements":[{"nativeSrc":"19244:12:31","nodeType":"YulAssignment","src":"19244:12:31","value":{"name":"value","nativeSrc":"19251:5:31","nodeType":"YulIdentifier","src":"19251:5:31"},"variableNames":[{"name":"ret","nativeSrc":"19244:3:31","nodeType":"YulIdentifier","src":"19244:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"19187:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19220:5:31","nodeType":"YulTypedName","src":"19220:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19230:3:31","nodeType":"YulTypedName","src":"19230:3:31","type":""}],"src":"19187:75:31"},{"body":{"nativeSrc":"19344:193:31","nodeType":"YulBlock","src":"19344:193:31","statements":[{"nativeSrc":"19354:63:31","nodeType":"YulVariableDeclaration","src":"19354:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"19409:7:31","nodeType":"YulIdentifier","src":"19409:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"19378:30:31","nodeType":"YulIdentifier","src":"19378:30:31"},"nativeSrc":"19378:39:31","nodeType":"YulFunctionCall","src":"19378:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"19358:16:31","nodeType":"YulTypedName","src":"19358:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19433:4:31","nodeType":"YulIdentifier","src":"19433:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19473:4:31","nodeType":"YulIdentifier","src":"19473:4:31"}],"functionName":{"name":"sload","nativeSrc":"19467:5:31","nodeType":"YulIdentifier","src":"19467:5:31"},"nativeSrc":"19467:11:31","nodeType":"YulFunctionCall","src":"19467:11:31"},{"name":"offset","nativeSrc":"19480:6:31","nodeType":"YulIdentifier","src":"19480:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"19512:16:31","nodeType":"YulIdentifier","src":"19512:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"19488:23:31","nodeType":"YulIdentifier","src":"19488:23:31"},"nativeSrc":"19488:41:31","nodeType":"YulFunctionCall","src":"19488:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"19439:27:31","nodeType":"YulIdentifier","src":"19439:27:31"},"nativeSrc":"19439:91:31","nodeType":"YulFunctionCall","src":"19439:91:31"}],"functionName":{"name":"sstore","nativeSrc":"19426:6:31","nodeType":"YulIdentifier","src":"19426:6:31"},"nativeSrc":"19426:105:31","nodeType":"YulFunctionCall","src":"19426:105:31"},"nativeSrc":"19426:105:31","nodeType":"YulExpressionStatement","src":"19426:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19268:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19321:4:31","nodeType":"YulTypedName","src":"19321:4:31","type":""},{"name":"offset","nativeSrc":"19327:6:31","nodeType":"YulTypedName","src":"19327:6:31","type":""},{"name":"value_0","nativeSrc":"19335:7:31","nodeType":"YulTypedName","src":"19335:7:31","type":""}],"src":"19268:269:31"},{"body":{"nativeSrc":"19592:24:31","nodeType":"YulBlock","src":"19592:24:31","statements":[{"nativeSrc":"19602:8:31","nodeType":"YulAssignment","src":"19602:8:31","value":{"kind":"number","nativeSrc":"19609:1:31","nodeType":"YulLiteral","src":"19609:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"19602:3:31","nodeType":"YulIdentifier","src":"19602:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"19543:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"19588:3:31","nodeType":"YulTypedName","src":"19588:3:31","type":""}],"src":"19543:73:31"},{"body":{"nativeSrc":"19675:136:31","nodeType":"YulBlock","src":"19675:136:31","statements":[{"nativeSrc":"19685:46:31","nodeType":"YulVariableDeclaration","src":"19685:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"19699:30:31","nodeType":"YulIdentifier","src":"19699:30:31"},"nativeSrc":"19699:32:31","nodeType":"YulFunctionCall","src":"19699:32:31"},"variables":[{"name":"zero_0","nativeSrc":"19689:6:31","nodeType":"YulTypedName","src":"19689:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19784:4:31","nodeType":"YulIdentifier","src":"19784:4:31"},{"name":"offset","nativeSrc":"19790:6:31","nodeType":"YulIdentifier","src":"19790:6:31"},{"name":"zero_0","nativeSrc":"19798:6:31","nodeType":"YulIdentifier","src":"19798:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19740:43:31","nodeType":"YulIdentifier","src":"19740:43:31"},"nativeSrc":"19740:65:31","nodeType":"YulFunctionCall","src":"19740:65:31"},"nativeSrc":"19740:65:31","nodeType":"YulExpressionStatement","src":"19740:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"19622:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19661:4:31","nodeType":"YulTypedName","src":"19661:4:31","type":""},{"name":"offset","nativeSrc":"19667:6:31","nodeType":"YulTypedName","src":"19667:6:31","type":""}],"src":"19622:189:31"},{"body":{"nativeSrc":"19867:136:31","nodeType":"YulBlock","src":"19867:136:31","statements":[{"body":{"nativeSrc":"19934:63:31","nodeType":"YulBlock","src":"19934:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"19978:5:31","nodeType":"YulIdentifier","src":"19978:5:31"},{"kind":"number","nativeSrc":"19985:1:31","nodeType":"YulLiteral","src":"19985:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"19948:29:31","nodeType":"YulIdentifier","src":"19948:29:31"},"nativeSrc":"19948:39:31","nodeType":"YulFunctionCall","src":"19948:39:31"},"nativeSrc":"19948:39:31","nodeType":"YulExpressionStatement","src":"19948:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"19887:5:31","nodeType":"YulIdentifier","src":"19887:5:31"},{"name":"end","nativeSrc":"19894:3:31","nodeType":"YulIdentifier","src":"19894:3:31"}],"functionName":{"name":"lt","nativeSrc":"19884:2:31","nodeType":"YulIdentifier","src":"19884:2:31"},"nativeSrc":"19884:14:31","nodeType":"YulFunctionCall","src":"19884:14:31"},"nativeSrc":"19877:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"19899:26:31","nodeType":"YulBlock","src":"19899:26:31","statements":[{"nativeSrc":"19901:22:31","nodeType":"YulAssignment","src":"19901:22:31","value":{"arguments":[{"name":"start","nativeSrc":"19914:5:31","nodeType":"YulIdentifier","src":"19914:5:31"},{"kind":"number","nativeSrc":"19921:1:31","nodeType":"YulLiteral","src":"19921:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19910:3:31","nodeType":"YulIdentifier","src":"19910:3:31"},"nativeSrc":"19910:13:31","nodeType":"YulFunctionCall","src":"19910:13:31"},"variableNames":[{"name":"start","nativeSrc":"19901:5:31","nodeType":"YulIdentifier","src":"19901:5:31"}]}]},"pre":{"nativeSrc":"19881:2:31","nodeType":"YulBlock","src":"19881:2:31","statements":[]},"src":"19877:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"19817:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19855:5:31","nodeType":"YulTypedName","src":"19855:5:31","type":""},{"name":"end","nativeSrc":"19862:3:31","nodeType":"YulTypedName","src":"19862:3:31","type":""}],"src":"19817:186:31"},{"body":{"nativeSrc":"20088:464:31","nodeType":"YulBlock","src":"20088:464:31","statements":[{"body":{"nativeSrc":"20114:431:31","nodeType":"YulBlock","src":"20114:431:31","statements":[{"nativeSrc":"20128:54:31","nodeType":"YulVariableDeclaration","src":"20128:54:31","value":{"arguments":[{"name":"array","nativeSrc":"20176:5:31","nodeType":"YulIdentifier","src":"20176:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20144:31:31","nodeType":"YulIdentifier","src":"20144:31:31"},"nativeSrc":"20144:38:31","nodeType":"YulFunctionCall","src":"20144:38:31"},"variables":[{"name":"dataArea","nativeSrc":"20132:8:31","nodeType":"YulTypedName","src":"20132:8:31","type":""}]},{"nativeSrc":"20195:63:31","nodeType":"YulVariableDeclaration","src":"20195:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"20218:8:31","nodeType":"YulIdentifier","src":"20218:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"20246:10:31","nodeType":"YulIdentifier","src":"20246:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20228:17:31","nodeType":"YulIdentifier","src":"20228:17:31"},"nativeSrc":"20228:29:31","nodeType":"YulFunctionCall","src":"20228:29:31"}],"functionName":{"name":"add","nativeSrc":"20214:3:31","nodeType":"YulIdentifier","src":"20214:3:31"},"nativeSrc":"20214:44:31","nodeType":"YulFunctionCall","src":"20214:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"20199:11:31","nodeType":"YulTypedName","src":"20199:11:31","type":""}]},{"body":{"nativeSrc":"20415:27:31","nodeType":"YulBlock","src":"20415:27:31","statements":[{"nativeSrc":"20417:23:31","nodeType":"YulAssignment","src":"20417:23:31","value":{"name":"dataArea","nativeSrc":"20432:8:31","nodeType":"YulIdentifier","src":"20432:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"20417:11:31","nodeType":"YulIdentifier","src":"20417:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"20399:10:31","nodeType":"YulIdentifier","src":"20399:10:31"},{"kind":"number","nativeSrc":"20411:2:31","nodeType":"YulLiteral","src":"20411:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20396:2:31","nodeType":"YulIdentifier","src":"20396:2:31"},"nativeSrc":"20396:18:31","nodeType":"YulFunctionCall","src":"20396:18:31"},"nativeSrc":"20393:49:31","nodeType":"YulIf","src":"20393:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"20484:11:31","nodeType":"YulIdentifier","src":"20484:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"20501:8:31","nodeType":"YulIdentifier","src":"20501:8:31"},{"arguments":[{"name":"len","nativeSrc":"20529:3:31","nodeType":"YulIdentifier","src":"20529:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20511:17:31","nodeType":"YulIdentifier","src":"20511:17:31"},"nativeSrc":"20511:22:31","nodeType":"YulFunctionCall","src":"20511:22:31"}],"functionName":{"name":"add","nativeSrc":"20497:3:31","nodeType":"YulIdentifier","src":"20497:3:31"},"nativeSrc":"20497:37:31","nodeType":"YulFunctionCall","src":"20497:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"20455:28:31","nodeType":"YulIdentifier","src":"20455:28:31"},"nativeSrc":"20455:80:31","nodeType":"YulFunctionCall","src":"20455:80:31"},"nativeSrc":"20455:80:31","nodeType":"YulExpressionStatement","src":"20455:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"20105:3:31","nodeType":"YulIdentifier","src":"20105:3:31"},{"kind":"number","nativeSrc":"20110:2:31","nodeType":"YulLiteral","src":"20110:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"20102:2:31","nodeType":"YulIdentifier","src":"20102:2:31"},"nativeSrc":"20102:11:31","nodeType":"YulFunctionCall","src":"20102:11:31"},"nativeSrc":"20099:446:31","nodeType":"YulIf","src":"20099:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"20009:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"20064:5:31","nodeType":"YulTypedName","src":"20064:5:31","type":""},{"name":"len","nativeSrc":"20071:3:31","nodeType":"YulTypedName","src":"20071:3:31","type":""},{"name":"startIndex","nativeSrc":"20076:10:31","nodeType":"YulTypedName","src":"20076:10:31","type":""}],"src":"20009:543:31"},{"body":{"nativeSrc":"20621:54:31","nodeType":"YulBlock","src":"20621:54:31","statements":[{"nativeSrc":"20631:37:31","nodeType":"YulAssignment","src":"20631:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"20656:4:31","nodeType":"YulIdentifier","src":"20656:4:31"},{"name":"value","nativeSrc":"20662:5:31","nodeType":"YulIdentifier","src":"20662:5:31"}],"functionName":{"name":"shr","nativeSrc":"20652:3:31","nodeType":"YulIdentifier","src":"20652:3:31"},"nativeSrc":"20652:16:31","nodeType":"YulFunctionCall","src":"20652:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"20631:8:31","nodeType":"YulIdentifier","src":"20631:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"20558:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"20596:4:31","nodeType":"YulTypedName","src":"20596:4:31","type":""},{"name":"value","nativeSrc":"20602:5:31","nodeType":"YulTypedName","src":"20602:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"20612:8:31","nodeType":"YulTypedName","src":"20612:8:31","type":""}],"src":"20558:117:31"},{"body":{"nativeSrc":"20732:118:31","nodeType":"YulBlock","src":"20732:118:31","statements":[{"nativeSrc":"20742:68:31","nodeType":"YulVariableDeclaration","src":"20742:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20791:1:31","nodeType":"YulLiteral","src":"20791:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"20794:5:31","nodeType":"YulIdentifier","src":"20794:5:31"}],"functionName":{"name":"mul","nativeSrc":"20787:3:31","nodeType":"YulIdentifier","src":"20787:3:31"},"nativeSrc":"20787:13:31","nodeType":"YulFunctionCall","src":"20787:13:31"},{"arguments":[{"kind":"number","nativeSrc":"20806:1:31","nodeType":"YulLiteral","src":"20806:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20802:3:31","nodeType":"YulIdentifier","src":"20802:3:31"},"nativeSrc":"20802:6:31","nodeType":"YulFunctionCall","src":"20802:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"20758:28:31","nodeType":"YulIdentifier","src":"20758:28:31"},"nativeSrc":"20758:51:31","nodeType":"YulFunctionCall","src":"20758:51:31"}],"functionName":{"name":"not","nativeSrc":"20754:3:31","nodeType":"YulIdentifier","src":"20754:3:31"},"nativeSrc":"20754:56:31","nodeType":"YulFunctionCall","src":"20754:56:31"},"variables":[{"name":"mask","nativeSrc":"20746:4:31","nodeType":"YulTypedName","src":"20746:4:31","type":""}]},{"nativeSrc":"20819:25:31","nodeType":"YulAssignment","src":"20819:25:31","value":{"arguments":[{"name":"data","nativeSrc":"20833:4:31","nodeType":"YulIdentifier","src":"20833:4:31"},{"name":"mask","nativeSrc":"20839:4:31","nodeType":"YulIdentifier","src":"20839:4:31"}],"functionName":{"name":"and","nativeSrc":"20829:3:31","nodeType":"YulIdentifier","src":"20829:3:31"},"nativeSrc":"20829:15:31","nodeType":"YulFunctionCall","src":"20829:15:31"},"variableNames":[{"name":"result","nativeSrc":"20819:6:31","nodeType":"YulIdentifier","src":"20819:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"20681:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20709:4:31","nodeType":"YulTypedName","src":"20709:4:31","type":""},{"name":"bytes","nativeSrc":"20715:5:31","nodeType":"YulTypedName","src":"20715:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"20725:6:31","nodeType":"YulTypedName","src":"20725:6:31","type":""}],"src":"20681:169:31"},{"body":{"nativeSrc":"20936:214:31","nodeType":"YulBlock","src":"20936:214:31","statements":[{"nativeSrc":"21069:37:31","nodeType":"YulAssignment","src":"21069:37:31","value":{"arguments":[{"name":"data","nativeSrc":"21096:4:31","nodeType":"YulIdentifier","src":"21096:4:31"},{"name":"len","nativeSrc":"21102:3:31","nodeType":"YulIdentifier","src":"21102:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"21077:18:31","nodeType":"YulIdentifier","src":"21077:18:31"},"nativeSrc":"21077:29:31","nodeType":"YulFunctionCall","src":"21077:29:31"},"variableNames":[{"name":"data","nativeSrc":"21069:4:31","nodeType":"YulIdentifier","src":"21069:4:31"}]},{"nativeSrc":"21115:29:31","nodeType":"YulAssignment","src":"21115:29:31","value":{"arguments":[{"name":"data","nativeSrc":"21126:4:31","nodeType":"YulIdentifier","src":"21126:4:31"},{"arguments":[{"kind":"number","nativeSrc":"21136:1:31","nodeType":"YulLiteral","src":"21136:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"21139:3:31","nodeType":"YulIdentifier","src":"21139:3:31"}],"functionName":{"name":"mul","nativeSrc":"21132:3:31","nodeType":"YulIdentifier","src":"21132:3:31"},"nativeSrc":"21132:11:31","nodeType":"YulFunctionCall","src":"21132:11:31"}],"functionName":{"name":"or","nativeSrc":"21123:2:31","nodeType":"YulIdentifier","src":"21123:2:31"},"nativeSrc":"21123:21:31","nodeType":"YulFunctionCall","src":"21123:21:31"},"variableNames":[{"name":"used","nativeSrc":"21115:4:31","nodeType":"YulIdentifier","src":"21115:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20855:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20917:4:31","nodeType":"YulTypedName","src":"20917:4:31","type":""},{"name":"len","nativeSrc":"20923:3:31","nodeType":"YulTypedName","src":"20923:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"20931:4:31","nodeType":"YulTypedName","src":"20931:4:31","type":""}],"src":"20855:295:31"},{"body":{"nativeSrc":"21254:1304:31","nodeType":"YulBlock","src":"21254:1304:31","statements":[{"nativeSrc":"21265:58:31","nodeType":"YulVariableDeclaration","src":"21265:58:31","value":{"arguments":[{"name":"src","nativeSrc":"21314:3:31","nodeType":"YulIdentifier","src":"21314:3:31"},{"name":"len","nativeSrc":"21319:3:31","nodeType":"YulIdentifier","src":"21319:3:31"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nativeSrc":"21279:34:31","nodeType":"YulIdentifier","src":"21279:34:31"},"nativeSrc":"21279:44:31","nodeType":"YulFunctionCall","src":"21279:44:31"},"variables":[{"name":"newLen","nativeSrc":"21269:6:31","nodeType":"YulTypedName","src":"21269:6:31","type":""}]},{"body":{"nativeSrc":"21408:22:31","nodeType":"YulBlock","src":"21408:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"21410:16:31","nodeType":"YulIdentifier","src":"21410:16:31"},"nativeSrc":"21410:18:31","nodeType":"YulFunctionCall","src":"21410:18:31"},"nativeSrc":"21410:18:31","nodeType":"YulExpressionStatement","src":"21410:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"21380:6:31","nodeType":"YulIdentifier","src":"21380:6:31"},{"kind":"number","nativeSrc":"21388:18:31","nodeType":"YulLiteral","src":"21388:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21377:2:31","nodeType":"YulIdentifier","src":"21377:2:31"},"nativeSrc":"21377:30:31","nodeType":"YulFunctionCall","src":"21377:30:31"},"nativeSrc":"21374:56:31","nodeType":"YulIf","src":"21374:56:31"},{"nativeSrc":"21440:52:31","nodeType":"YulVariableDeclaration","src":"21440:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"21486:4:31","nodeType":"YulIdentifier","src":"21486:4:31"}],"functionName":{"name":"sload","nativeSrc":"21480:5:31","nodeType":"YulIdentifier","src":"21480:5:31"},"nativeSrc":"21480:11:31","nodeType":"YulFunctionCall","src":"21480:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"21454:25:31","nodeType":"YulIdentifier","src":"21454:25:31"},"nativeSrc":"21454:38:31","nodeType":"YulFunctionCall","src":"21454:38:31"},"variables":[{"name":"oldLen","nativeSrc":"21444:6:31","nodeType":"YulTypedName","src":"21444:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21585:4:31","nodeType":"YulIdentifier","src":"21585:4:31"},{"name":"oldLen","nativeSrc":"21591:6:31","nodeType":"YulIdentifier","src":"21591:6:31"},{"name":"newLen","nativeSrc":"21599:6:31","nodeType":"YulIdentifier","src":"21599:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"21539:45:31","nodeType":"YulIdentifier","src":"21539:45:31"},"nativeSrc":"21539:67:31","nodeType":"YulFunctionCall","src":"21539:67:31"},"nativeSrc":"21539:67:31","nodeType":"YulExpressionStatement","src":"21539:67:31"},{"nativeSrc":"21616:18:31","nodeType":"YulVariableDeclaration","src":"21616:18:31","value":{"kind":"number","nativeSrc":"21633:1:31","nodeType":"YulLiteral","src":"21633:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"21620:9:31","nodeType":"YulTypedName","src":"21620:9:31","type":""}]},{"cases":[{"body":{"nativeSrc":"21681:625:31","nodeType":"YulBlock","src":"21681:625:31","statements":[{"nativeSrc":"21695:37:31","nodeType":"YulVariableDeclaration","src":"21695:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"21714:6:31","nodeType":"YulIdentifier","src":"21714:6:31"},{"arguments":[{"kind":"number","nativeSrc":"21726:4:31","nodeType":"YulLiteral","src":"21726:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"21722:3:31","nodeType":"YulIdentifier","src":"21722:3:31"},"nativeSrc":"21722:9:31","nodeType":"YulFunctionCall","src":"21722:9:31"}],"functionName":{"name":"and","nativeSrc":"21710:3:31","nodeType":"YulIdentifier","src":"21710:3:31"},"nativeSrc":"21710:22:31","nodeType":"YulFunctionCall","src":"21710:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"21699:7:31","nodeType":"YulTypedName","src":"21699:7:31","type":""}]},{"nativeSrc":"21746:51:31","nodeType":"YulVariableDeclaration","src":"21746:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"21792:4:31","nodeType":"YulIdentifier","src":"21792:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"21760:31:31","nodeType":"YulIdentifier","src":"21760:31:31"},"nativeSrc":"21760:37:31","nodeType":"YulFunctionCall","src":"21760:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"21750:6:31","nodeType":"YulTypedName","src":"21750:6:31","type":""}]},{"nativeSrc":"21810:10:31","nodeType":"YulVariableDeclaration","src":"21810:10:31","value":{"kind":"number","nativeSrc":"21819:1:31","nodeType":"YulLiteral","src":"21819:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"21814:1:31","nodeType":"YulTypedName","src":"21814:1:31","type":""}]},{"body":{"nativeSrc":"21878:170:31","nodeType":"YulBlock","src":"21878:170:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21903:6:31","nodeType":"YulIdentifier","src":"21903:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21928:3:31","nodeType":"YulIdentifier","src":"21928:3:31"},{"name":"srcOffset","nativeSrc":"21933:9:31","nodeType":"YulIdentifier","src":"21933:9:31"}],"functionName":{"name":"add","nativeSrc":"21924:3:31","nodeType":"YulIdentifier","src":"21924:3:31"},"nativeSrc":"21924:19:31","nodeType":"YulFunctionCall","src":"21924:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"21911:12:31","nodeType":"YulIdentifier","src":"21911:12:31"},"nativeSrc":"21911:33:31","nodeType":"YulFunctionCall","src":"21911:33:31"}],"functionName":{"name":"sstore","nativeSrc":"21896:6:31","nodeType":"YulIdentifier","src":"21896:6:31"},"nativeSrc":"21896:49:31","nodeType":"YulFunctionCall","src":"21896:49:31"},"nativeSrc":"21896:49:31","nodeType":"YulExpressionStatement","src":"21896:49:31"},{"nativeSrc":"21962:24:31","nodeType":"YulAssignment","src":"21962:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"21976:6:31","nodeType":"YulIdentifier","src":"21976:6:31"},{"kind":"number","nativeSrc":"21984:1:31","nodeType":"YulLiteral","src":"21984:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21972:3:31","nodeType":"YulIdentifier","src":"21972:3:31"},"nativeSrc":"21972:14:31","nodeType":"YulFunctionCall","src":"21972:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"21962:6:31","nodeType":"YulIdentifier","src":"21962:6:31"}]},{"nativeSrc":"22003:31:31","nodeType":"YulAssignment","src":"22003:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"22020:9:31","nodeType":"YulIdentifier","src":"22020:9:31"},{"kind":"number","nativeSrc":"22031:2:31","nodeType":"YulLiteral","src":"22031:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22016:3:31","nodeType":"YulIdentifier","src":"22016:3:31"},"nativeSrc":"22016:18:31","nodeType":"YulFunctionCall","src":"22016:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"22003:9:31","nodeType":"YulIdentifier","src":"22003:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21844:1:31","nodeType":"YulIdentifier","src":"21844:1:31"},{"name":"loopEnd","nativeSrc":"21847:7:31","nodeType":"YulIdentifier","src":"21847:7:31"}],"functionName":{"name":"lt","nativeSrc":"21841:2:31","nodeType":"YulIdentifier","src":"21841:2:31"},"nativeSrc":"21841:14:31","nodeType":"YulFunctionCall","src":"21841:14:31"},"nativeSrc":"21833:215:31","nodeType":"YulForLoop","post":{"nativeSrc":"21856:21:31","nodeType":"YulBlock","src":"21856:21:31","statements":[{"nativeSrc":"21858:17:31","nodeType":"YulAssignment","src":"21858:17:31","value":{"arguments":[{"name":"i","nativeSrc":"21867:1:31","nodeType":"YulIdentifier","src":"21867:1:31"},{"kind":"number","nativeSrc":"21870:4:31","nodeType":"YulLiteral","src":"21870:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21863:3:31","nodeType":"YulIdentifier","src":"21863:3:31"},"nativeSrc":"21863:12:31","nodeType":"YulFunctionCall","src":"21863:12:31"},"variableNames":[{"name":"i","nativeSrc":"21858:1:31","nodeType":"YulIdentifier","src":"21858:1:31"}]}]},"pre":{"nativeSrc":"21837:3:31","nodeType":"YulBlock","src":"21837:3:31","statements":[]},"src":"21833:215:31"},{"body":{"nativeSrc":"22084:163:31","nodeType":"YulBlock","src":"22084:163:31","statements":[{"nativeSrc":"22102:50:31","nodeType":"YulVariableDeclaration","src":"22102:50:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22136:3:31","nodeType":"YulIdentifier","src":"22136:3:31"},{"name":"srcOffset","nativeSrc":"22141:9:31","nodeType":"YulIdentifier","src":"22141:9:31"}],"functionName":{"name":"add","nativeSrc":"22132:3:31","nodeType":"YulIdentifier","src":"22132:3:31"},"nativeSrc":"22132:19:31","nodeType":"YulFunctionCall","src":"22132:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"22119:12:31","nodeType":"YulIdentifier","src":"22119:12:31"},"nativeSrc":"22119:33:31","nodeType":"YulFunctionCall","src":"22119:33:31"},"variables":[{"name":"lastValue","nativeSrc":"22106:9:31","nodeType":"YulTypedName","src":"22106:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"22176:6:31","nodeType":"YulIdentifier","src":"22176:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"22203:9:31","nodeType":"YulIdentifier","src":"22203:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"22218:6:31","nodeType":"YulIdentifier","src":"22218:6:31"},{"kind":"number","nativeSrc":"22226:4:31","nodeType":"YulLiteral","src":"22226:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"22214:3:31","nodeType":"YulIdentifier","src":"22214:3:31"},"nativeSrc":"22214:17:31","nodeType":"YulFunctionCall","src":"22214:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"22184:18:31","nodeType":"YulIdentifier","src":"22184:18:31"},"nativeSrc":"22184:48:31","nodeType":"YulFunctionCall","src":"22184:48:31"}],"functionName":{"name":"sstore","nativeSrc":"22169:6:31","nodeType":"YulIdentifier","src":"22169:6:31"},"nativeSrc":"22169:64:31","nodeType":"YulFunctionCall","src":"22169:64:31"},"nativeSrc":"22169:64:31","nodeType":"YulExpressionStatement","src":"22169:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"22067:7:31","nodeType":"YulIdentifier","src":"22067:7:31"},{"name":"newLen","nativeSrc":"22076:6:31","nodeType":"YulIdentifier","src":"22076:6:31"}],"functionName":{"name":"lt","nativeSrc":"22064:2:31","nodeType":"YulIdentifier","src":"22064:2:31"},"nativeSrc":"22064:19:31","nodeType":"YulFunctionCall","src":"22064:19:31"},"nativeSrc":"22061:186:31","nodeType":"YulIf","src":"22061:186:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22267:4:31","nodeType":"YulIdentifier","src":"22267:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"22281:6:31","nodeType":"YulIdentifier","src":"22281:6:31"},{"kind":"number","nativeSrc":"22289:1:31","nodeType":"YulLiteral","src":"22289:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"22277:3:31","nodeType":"YulIdentifier","src":"22277:3:31"},"nativeSrc":"22277:14:31","nodeType":"YulFunctionCall","src":"22277:14:31"},{"kind":"number","nativeSrc":"22293:1:31","nodeType":"YulLiteral","src":"22293:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22273:3:31","nodeType":"YulIdentifier","src":"22273:3:31"},"nativeSrc":"22273:22:31","nodeType":"YulFunctionCall","src":"22273:22:31"}],"functionName":{"name":"sstore","nativeSrc":"22260:6:31","nodeType":"YulIdentifier","src":"22260:6:31"},"nativeSrc":"22260:36:31","nodeType":"YulFunctionCall","src":"22260:36:31"},"nativeSrc":"22260:36:31","nodeType":"YulExpressionStatement","src":"22260:36:31"}]},"nativeSrc":"21674:632:31","nodeType":"YulCase","src":"21674:632:31","value":{"kind":"number","nativeSrc":"21679:1:31","nodeType":"YulLiteral","src":"21679:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"22323:229:31","nodeType":"YulBlock","src":"22323:229:31","statements":[{"nativeSrc":"22337:14:31","nodeType":"YulVariableDeclaration","src":"22337:14:31","value":{"kind":"number","nativeSrc":"22350:1:31","nodeType":"YulLiteral","src":"22350:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"22341:5:31","nodeType":"YulTypedName","src":"22341:5:31","type":""}]},{"body":{"nativeSrc":"22374:74:31","nodeType":"YulBlock","src":"22374:74:31","statements":[{"nativeSrc":"22392:42:31","nodeType":"YulAssignment","src":"22392:42:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22418:3:31","nodeType":"YulIdentifier","src":"22418:3:31"},{"name":"srcOffset","nativeSrc":"22423:9:31","nodeType":"YulIdentifier","src":"22423:9:31"}],"functionName":{"name":"add","nativeSrc":"22414:3:31","nodeType":"YulIdentifier","src":"22414:3:31"},"nativeSrc":"22414:19:31","nodeType":"YulFunctionCall","src":"22414:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"22401:12:31","nodeType":"YulIdentifier","src":"22401:12:31"},"nativeSrc":"22401:33:31","nodeType":"YulFunctionCall","src":"22401:33:31"},"variableNames":[{"name":"value","nativeSrc":"22392:5:31","nodeType":"YulIdentifier","src":"22392:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"22367:6:31","nodeType":"YulIdentifier","src":"22367:6:31"},"nativeSrc":"22364:84:31","nodeType":"YulIf","src":"22364:84:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22468:4:31","nodeType":"YulIdentifier","src":"22468:4:31"},{"arguments":[{"name":"value","nativeSrc":"22527:5:31","nodeType":"YulIdentifier","src":"22527:5:31"},{"name":"newLen","nativeSrc":"22534:6:31","nodeType":"YulIdentifier","src":"22534:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"22474:52:31","nodeType":"YulIdentifier","src":"22474:52:31"},"nativeSrc":"22474:67:31","nodeType":"YulFunctionCall","src":"22474:67:31"}],"functionName":{"name":"sstore","nativeSrc":"22461:6:31","nodeType":"YulIdentifier","src":"22461:6:31"},"nativeSrc":"22461:81:31","nodeType":"YulFunctionCall","src":"22461:81:31"},"nativeSrc":"22461:81:31","nodeType":"YulExpressionStatement","src":"22461:81:31"}]},"nativeSrc":"22315:237:31","nodeType":"YulCase","src":"22315:237:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"21654:6:31","nodeType":"YulIdentifier","src":"21654:6:31"},{"kind":"number","nativeSrc":"21662:2:31","nodeType":"YulLiteral","src":"21662:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"21651:2:31","nodeType":"YulIdentifier","src":"21651:2:31"},"nativeSrc":"21651:14:31","nodeType":"YulFunctionCall","src":"21651:14:31"},"nativeSrc":"21644:908:31","nodeType":"YulSwitch","src":"21644:908:31"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nativeSrc":"21155:1403:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"21238:4:31","nodeType":"YulTypedName","src":"21238:4:31","type":""},{"name":"src","nativeSrc":"21244:3:31","nodeType":"YulTypedName","src":"21244:3:31","type":""},{"name":"len","nativeSrc":"21249:3:31","nodeType":"YulTypedName","src":"21249:3:31","type":""}],"src":"21155:1403:31"},{"body":{"nativeSrc":"22617:32:31","nodeType":"YulBlock","src":"22617:32:31","statements":[{"nativeSrc":"22627:16:31","nodeType":"YulAssignment","src":"22627:16:31","value":{"name":"value","nativeSrc":"22638:5:31","nodeType":"YulIdentifier","src":"22638:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"22627:7:31","nodeType":"YulIdentifier","src":"22627:7:31"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"22564:85:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22599:5:31","nodeType":"YulTypedName","src":"22599:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"22609:7:31","nodeType":"YulTypedName","src":"22609:7:31","type":""}],"src":"22564:85:31"},{"body":{"nativeSrc":"22722:89:31","nodeType":"YulBlock","src":"22722:89:31","statements":[{"nativeSrc":"22732:73:31","nodeType":"YulAssignment","src":"22732:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22797:5:31","nodeType":"YulIdentifier","src":"22797:5:31"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"22771:25:31","nodeType":"YulIdentifier","src":"22771:25:31"},"nativeSrc":"22771:32:31","nodeType":"YulFunctionCall","src":"22771:32:31"}],"functionName":{"name":"identity","nativeSrc":"22762:8:31","nodeType":"YulIdentifier","src":"22762:8:31"},"nativeSrc":"22762:42:31","nodeType":"YulFunctionCall","src":"22762:42:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"22745:16:31","nodeType":"YulIdentifier","src":"22745:16:31"},"nativeSrc":"22745:60:31","nodeType":"YulFunctionCall","src":"22745:60:31"},"variableNames":[{"name":"converted","nativeSrc":"22732:9:31","nodeType":"YulIdentifier","src":"22732:9:31"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"22655:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22702:5:31","nodeType":"YulTypedName","src":"22702:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"22712:9:31","nodeType":"YulTypedName","src":"22712:9:31","type":""}],"src":"22655:156:31"},{"body":{"nativeSrc":"22889:73:31","nodeType":"YulBlock","src":"22889:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22906:3:31","nodeType":"YulIdentifier","src":"22906:3:31"},{"arguments":[{"name":"value","nativeSrc":"22949:5:31","nodeType":"YulIdentifier","src":"22949:5:31"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"22911:37:31","nodeType":"YulIdentifier","src":"22911:37:31"},"nativeSrc":"22911:44:31","nodeType":"YulFunctionCall","src":"22911:44:31"}],"functionName":{"name":"mstore","nativeSrc":"22899:6:31","nodeType":"YulIdentifier","src":"22899:6:31"},"nativeSrc":"22899:57:31","nodeType":"YulFunctionCall","src":"22899:57:31"},"nativeSrc":"22899:57:31","nodeType":"YulExpressionStatement","src":"22899:57:31"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"22817:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22877:5:31","nodeType":"YulTypedName","src":"22877:5:31","type":""},{"name":"pos","nativeSrc":"22884:3:31","nodeType":"YulTypedName","src":"22884:3:31","type":""}],"src":"22817:145:31"},{"body":{"nativeSrc":"23073:131:31","nodeType":"YulBlock","src":"23073:131:31","statements":[{"nativeSrc":"23083:26:31","nodeType":"YulAssignment","src":"23083:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"23095:9:31","nodeType":"YulIdentifier","src":"23095:9:31"},{"kind":"number","nativeSrc":"23106:2:31","nodeType":"YulLiteral","src":"23106:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23091:3:31","nodeType":"YulIdentifier","src":"23091:3:31"},"nativeSrc":"23091:18:31","nodeType":"YulFunctionCall","src":"23091:18:31"},"variableNames":[{"name":"tail","nativeSrc":"23083:4:31","nodeType":"YulIdentifier","src":"23083:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23170:6:31","nodeType":"YulIdentifier","src":"23170:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"23183:9:31","nodeType":"YulIdentifier","src":"23183:9:31"},{"kind":"number","nativeSrc":"23194:1:31","nodeType":"YulLiteral","src":"23194:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23179:3:31","nodeType":"YulIdentifier","src":"23179:3:31"},"nativeSrc":"23179:17:31","nodeType":"YulFunctionCall","src":"23179:17:31"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"23119:50:31","nodeType":"YulIdentifier","src":"23119:50:31"},"nativeSrc":"23119:78:31","nodeType":"YulFunctionCall","src":"23119:78:31"},"nativeSrc":"23119:78:31","nodeType":"YulExpressionStatement","src":"23119:78:31"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"22968:236:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23045:9:31","nodeType":"YulTypedName","src":"23045:9:31","type":""},{"name":"value0","nativeSrc":"23057:6:31","nodeType":"YulTypedName","src":"23057:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23068:4:31","nodeType":"YulTypedName","src":"23068:4:31","type":""}],"src":"22968:236:31"},{"body":{"nativeSrc":"23253:79:31","nodeType":"YulBlock","src":"23253:79:31","statements":[{"body":{"nativeSrc":"23310:16:31","nodeType":"YulBlock","src":"23310:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23319:1:31","nodeType":"YulLiteral","src":"23319:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"23322:1:31","nodeType":"YulLiteral","src":"23322:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23312:6:31","nodeType":"YulIdentifier","src":"23312:6:31"},"nativeSrc":"23312:12:31","nodeType":"YulFunctionCall","src":"23312:12:31"},"nativeSrc":"23312:12:31","nodeType":"YulExpressionStatement","src":"23312:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23276:5:31","nodeType":"YulIdentifier","src":"23276:5:31"},{"arguments":[{"name":"value","nativeSrc":"23301:5:31","nodeType":"YulIdentifier","src":"23301:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"23283:17:31","nodeType":"YulIdentifier","src":"23283:17:31"},"nativeSrc":"23283:24:31","nodeType":"YulFunctionCall","src":"23283:24:31"}],"functionName":{"name":"eq","nativeSrc":"23273:2:31","nodeType":"YulIdentifier","src":"23273:2:31"},"nativeSrc":"23273:35:31","nodeType":"YulFunctionCall","src":"23273:35:31"}],"functionName":{"name":"iszero","nativeSrc":"23266:6:31","nodeType":"YulIdentifier","src":"23266:6:31"},"nativeSrc":"23266:43:31","nodeType":"YulFunctionCall","src":"23266:43:31"},"nativeSrc":"23263:63:31","nodeType":"YulIf","src":"23263:63:31"}]},"name":"validator_revert_t_bytes32","nativeSrc":"23210:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23246:5:31","nodeType":"YulTypedName","src":"23246:5:31","type":""}],"src":"23210:122:31"},{"body":{"nativeSrc":"23401:80:31","nodeType":"YulBlock","src":"23401:80:31","statements":[{"nativeSrc":"23411:22:31","nodeType":"YulAssignment","src":"23411:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"23426:6:31","nodeType":"YulIdentifier","src":"23426:6:31"}],"functionName":{"name":"mload","nativeSrc":"23420:5:31","nodeType":"YulIdentifier","src":"23420:5:31"},"nativeSrc":"23420:13:31","nodeType":"YulFunctionCall","src":"23420:13:31"},"variableNames":[{"name":"value","nativeSrc":"23411:5:31","nodeType":"YulIdentifier","src":"23411:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23469:5:31","nodeType":"YulIdentifier","src":"23469:5:31"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"23442:26:31","nodeType":"YulIdentifier","src":"23442:26:31"},"nativeSrc":"23442:33:31","nodeType":"YulFunctionCall","src":"23442:33:31"},"nativeSrc":"23442:33:31","nodeType":"YulExpressionStatement","src":"23442:33:31"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"23338:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23379:6:31","nodeType":"YulTypedName","src":"23379:6:31","type":""},{"name":"end","nativeSrc":"23387:3:31","nodeType":"YulTypedName","src":"23387:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"23395:5:31","nodeType":"YulTypedName","src":"23395:5:31","type":""}],"src":"23338:143:31"},{"body":{"nativeSrc":"23564:274:31","nodeType":"YulBlock","src":"23564:274:31","statements":[{"body":{"nativeSrc":"23610:83:31","nodeType":"YulBlock","src":"23610:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23612:77:31","nodeType":"YulIdentifier","src":"23612:77:31"},"nativeSrc":"23612:79:31","nodeType":"YulFunctionCall","src":"23612:79:31"},"nativeSrc":"23612:79:31","nodeType":"YulExpressionStatement","src":"23612:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23585:7:31","nodeType":"YulIdentifier","src":"23585:7:31"},{"name":"headStart","nativeSrc":"23594:9:31","nodeType":"YulIdentifier","src":"23594:9:31"}],"functionName":{"name":"sub","nativeSrc":"23581:3:31","nodeType":"YulIdentifier","src":"23581:3:31"},"nativeSrc":"23581:23:31","nodeType":"YulFunctionCall","src":"23581:23:31"},{"kind":"number","nativeSrc":"23606:2:31","nodeType":"YulLiteral","src":"23606:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"23577:3:31","nodeType":"YulIdentifier","src":"23577:3:31"},"nativeSrc":"23577:32:31","nodeType":"YulFunctionCall","src":"23577:32:31"},"nativeSrc":"23574:119:31","nodeType":"YulIf","src":"23574:119:31"},{"nativeSrc":"23703:128:31","nodeType":"YulBlock","src":"23703:128:31","statements":[{"nativeSrc":"23718:15:31","nodeType":"YulVariableDeclaration","src":"23718:15:31","value":{"kind":"number","nativeSrc":"23732:1:31","nodeType":"YulLiteral","src":"23732:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23722:6:31","nodeType":"YulTypedName","src":"23722:6:31","type":""}]},{"nativeSrc":"23747:74:31","nodeType":"YulAssignment","src":"23747:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23793:9:31","nodeType":"YulIdentifier","src":"23793:9:31"},{"name":"offset","nativeSrc":"23804:6:31","nodeType":"YulIdentifier","src":"23804:6:31"}],"functionName":{"name":"add","nativeSrc":"23789:3:31","nodeType":"YulIdentifier","src":"23789:3:31"},"nativeSrc":"23789:22:31","nodeType":"YulFunctionCall","src":"23789:22:31"},{"name":"dataEnd","nativeSrc":"23813:7:31","nodeType":"YulIdentifier","src":"23813:7:31"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"23757:31:31","nodeType":"YulIdentifier","src":"23757:31:31"},"nativeSrc":"23757:64:31","nodeType":"YulFunctionCall","src":"23757:64:31"},"variableNames":[{"name":"value0","nativeSrc":"23747:6:31","nodeType":"YulIdentifier","src":"23747:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"23487:351:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23534:9:31","nodeType":"YulTypedName","src":"23534:9:31","type":""},{"name":"dataEnd","nativeSrc":"23545:7:31","nodeType":"YulTypedName","src":"23545:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23557:6:31","nodeType":"YulTypedName","src":"23557:6:31","type":""}],"src":"23487:351:31"},{"body":{"nativeSrc":"23902:40:31","nodeType":"YulBlock","src":"23902:40:31","statements":[{"nativeSrc":"23913:22:31","nodeType":"YulAssignment","src":"23913:22:31","value":{"arguments":[{"name":"value","nativeSrc":"23929:5:31","nodeType":"YulIdentifier","src":"23929:5:31"}],"functionName":{"name":"mload","nativeSrc":"23923:5:31","nodeType":"YulIdentifier","src":"23923:5:31"},"nativeSrc":"23923:12:31","nodeType":"YulFunctionCall","src":"23923:12:31"},"variableNames":[{"name":"length","nativeSrc":"23913:6:31","nodeType":"YulIdentifier","src":"23913:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"23844:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23885:5:31","nodeType":"YulTypedName","src":"23885:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"23895:6:31","nodeType":"YulTypedName","src":"23895:6:31","type":""}],"src":"23844:98:31"},{"body":{"nativeSrc":"24043:73:31","nodeType":"YulBlock","src":"24043:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24060:3:31","nodeType":"YulIdentifier","src":"24060:3:31"},{"name":"length","nativeSrc":"24065:6:31","nodeType":"YulIdentifier","src":"24065:6:31"}],"functionName":{"name":"mstore","nativeSrc":"24053:6:31","nodeType":"YulIdentifier","src":"24053:6:31"},"nativeSrc":"24053:19:31","nodeType":"YulFunctionCall","src":"24053:19:31"},"nativeSrc":"24053:19:31","nodeType":"YulExpressionStatement","src":"24053:19:31"},{"nativeSrc":"24081:29:31","nodeType":"YulAssignment","src":"24081:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"24100:3:31","nodeType":"YulIdentifier","src":"24100:3:31"},{"kind":"number","nativeSrc":"24105:4:31","nodeType":"YulLiteral","src":"24105:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24096:3:31","nodeType":"YulIdentifier","src":"24096:3:31"},"nativeSrc":"24096:14:31","nodeType":"YulFunctionCall","src":"24096:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"24081:11:31","nodeType":"YulIdentifier","src":"24081:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"23948:168:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24015:3:31","nodeType":"YulTypedName","src":"24015:3:31","type":""},{"name":"length","nativeSrc":"24020:6:31","nodeType":"YulTypedName","src":"24020:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"24031:11:31","nodeType":"YulTypedName","src":"24031:11:31","type":""}],"src":"23948:168:31"},{"body":{"nativeSrc":"24212:283:31","nodeType":"YulBlock","src":"24212:283:31","statements":[{"nativeSrc":"24222:52:31","nodeType":"YulVariableDeclaration","src":"24222:52:31","value":{"arguments":[{"name":"value","nativeSrc":"24268:5:31","nodeType":"YulIdentifier","src":"24268:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"24236:31:31","nodeType":"YulIdentifier","src":"24236:31:31"},"nativeSrc":"24236:38:31","nodeType":"YulFunctionCall","src":"24236:38:31"},"variables":[{"name":"length","nativeSrc":"24226:6:31","nodeType":"YulTypedName","src":"24226:6:31","type":""}]},{"nativeSrc":"24283:77:31","nodeType":"YulAssignment","src":"24283:77:31","value":{"arguments":[{"name":"pos","nativeSrc":"24348:3:31","nodeType":"YulIdentifier","src":"24348:3:31"},{"name":"length","nativeSrc":"24353:6:31","nodeType":"YulIdentifier","src":"24353:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"24290:57:31","nodeType":"YulIdentifier","src":"24290:57:31"},"nativeSrc":"24290:70:31","nodeType":"YulFunctionCall","src":"24290:70:31"},"variableNames":[{"name":"pos","nativeSrc":"24283:3:31","nodeType":"YulIdentifier","src":"24283:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24408:5:31","nodeType":"YulIdentifier","src":"24408:5:31"},{"kind":"number","nativeSrc":"24415:4:31","nodeType":"YulLiteral","src":"24415:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24404:3:31","nodeType":"YulIdentifier","src":"24404:3:31"},"nativeSrc":"24404:16:31","nodeType":"YulFunctionCall","src":"24404:16:31"},{"name":"pos","nativeSrc":"24422:3:31","nodeType":"YulIdentifier","src":"24422:3:31"},{"name":"length","nativeSrc":"24427:6:31","nodeType":"YulIdentifier","src":"24427:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"24369:34:31","nodeType":"YulIdentifier","src":"24369:34:31"},"nativeSrc":"24369:65:31","nodeType":"YulFunctionCall","src":"24369:65:31"},"nativeSrc":"24369:65:31","nodeType":"YulExpressionStatement","src":"24369:65:31"},{"nativeSrc":"24443:46:31","nodeType":"YulAssignment","src":"24443:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"24454:3:31","nodeType":"YulIdentifier","src":"24454:3:31"},{"arguments":[{"name":"length","nativeSrc":"24481:6:31","nodeType":"YulIdentifier","src":"24481:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"24459:21:31","nodeType":"YulIdentifier","src":"24459:21:31"},"nativeSrc":"24459:29:31","nodeType":"YulFunctionCall","src":"24459:29:31"}],"functionName":{"name":"add","nativeSrc":"24450:3:31","nodeType":"YulIdentifier","src":"24450:3:31"},"nativeSrc":"24450:39:31","nodeType":"YulFunctionCall","src":"24450:39:31"},"variableNames":[{"name":"end","nativeSrc":"24443:3:31","nodeType":"YulIdentifier","src":"24443:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"24122:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24193:5:31","nodeType":"YulTypedName","src":"24193:5:31","type":""},{"name":"pos","nativeSrc":"24200:3:31","nodeType":"YulTypedName","src":"24200:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24208:3:31","nodeType":"YulTypedName","src":"24208:3:31","type":""}],"src":"24122:373:31"},{"body":{"nativeSrc":"24701:440:31","nodeType":"YulBlock","src":"24701:440:31","statements":[{"nativeSrc":"24711:27:31","nodeType":"YulAssignment","src":"24711:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"24723:9:31","nodeType":"YulIdentifier","src":"24723:9:31"},{"kind":"number","nativeSrc":"24734:3:31","nodeType":"YulLiteral","src":"24734:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24719:3:31","nodeType":"YulIdentifier","src":"24719:3:31"},"nativeSrc":"24719:19:31","nodeType":"YulFunctionCall","src":"24719:19:31"},"variableNames":[{"name":"tail","nativeSrc":"24711:4:31","nodeType":"YulIdentifier","src":"24711:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24792:6:31","nodeType":"YulIdentifier","src":"24792:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24805:9:31","nodeType":"YulIdentifier","src":"24805:9:31"},{"kind":"number","nativeSrc":"24816:1:31","nodeType":"YulLiteral","src":"24816:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24801:3:31","nodeType":"YulIdentifier","src":"24801:3:31"},"nativeSrc":"24801:17:31","nodeType":"YulFunctionCall","src":"24801:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24748:43:31","nodeType":"YulIdentifier","src":"24748:43:31"},"nativeSrc":"24748:71:31","nodeType":"YulFunctionCall","src":"24748:71:31"},"nativeSrc":"24748:71:31","nodeType":"YulExpressionStatement","src":"24748:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24873:6:31","nodeType":"YulIdentifier","src":"24873:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24886:9:31","nodeType":"YulIdentifier","src":"24886:9:31"},{"kind":"number","nativeSrc":"24897:2:31","nodeType":"YulLiteral","src":"24897:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24882:3:31","nodeType":"YulIdentifier","src":"24882:3:31"},"nativeSrc":"24882:18:31","nodeType":"YulFunctionCall","src":"24882:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24829:43:31","nodeType":"YulIdentifier","src":"24829:43:31"},"nativeSrc":"24829:72:31","nodeType":"YulFunctionCall","src":"24829:72:31"},"nativeSrc":"24829:72:31","nodeType":"YulExpressionStatement","src":"24829:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24955:6:31","nodeType":"YulIdentifier","src":"24955:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24968:9:31","nodeType":"YulIdentifier","src":"24968:9:31"},{"kind":"number","nativeSrc":"24979:2:31","nodeType":"YulLiteral","src":"24979:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24964:3:31","nodeType":"YulIdentifier","src":"24964:3:31"},"nativeSrc":"24964:18:31","nodeType":"YulFunctionCall","src":"24964:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24911:43:31","nodeType":"YulIdentifier","src":"24911:43:31"},"nativeSrc":"24911:72:31","nodeType":"YulFunctionCall","src":"24911:72:31"},"nativeSrc":"24911:72:31","nodeType":"YulExpressionStatement","src":"24911:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25004:9:31","nodeType":"YulIdentifier","src":"25004:9:31"},{"kind":"number","nativeSrc":"25015:2:31","nodeType":"YulLiteral","src":"25015:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25000:3:31","nodeType":"YulIdentifier","src":"25000:3:31"},"nativeSrc":"25000:18:31","nodeType":"YulFunctionCall","src":"25000:18:31"},{"arguments":[{"name":"tail","nativeSrc":"25024:4:31","nodeType":"YulIdentifier","src":"25024:4:31"},{"name":"headStart","nativeSrc":"25030:9:31","nodeType":"YulIdentifier","src":"25030:9:31"}],"functionName":{"name":"sub","nativeSrc":"25020:3:31","nodeType":"YulIdentifier","src":"25020:3:31"},"nativeSrc":"25020:20:31","nodeType":"YulFunctionCall","src":"25020:20:31"}],"functionName":{"name":"mstore","nativeSrc":"24993:6:31","nodeType":"YulIdentifier","src":"24993:6:31"},"nativeSrc":"24993:48:31","nodeType":"YulFunctionCall","src":"24993:48:31"},"nativeSrc":"24993:48:31","nodeType":"YulExpressionStatement","src":"24993:48:31"},{"nativeSrc":"25050:84:31","nodeType":"YulAssignment","src":"25050:84:31","value":{"arguments":[{"name":"value3","nativeSrc":"25120:6:31","nodeType":"YulIdentifier","src":"25120:6:31"},{"name":"tail","nativeSrc":"25129:4:31","nodeType":"YulIdentifier","src":"25129:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"25058:61:31","nodeType":"YulIdentifier","src":"25058:61:31"},"nativeSrc":"25058:76:31","nodeType":"YulFunctionCall","src":"25058:76:31"},"variableNames":[{"name":"tail","nativeSrc":"25050:4:31","nodeType":"YulIdentifier","src":"25050:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"24501:640:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24649:9:31","nodeType":"YulTypedName","src":"24649:9:31","type":""},{"name":"value3","nativeSrc":"24661:6:31","nodeType":"YulTypedName","src":"24661:6:31","type":""},{"name":"value2","nativeSrc":"24669:6:31","nodeType":"YulTypedName","src":"24669:6:31","type":""},{"name":"value1","nativeSrc":"24677:6:31","nodeType":"YulTypedName","src":"24677:6:31","type":""},{"name":"value0","nativeSrc":"24685:6:31","nodeType":"YulTypedName","src":"24685:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24696:4:31","nodeType":"YulTypedName","src":"24696:4:31","type":""}],"src":"24501:640:31"},{"body":{"nativeSrc":"25209:79:31","nodeType":"YulBlock","src":"25209:79:31","statements":[{"nativeSrc":"25219:22:31","nodeType":"YulAssignment","src":"25219:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"25234:6:31","nodeType":"YulIdentifier","src":"25234:6:31"}],"functionName":{"name":"mload","nativeSrc":"25228:5:31","nodeType":"YulIdentifier","src":"25228:5:31"},"nativeSrc":"25228:13:31","nodeType":"YulFunctionCall","src":"25228:13:31"},"variableNames":[{"name":"value","nativeSrc":"25219:5:31","nodeType":"YulIdentifier","src":"25219:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"25276:5:31","nodeType":"YulIdentifier","src":"25276:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"25250:25:31","nodeType":"YulIdentifier","src":"25250:25:31"},"nativeSrc":"25250:32:31","nodeType":"YulFunctionCall","src":"25250:32:31"},"nativeSrc":"25250:32:31","nodeType":"YulExpressionStatement","src":"25250:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"25147:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"25187:6:31","nodeType":"YulTypedName","src":"25187:6:31","type":""},{"name":"end","nativeSrc":"25195:3:31","nodeType":"YulTypedName","src":"25195:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"25203:5:31","nodeType":"YulTypedName","src":"25203:5:31","type":""}],"src":"25147:141:31"},{"body":{"nativeSrc":"25370:273:31","nodeType":"YulBlock","src":"25370:273:31","statements":[{"body":{"nativeSrc":"25416:83:31","nodeType":"YulBlock","src":"25416:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25418:77:31","nodeType":"YulIdentifier","src":"25418:77:31"},"nativeSrc":"25418:79:31","nodeType":"YulFunctionCall","src":"25418:79:31"},"nativeSrc":"25418:79:31","nodeType":"YulExpressionStatement","src":"25418:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25391:7:31","nodeType":"YulIdentifier","src":"25391:7:31"},{"name":"headStart","nativeSrc":"25400:9:31","nodeType":"YulIdentifier","src":"25400:9:31"}],"functionName":{"name":"sub","nativeSrc":"25387:3:31","nodeType":"YulIdentifier","src":"25387:3:31"},"nativeSrc":"25387:23:31","nodeType":"YulFunctionCall","src":"25387:23:31"},{"kind":"number","nativeSrc":"25412:2:31","nodeType":"YulLiteral","src":"25412:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"25383:3:31","nodeType":"YulIdentifier","src":"25383:3:31"},"nativeSrc":"25383:32:31","nodeType":"YulFunctionCall","src":"25383:32:31"},"nativeSrc":"25380:119:31","nodeType":"YulIf","src":"25380:119:31"},{"nativeSrc":"25509:127:31","nodeType":"YulBlock","src":"25509:127:31","statements":[{"nativeSrc":"25524:15:31","nodeType":"YulVariableDeclaration","src":"25524:15:31","value":{"kind":"number","nativeSrc":"25538:1:31","nodeType":"YulLiteral","src":"25538:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25528:6:31","nodeType":"YulTypedName","src":"25528:6:31","type":""}]},{"nativeSrc":"25553:73:31","nodeType":"YulAssignment","src":"25553:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25598:9:31","nodeType":"YulIdentifier","src":"25598:9:31"},{"name":"offset","nativeSrc":"25609:6:31","nodeType":"YulIdentifier","src":"25609:6:31"}],"functionName":{"name":"add","nativeSrc":"25594:3:31","nodeType":"YulIdentifier","src":"25594:3:31"},"nativeSrc":"25594:22:31","nodeType":"YulFunctionCall","src":"25594:22:31"},{"name":"dataEnd","nativeSrc":"25618:7:31","nodeType":"YulIdentifier","src":"25618:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"25563:30:31","nodeType":"YulIdentifier","src":"25563:30:31"},"nativeSrc":"25563:63:31","nodeType":"YulFunctionCall","src":"25563:63:31"},"variableNames":[{"name":"value0","nativeSrc":"25553:6:31","nodeType":"YulIdentifier","src":"25553:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"25294:349:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25340:9:31","nodeType":"YulTypedName","src":"25340:9:31","type":""},{"name":"dataEnd","nativeSrc":"25351:7:31","nodeType":"YulTypedName","src":"25351:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25363:6:31","nodeType":"YulTypedName","src":"25363:6:31","type":""}],"src":"25294:349:31"},{"body":{"nativeSrc":"25763:34:31","nodeType":"YulBlock","src":"25763:34:31","statements":[{"nativeSrc":"25773:18:31","nodeType":"YulAssignment","src":"25773:18:31","value":{"name":"pos","nativeSrc":"25788:3:31","nodeType":"YulIdentifier","src":"25788:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"25773:11:31","nodeType":"YulIdentifier","src":"25773:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25649:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25735:3:31","nodeType":"YulTypedName","src":"25735:3:31","type":""},{"name":"length","nativeSrc":"25740:6:31","nodeType":"YulTypedName","src":"25740:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"25751:11:31","nodeType":"YulTypedName","src":"25751:11:31","type":""}],"src":"25649:148:31"},{"body":{"nativeSrc":"25913:280:31","nodeType":"YulBlock","src":"25913:280:31","statements":[{"nativeSrc":"25923:53:31","nodeType":"YulVariableDeclaration","src":"25923:53:31","value":{"arguments":[{"name":"value","nativeSrc":"25970:5:31","nodeType":"YulIdentifier","src":"25970:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"25937:32:31","nodeType":"YulIdentifier","src":"25937:32:31"},"nativeSrc":"25937:39:31","nodeType":"YulFunctionCall","src":"25937:39:31"},"variables":[{"name":"length","nativeSrc":"25927:6:31","nodeType":"YulTypedName","src":"25927:6:31","type":""}]},{"nativeSrc":"25985:96:31","nodeType":"YulAssignment","src":"25985:96:31","value":{"arguments":[{"name":"pos","nativeSrc":"26069:3:31","nodeType":"YulIdentifier","src":"26069:3:31"},{"name":"length","nativeSrc":"26074:6:31","nodeType":"YulIdentifier","src":"26074:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25992:76:31","nodeType":"YulIdentifier","src":"25992:76:31"},"nativeSrc":"25992:89:31","nodeType":"YulFunctionCall","src":"25992:89:31"},"variableNames":[{"name":"pos","nativeSrc":"25985:3:31","nodeType":"YulIdentifier","src":"25985:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26129:5:31","nodeType":"YulIdentifier","src":"26129:5:31"},{"kind":"number","nativeSrc":"26136:4:31","nodeType":"YulLiteral","src":"26136:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26125:3:31","nodeType":"YulIdentifier","src":"26125:3:31"},"nativeSrc":"26125:16:31","nodeType":"YulFunctionCall","src":"26125:16:31"},{"name":"pos","nativeSrc":"26143:3:31","nodeType":"YulIdentifier","src":"26143:3:31"},{"name":"length","nativeSrc":"26148:6:31","nodeType":"YulIdentifier","src":"26148:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"26090:34:31","nodeType":"YulIdentifier","src":"26090:34:31"},"nativeSrc":"26090:65:31","nodeType":"YulFunctionCall","src":"26090:65:31"},"nativeSrc":"26090:65:31","nodeType":"YulExpressionStatement","src":"26090:65:31"},{"nativeSrc":"26164:23:31","nodeType":"YulAssignment","src":"26164:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"26175:3:31","nodeType":"YulIdentifier","src":"26175:3:31"},{"name":"length","nativeSrc":"26180:6:31","nodeType":"YulIdentifier","src":"26180:6:31"}],"functionName":{"name":"add","nativeSrc":"26171:3:31","nodeType":"YulIdentifier","src":"26171:3:31"},"nativeSrc":"26171:16:31","nodeType":"YulFunctionCall","src":"26171:16:31"},"variableNames":[{"name":"end","nativeSrc":"26164:3:31","nodeType":"YulIdentifier","src":"26164:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25803:390:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25894:5:31","nodeType":"YulTypedName","src":"25894:5:31","type":""},{"name":"pos","nativeSrc":"25901:3:31","nodeType":"YulTypedName","src":"25901:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25909:3:31","nodeType":"YulTypedName","src":"25909:3:31","type":""}],"src":"25803:390:31"},{"body":{"nativeSrc":"26383:251:31","nodeType":"YulBlock","src":"26383:251:31","statements":[{"nativeSrc":"26394:102:31","nodeType":"YulAssignment","src":"26394:102:31","value":{"arguments":[{"name":"value0","nativeSrc":"26483:6:31","nodeType":"YulIdentifier","src":"26483:6:31"},{"name":"pos","nativeSrc":"26492:3:31","nodeType":"YulIdentifier","src":"26492:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26401:81:31","nodeType":"YulIdentifier","src":"26401:81:31"},"nativeSrc":"26401:95:31","nodeType":"YulFunctionCall","src":"26401:95:31"},"variableNames":[{"name":"pos","nativeSrc":"26394:3:31","nodeType":"YulIdentifier","src":"26394:3:31"}]},{"nativeSrc":"26506:102:31","nodeType":"YulAssignment","src":"26506:102:31","value":{"arguments":[{"name":"value1","nativeSrc":"26595:6:31","nodeType":"YulIdentifier","src":"26595:6:31"},{"name":"pos","nativeSrc":"26604:3:31","nodeType":"YulIdentifier","src":"26604:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"26513:81:31","nodeType":"YulIdentifier","src":"26513:81:31"},"nativeSrc":"26513:95:31","nodeType":"YulFunctionCall","src":"26513:95:31"},"variableNames":[{"name":"pos","nativeSrc":"26506:3:31","nodeType":"YulIdentifier","src":"26506:3:31"}]},{"nativeSrc":"26618:10:31","nodeType":"YulAssignment","src":"26618:10:31","value":{"name":"pos","nativeSrc":"26625:3:31","nodeType":"YulIdentifier","src":"26625:3:31"},"variableNames":[{"name":"end","nativeSrc":"26618:3:31","nodeType":"YulIdentifier","src":"26618:3:31"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"26199:435:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26354:3:31","nodeType":"YulTypedName","src":"26354:3:31","type":""},{"name":"value1","nativeSrc":"26360:6:31","nodeType":"YulTypedName","src":"26360:6:31","type":""},{"name":"value0","nativeSrc":"26368:6:31","nodeType":"YulTypedName","src":"26368:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26379:3:31","nodeType":"YulTypedName","src":"26379:3:31","type":""}],"src":"26199:435:31"},{"body":{"nativeSrc":"26732:1303:31","nodeType":"YulBlock","src":"26732:1303:31","statements":[{"nativeSrc":"26743:51:31","nodeType":"YulVariableDeclaration","src":"26743:51:31","value":{"arguments":[{"name":"src","nativeSrc":"26790:3:31","nodeType":"YulIdentifier","src":"26790:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26757:32:31","nodeType":"YulIdentifier","src":"26757:32:31"},"nativeSrc":"26757:37:31","nodeType":"YulFunctionCall","src":"26757:37:31"},"variables":[{"name":"newLen","nativeSrc":"26747:6:31","nodeType":"YulTypedName","src":"26747:6:31","type":""}]},{"body":{"nativeSrc":"26879:22:31","nodeType":"YulBlock","src":"26879:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"26881:16:31","nodeType":"YulIdentifier","src":"26881:16:31"},"nativeSrc":"26881:18:31","nodeType":"YulFunctionCall","src":"26881:18:31"},"nativeSrc":"26881:18:31","nodeType":"YulExpressionStatement","src":"26881:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"26851:6:31","nodeType":"YulIdentifier","src":"26851:6:31"},{"kind":"number","nativeSrc":"26859:18:31","nodeType":"YulLiteral","src":"26859:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26848:2:31","nodeType":"YulIdentifier","src":"26848:2:31"},"nativeSrc":"26848:30:31","nodeType":"YulFunctionCall","src":"26848:30:31"},"nativeSrc":"26845:56:31","nodeType":"YulIf","src":"26845:56:31"},{"nativeSrc":"26911:52:31","nodeType":"YulVariableDeclaration","src":"26911:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"26957:4:31","nodeType":"YulIdentifier","src":"26957:4:31"}],"functionName":{"name":"sload","nativeSrc":"26951:5:31","nodeType":"YulIdentifier","src":"26951:5:31"},"nativeSrc":"26951:11:31","nodeType":"YulFunctionCall","src":"26951:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"26925:25:31","nodeType":"YulIdentifier","src":"26925:25:31"},"nativeSrc":"26925:38:31","nodeType":"YulFunctionCall","src":"26925:38:31"},"variables":[{"name":"oldLen","nativeSrc":"26915:6:31","nodeType":"YulTypedName","src":"26915:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27056:4:31","nodeType":"YulIdentifier","src":"27056:4:31"},{"name":"oldLen","nativeSrc":"27062:6:31","nodeType":"YulIdentifier","src":"27062:6:31"},{"name":"newLen","nativeSrc":"27070:6:31","nodeType":"YulIdentifier","src":"27070:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"27010:45:31","nodeType":"YulIdentifier","src":"27010:45:31"},"nativeSrc":"27010:67:31","nodeType":"YulFunctionCall","src":"27010:67:31"},"nativeSrc":"27010:67:31","nodeType":"YulExpressionStatement","src":"27010:67:31"},{"nativeSrc":"27087:18:31","nodeType":"YulVariableDeclaration","src":"27087:18:31","value":{"kind":"number","nativeSrc":"27104:1:31","nodeType":"YulLiteral","src":"27104:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"27091:9:31","nodeType":"YulTypedName","src":"27091:9:31","type":""}]},{"nativeSrc":"27115:17:31","nodeType":"YulAssignment","src":"27115:17:31","value":{"kind":"number","nativeSrc":"27128:4:31","nodeType":"YulLiteral","src":"27128:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"27115:9:31","nodeType":"YulIdentifier","src":"27115:9:31"}]},{"cases":[{"body":{"nativeSrc":"27179:611:31","nodeType":"YulBlock","src":"27179:611:31","statements":[{"nativeSrc":"27193:37:31","nodeType":"YulVariableDeclaration","src":"27193:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"27212:6:31","nodeType":"YulIdentifier","src":"27212:6:31"},{"arguments":[{"kind":"number","nativeSrc":"27224:4:31","nodeType":"YulLiteral","src":"27224:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"27220:3:31","nodeType":"YulIdentifier","src":"27220:3:31"},"nativeSrc":"27220:9:31","nodeType":"YulFunctionCall","src":"27220:9:31"}],"functionName":{"name":"and","nativeSrc":"27208:3:31","nodeType":"YulIdentifier","src":"27208:3:31"},"nativeSrc":"27208:22:31","nodeType":"YulFunctionCall","src":"27208:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"27197:7:31","nodeType":"YulTypedName","src":"27197:7:31","type":""}]},{"nativeSrc":"27244:51:31","nodeType":"YulVariableDeclaration","src":"27244:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"27290:4:31","nodeType":"YulIdentifier","src":"27290:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"27258:31:31","nodeType":"YulIdentifier","src":"27258:31:31"},"nativeSrc":"27258:37:31","nodeType":"YulFunctionCall","src":"27258:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"27248:6:31","nodeType":"YulTypedName","src":"27248:6:31","type":""}]},{"nativeSrc":"27308:10:31","nodeType":"YulVariableDeclaration","src":"27308:10:31","value":{"kind":"number","nativeSrc":"27317:1:31","nodeType":"YulLiteral","src":"27317:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"27312:1:31","nodeType":"YulTypedName","src":"27312:1:31","type":""}]},{"body":{"nativeSrc":"27376:163:31","nodeType":"YulBlock","src":"27376:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"27401:6:31","nodeType":"YulIdentifier","src":"27401:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27419:3:31","nodeType":"YulIdentifier","src":"27419:3:31"},{"name":"srcOffset","nativeSrc":"27424:9:31","nodeType":"YulIdentifier","src":"27424:9:31"}],"functionName":{"name":"add","nativeSrc":"27415:3:31","nodeType":"YulIdentifier","src":"27415:3:31"},"nativeSrc":"27415:19:31","nodeType":"YulFunctionCall","src":"27415:19:31"}],"functionName":{"name":"mload","nativeSrc":"27409:5:31","nodeType":"YulIdentifier","src":"27409:5:31"},"nativeSrc":"27409:26:31","nodeType":"YulFunctionCall","src":"27409:26:31"}],"functionName":{"name":"sstore","nativeSrc":"27394:6:31","nodeType":"YulIdentifier","src":"27394:6:31"},"nativeSrc":"27394:42:31","nodeType":"YulFunctionCall","src":"27394:42:31"},"nativeSrc":"27394:42:31","nodeType":"YulExpressionStatement","src":"27394:42:31"},{"nativeSrc":"27453:24:31","nodeType":"YulAssignment","src":"27453:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"27467:6:31","nodeType":"YulIdentifier","src":"27467:6:31"},{"kind":"number","nativeSrc":"27475:1:31","nodeType":"YulLiteral","src":"27475:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27463:3:31","nodeType":"YulIdentifier","src":"27463:3:31"},"nativeSrc":"27463:14:31","nodeType":"YulFunctionCall","src":"27463:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"27453:6:31","nodeType":"YulIdentifier","src":"27453:6:31"}]},{"nativeSrc":"27494:31:31","nodeType":"YulAssignment","src":"27494:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"27511:9:31","nodeType":"YulIdentifier","src":"27511:9:31"},{"kind":"number","nativeSrc":"27522:2:31","nodeType":"YulLiteral","src":"27522:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27507:3:31","nodeType":"YulIdentifier","src":"27507:3:31"},"nativeSrc":"27507:18:31","nodeType":"YulFunctionCall","src":"27507:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"27494:9:31","nodeType":"YulIdentifier","src":"27494:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"27342:1:31","nodeType":"YulIdentifier","src":"27342:1:31"},{"name":"loopEnd","nativeSrc":"27345:7:31","nodeType":"YulIdentifier","src":"27345:7:31"}],"functionName":{"name":"lt","nativeSrc":"27339:2:31","nodeType":"YulIdentifier","src":"27339:2:31"},"nativeSrc":"27339:14:31","nodeType":"YulFunctionCall","src":"27339:14:31"},"nativeSrc":"27331:208:31","nodeType":"YulForLoop","post":{"nativeSrc":"27354:21:31","nodeType":"YulBlock","src":"27354:21:31","statements":[{"nativeSrc":"27356:17:31","nodeType":"YulAssignment","src":"27356:17:31","value":{"arguments":[{"name":"i","nativeSrc":"27365:1:31","nodeType":"YulIdentifier","src":"27365:1:31"},{"kind":"number","nativeSrc":"27368:4:31","nodeType":"YulLiteral","src":"27368:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"27361:3:31","nodeType":"YulIdentifier","src":"27361:3:31"},"nativeSrc":"27361:12:31","nodeType":"YulFunctionCall","src":"27361:12:31"},"variableNames":[{"name":"i","nativeSrc":"27356:1:31","nodeType":"YulIdentifier","src":"27356:1:31"}]}]},"pre":{"nativeSrc":"27335:3:31","nodeType":"YulBlock","src":"27335:3:31","statements":[]},"src":"27331:208:31"},{"body":{"nativeSrc":"27575:156:31","nodeType":"YulBlock","src":"27575:156:31","statements":[{"nativeSrc":"27593:43:31","nodeType":"YulVariableDeclaration","src":"27593:43:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27620:3:31","nodeType":"YulIdentifier","src":"27620:3:31"},{"name":"srcOffset","nativeSrc":"27625:9:31","nodeType":"YulIdentifier","src":"27625:9:31"}],"functionName":{"name":"add","nativeSrc":"27616:3:31","nodeType":"YulIdentifier","src":"27616:3:31"},"nativeSrc":"27616:19:31","nodeType":"YulFunctionCall","src":"27616:19:31"}],"functionName":{"name":"mload","nativeSrc":"27610:5:31","nodeType":"YulIdentifier","src":"27610:5:31"},"nativeSrc":"27610:26:31","nodeType":"YulFunctionCall","src":"27610:26:31"},"variables":[{"name":"lastValue","nativeSrc":"27597:9:31","nodeType":"YulTypedName","src":"27597:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"27660:6:31","nodeType":"YulIdentifier","src":"27660:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"27687:9:31","nodeType":"YulIdentifier","src":"27687:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"27702:6:31","nodeType":"YulIdentifier","src":"27702:6:31"},{"kind":"number","nativeSrc":"27710:4:31","nodeType":"YulLiteral","src":"27710:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"27698:3:31","nodeType":"YulIdentifier","src":"27698:3:31"},"nativeSrc":"27698:17:31","nodeType":"YulFunctionCall","src":"27698:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"27668:18:31","nodeType":"YulIdentifier","src":"27668:18:31"},"nativeSrc":"27668:48:31","nodeType":"YulFunctionCall","src":"27668:48:31"}],"functionName":{"name":"sstore","nativeSrc":"27653:6:31","nodeType":"YulIdentifier","src":"27653:6:31"},"nativeSrc":"27653:64:31","nodeType":"YulFunctionCall","src":"27653:64:31"},"nativeSrc":"27653:64:31","nodeType":"YulExpressionStatement","src":"27653:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"27558:7:31","nodeType":"YulIdentifier","src":"27558:7:31"},{"name":"newLen","nativeSrc":"27567:6:31","nodeType":"YulIdentifier","src":"27567:6:31"}],"functionName":{"name":"lt","nativeSrc":"27555:2:31","nodeType":"YulIdentifier","src":"27555:2:31"},"nativeSrc":"27555:19:31","nodeType":"YulFunctionCall","src":"27555:19:31"},"nativeSrc":"27552:179:31","nodeType":"YulIf","src":"27552:179:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27751:4:31","nodeType":"YulIdentifier","src":"27751:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"27765:6:31","nodeType":"YulIdentifier","src":"27765:6:31"},{"kind":"number","nativeSrc":"27773:1:31","nodeType":"YulLiteral","src":"27773:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"27761:3:31","nodeType":"YulIdentifier","src":"27761:3:31"},"nativeSrc":"27761:14:31","nodeType":"YulFunctionCall","src":"27761:14:31"},{"kind":"number","nativeSrc":"27777:1:31","nodeType":"YulLiteral","src":"27777:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27757:3:31","nodeType":"YulIdentifier","src":"27757:3:31"},"nativeSrc":"27757:22:31","nodeType":"YulFunctionCall","src":"27757:22:31"}],"functionName":{"name":"sstore","nativeSrc":"27744:6:31","nodeType":"YulIdentifier","src":"27744:6:31"},"nativeSrc":"27744:36:31","nodeType":"YulFunctionCall","src":"27744:36:31"},"nativeSrc":"27744:36:31","nodeType":"YulExpressionStatement","src":"27744:36:31"}]},"nativeSrc":"27172:618:31","nodeType":"YulCase","src":"27172:618:31","value":{"kind":"number","nativeSrc":"27177:1:31","nodeType":"YulLiteral","src":"27177:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"27807:222:31","nodeType":"YulBlock","src":"27807:222:31","statements":[{"nativeSrc":"27821:14:31","nodeType":"YulVariableDeclaration","src":"27821:14:31","value":{"kind":"number","nativeSrc":"27834:1:31","nodeType":"YulLiteral","src":"27834:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"27825:5:31","nodeType":"YulTypedName","src":"27825:5:31","type":""}]},{"body":{"nativeSrc":"27858:67:31","nodeType":"YulBlock","src":"27858:67:31","statements":[{"nativeSrc":"27876:35:31","nodeType":"YulAssignment","src":"27876:35:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27895:3:31","nodeType":"YulIdentifier","src":"27895:3:31"},{"name":"srcOffset","nativeSrc":"27900:9:31","nodeType":"YulIdentifier","src":"27900:9:31"}],"functionName":{"name":"add","nativeSrc":"27891:3:31","nodeType":"YulIdentifier","src":"27891:3:31"},"nativeSrc":"27891:19:31","nodeType":"YulFunctionCall","src":"27891:19:31"}],"functionName":{"name":"mload","nativeSrc":"27885:5:31","nodeType":"YulIdentifier","src":"27885:5:31"},"nativeSrc":"27885:26:31","nodeType":"YulFunctionCall","src":"27885:26:31"},"variableNames":[{"name":"value","nativeSrc":"27876:5:31","nodeType":"YulIdentifier","src":"27876:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"27851:6:31","nodeType":"YulIdentifier","src":"27851:6:31"},"nativeSrc":"27848:77:31","nodeType":"YulIf","src":"27848:77:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27945:4:31","nodeType":"YulIdentifier","src":"27945:4:31"},{"arguments":[{"name":"value","nativeSrc":"28004:5:31","nodeType":"YulIdentifier","src":"28004:5:31"},{"name":"newLen","nativeSrc":"28011:6:31","nodeType":"YulIdentifier","src":"28011:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"27951:52:31","nodeType":"YulIdentifier","src":"27951:52:31"},"nativeSrc":"27951:67:31","nodeType":"YulFunctionCall","src":"27951:67:31"}],"functionName":{"name":"sstore","nativeSrc":"27938:6:31","nodeType":"YulIdentifier","src":"27938:6:31"},"nativeSrc":"27938:81:31","nodeType":"YulFunctionCall","src":"27938:81:31"},"nativeSrc":"27938:81:31","nodeType":"YulExpressionStatement","src":"27938:81:31"}]},"nativeSrc":"27799:230:31","nodeType":"YulCase","src":"27799:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"27152:6:31","nodeType":"YulIdentifier","src":"27152:6:31"},{"kind":"number","nativeSrc":"27160:2:31","nodeType":"YulLiteral","src":"27160:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"27149:2:31","nodeType":"YulIdentifier","src":"27149:2:31"},"nativeSrc":"27149:14:31","nodeType":"YulFunctionCall","src":"27149:14:31"},"nativeSrc":"27142:887:31","nodeType":"YulSwitch","src":"27142:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"26640:1395:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"26721:4:31","nodeType":"YulTypedName","src":"26721:4:31","type":""},{"name":"src","nativeSrc":"26727:3:31","nodeType":"YulTypedName","src":"26727:3:31","type":""}],"src":"26640:1395:31"},{"body":{"nativeSrc":"28167:206:31","nodeType":"YulBlock","src":"28167:206:31","statements":[{"nativeSrc":"28177:26:31","nodeType":"YulAssignment","src":"28177:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"28189:9:31","nodeType":"YulIdentifier","src":"28189:9:31"},{"kind":"number","nativeSrc":"28200:2:31","nodeType":"YulLiteral","src":"28200:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28185:3:31","nodeType":"YulIdentifier","src":"28185:3:31"},"nativeSrc":"28185:18:31","nodeType":"YulFunctionCall","src":"28185:18:31"},"variableNames":[{"name":"tail","nativeSrc":"28177:4:31","nodeType":"YulIdentifier","src":"28177:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28257:6:31","nodeType":"YulIdentifier","src":"28257:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"28270:9:31","nodeType":"YulIdentifier","src":"28270:9:31"},{"kind":"number","nativeSrc":"28281:1:31","nodeType":"YulLiteral","src":"28281:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28266:3:31","nodeType":"YulIdentifier","src":"28266:3:31"},"nativeSrc":"28266:17:31","nodeType":"YulFunctionCall","src":"28266:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28213:43:31","nodeType":"YulIdentifier","src":"28213:43:31"},"nativeSrc":"28213:71:31","nodeType":"YulFunctionCall","src":"28213:71:31"},"nativeSrc":"28213:71:31","nodeType":"YulExpressionStatement","src":"28213:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28338:6:31","nodeType":"YulIdentifier","src":"28338:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"28351:9:31","nodeType":"YulIdentifier","src":"28351:9:31"},{"kind":"number","nativeSrc":"28362:2:31","nodeType":"YulLiteral","src":"28362:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28347:3:31","nodeType":"YulIdentifier","src":"28347:3:31"},"nativeSrc":"28347:18:31","nodeType":"YulFunctionCall","src":"28347:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"28294:43:31","nodeType":"YulIdentifier","src":"28294:43:31"},"nativeSrc":"28294:72:31","nodeType":"YulFunctionCall","src":"28294:72:31"},"nativeSrc":"28294:72:31","nodeType":"YulExpressionStatement","src":"28294:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"28041:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28131:9:31","nodeType":"YulTypedName","src":"28131:9:31","type":""},{"name":"value1","nativeSrc":"28143:6:31","nodeType":"YulTypedName","src":"28143:6:31","type":""},{"name":"value0","nativeSrc":"28151:6:31","nodeType":"YulTypedName","src":"28151:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28162:4:31","nodeType":"YulTypedName","src":"28162:4:31","type":""}],"src":"28041:332:31"},{"body":{"nativeSrc":"28492:34:31","nodeType":"YulBlock","src":"28492:34:31","statements":[{"nativeSrc":"28502:18:31","nodeType":"YulAssignment","src":"28502:18:31","value":{"name":"pos","nativeSrc":"28517:3:31","nodeType":"YulIdentifier","src":"28517:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"28502:11:31","nodeType":"YulIdentifier","src":"28502:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28379:147:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28464:3:31","nodeType":"YulTypedName","src":"28464:3:31","type":""},{"name":"length","nativeSrc":"28469:6:31","nodeType":"YulTypedName","src":"28469:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"28480:11:31","nodeType":"YulTypedName","src":"28480:11:31","type":""}],"src":"28379:147:31"},{"body":{"nativeSrc":"28640:278:31","nodeType":"YulBlock","src":"28640:278:31","statements":[{"nativeSrc":"28650:52:31","nodeType":"YulVariableDeclaration","src":"28650:52:31","value":{"arguments":[{"name":"value","nativeSrc":"28696:5:31","nodeType":"YulIdentifier","src":"28696:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"28664:31:31","nodeType":"YulIdentifier","src":"28664:31:31"},"nativeSrc":"28664:38:31","nodeType":"YulFunctionCall","src":"28664:38:31"},"variables":[{"name":"length","nativeSrc":"28654:6:31","nodeType":"YulTypedName","src":"28654:6:31","type":""}]},{"nativeSrc":"28711:95:31","nodeType":"YulAssignment","src":"28711:95:31","value":{"arguments":[{"name":"pos","nativeSrc":"28794:3:31","nodeType":"YulIdentifier","src":"28794:3:31"},{"name":"length","nativeSrc":"28799:6:31","nodeType":"YulIdentifier","src":"28799:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28718:75:31","nodeType":"YulIdentifier","src":"28718:75:31"},"nativeSrc":"28718:88:31","nodeType":"YulFunctionCall","src":"28718:88:31"},"variableNames":[{"name":"pos","nativeSrc":"28711:3:31","nodeType":"YulIdentifier","src":"28711:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28854:5:31","nodeType":"YulIdentifier","src":"28854:5:31"},{"kind":"number","nativeSrc":"28861:4:31","nodeType":"YulLiteral","src":"28861:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"28850:3:31","nodeType":"YulIdentifier","src":"28850:3:31"},"nativeSrc":"28850:16:31","nodeType":"YulFunctionCall","src":"28850:16:31"},{"name":"pos","nativeSrc":"28868:3:31","nodeType":"YulIdentifier","src":"28868:3:31"},{"name":"length","nativeSrc":"28873:6:31","nodeType":"YulIdentifier","src":"28873:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"28815:34:31","nodeType":"YulIdentifier","src":"28815:34:31"},"nativeSrc":"28815:65:31","nodeType":"YulFunctionCall","src":"28815:65:31"},"nativeSrc":"28815:65:31","nodeType":"YulExpressionStatement","src":"28815:65:31"},{"nativeSrc":"28889:23:31","nodeType":"YulAssignment","src":"28889:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"28900:3:31","nodeType":"YulIdentifier","src":"28900:3:31"},{"name":"length","nativeSrc":"28905:6:31","nodeType":"YulIdentifier","src":"28905:6:31"}],"functionName":{"name":"add","nativeSrc":"28896:3:31","nodeType":"YulIdentifier","src":"28896:3:31"},"nativeSrc":"28896:16:31","nodeType":"YulFunctionCall","src":"28896:16:31"},"variableNames":[{"name":"end","nativeSrc":"28889:3:31","nodeType":"YulIdentifier","src":"28889:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"28532:386:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28621:5:31","nodeType":"YulTypedName","src":"28621:5:31","type":""},{"name":"pos","nativeSrc":"28628:3:31","nodeType":"YulTypedName","src":"28628:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28636:3:31","nodeType":"YulTypedName","src":"28636:3:31","type":""}],"src":"28532:386:31"},{"body":{"nativeSrc":"29058:137:31","nodeType":"YulBlock","src":"29058:137:31","statements":[{"nativeSrc":"29069:100:31","nodeType":"YulAssignment","src":"29069:100:31","value":{"arguments":[{"name":"value0","nativeSrc":"29156:6:31","nodeType":"YulIdentifier","src":"29156:6:31"},{"name":"pos","nativeSrc":"29165:3:31","nodeType":"YulIdentifier","src":"29165:3:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"29076:79:31","nodeType":"YulIdentifier","src":"29076:79:31"},"nativeSrc":"29076:93:31","nodeType":"YulFunctionCall","src":"29076:93:31"},"variableNames":[{"name":"pos","nativeSrc":"29069:3:31","nodeType":"YulIdentifier","src":"29069:3:31"}]},{"nativeSrc":"29179:10:31","nodeType":"YulAssignment","src":"29179:10:31","value":{"name":"pos","nativeSrc":"29186:3:31","nodeType":"YulIdentifier","src":"29186:3:31"},"variableNames":[{"name":"end","nativeSrc":"29179:3:31","nodeType":"YulIdentifier","src":"29179:3:31"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"28924:271:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29037:3:31","nodeType":"YulTypedName","src":"29037:3:31","type":""},{"name":"value0","nativeSrc":"29043:6:31","nodeType":"YulTypedName","src":"29043:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29054:3:31","nodeType":"YulTypedName","src":"29054:3:31","type":""}],"src":"28924:271:31"},{"body":{"nativeSrc":"29229:152:31","nodeType":"YulBlock","src":"29229:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29246:1:31","nodeType":"YulLiteral","src":"29246:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"29249:77:31","nodeType":"YulLiteral","src":"29249:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"29239:6:31","nodeType":"YulIdentifier","src":"29239:6:31"},"nativeSrc":"29239:88:31","nodeType":"YulFunctionCall","src":"29239:88:31"},"nativeSrc":"29239:88:31","nodeType":"YulExpressionStatement","src":"29239:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29343:1:31","nodeType":"YulLiteral","src":"29343:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"29346:4:31","nodeType":"YulLiteral","src":"29346:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"29336:6:31","nodeType":"YulIdentifier","src":"29336:6:31"},"nativeSrc":"29336:15:31","nodeType":"YulFunctionCall","src":"29336:15:31"},"nativeSrc":"29336:15:31","nodeType":"YulExpressionStatement","src":"29336:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29367:1:31","nodeType":"YulLiteral","src":"29367:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"29370:4:31","nodeType":"YulLiteral","src":"29370:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"29360:6:31","nodeType":"YulIdentifier","src":"29360:6:31"},"nativeSrc":"29360:15:31","nodeType":"YulFunctionCall","src":"29360:15:31"},"nativeSrc":"29360:15:31","nodeType":"YulExpressionStatement","src":"29360:15:31"}]},"name":"panic_error_0x12","nativeSrc":"29201:180:31","nodeType":"YulFunctionDefinition","src":"29201:180:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"6459":[{"length":32,"start":5901},{"length":32,"start":5986},{"length":32,"start":6545}]},"linkReferences":{},"object":"60806040526004361061014b5760003560e01c80638da5cb5b116100b6578063d204c45e1161006f578063d204c45e1461046f578063d7b518a814610498578063e985e9c5146104c3578063ef690cc014610500578063f2fde38b1461052b578063f62d1888146105545761014b565b80638da5cb5b1461035f57806395d89b411461038a578063a22cb465146103b5578063ad3cb1cc146103de578063b88d4fde14610409578063c87b56dd146104325761014b565b806342842e0e1161010857806342842e0e1461025e5780634f1ef2861461028757806352d1902d146102a35780636352211e146102ce57806370a082311461030b578063715018a6146103485761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f557806323b872dd1461021e5780632de2333714610247575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190612f1f565b61057d565b6040516101849190612f67565b60405180910390f35b34801561019957600080fd5b506101a26105de565b6040516101af9190613012565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061306a565b61067f565b6040516101ec91906130d8565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061311f565b61069b565b005b34801561022a57600080fd5b506102456004803603810190610240919061315f565b6106b1565b005b34801561025357600080fd5b5061025c6107b3565b005b34801561026a57600080fd5b506102856004803603810190610280919061315f565b61095d565b005b6102a1600480360381019061029c91906132e7565b61097d565b005b3480156102af57600080fd5b506102b861099c565b6040516102c5919061335c565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061306a565b6109cf565b60405161030291906130d8565b60405180910390f35b34801561031757600080fd5b50610332600480360381019061032d9190613377565b6109e1565b60405161033f91906133b3565b60405180910390f35b34801561035457600080fd5b5061035d610aaa565b005b34801561036b57600080fd5b50610374610be4565b60405161038191906130d8565b60405180910390f35b34801561039657600080fd5b5061039f610c0d565b6040516103ac9190613012565b60405180910390f35b3480156103c157600080fd5b506103dc60048036038101906103d791906133fa565b610cae565b005b3480156103ea57600080fd5b506103f3610cc4565b6040516104009190613012565b60405180910390f35b34801561041557600080fd5b50610430600480360381019061042b919061343a565b610cfd565b005b34801561043e57600080fd5b506104596004803603810190610454919061306a565b610d22565b6040516104669190613012565b60405180910390f35b34801561047b57600080fd5b506104966004803603810190610491919061355e565b610d34565b005b3480156104a457600080fd5b506104ad610de1565b6040516104ba9190613012565b60405180910390f35b3480156104cf57600080fd5b506104ea60048036038101906104e591906135ba565b610e1e565b6040516104f79190612f67565b60405180910390f35b34801561050c57600080fd5b50610515610ec0565b6040516105229190613012565b60405180910390f35b34801561053757600080fd5b50610552600480360381019061054d9190613377565b610f4e565b005b34801561056057600080fd5b5061057b6004803603810190610576919061365a565b6110f6565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105d757506105d68261129f565b5b9050919050565b606060006105ea611381565b90508060000180546105fb906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610627906136d6565b80156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b505050505091505090565b600061068a826113a9565b5061069482611431565b9050919050565b6106ad82826106a861147c565b611484565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107235760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161071a91906130d8565b60405180910390fd5b6000610737838361073261147c565b611496565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107ad578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107a493929190613707565b60405180910390fd5b50505050565b600260006107bf6116c3565b90508060000160089054906101000a900460ff168061080a57508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b15610841576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff0219169083151502179055506108fd6040518060400160405280601181526020017f4f75725570677261646561626c654e46540000000000000000000000000000008152506040518060400160405280600381526020017f4f554e00000000000000000000000000000000000000000000000000000000008152506116eb565b610905611701565b60008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516109519190613761565b60405180910390a15050565b61097883838360405180602001604052806000815250610cfd565b505050565b61098561170b565b61098e826117f1565b6109988282611870565b5050565b60006109a661198f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006109da826113a9565b9050919050565b6000806109ec611381565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a605760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610a5791906130d8565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610ab261147c565b73ffffffffffffffffffffffffffffffffffffffff16610ad0610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906137c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000610c19611381565b9050806001018054610c2a906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c56906136d6565b8015610ca35780601f10610c7857610100808354040283529160200191610ca3565b820191906000526020600020905b815481529060010190602001808311610c8657829003601f168201915b505050505091505090565b610cc0610cb961147c565b8383611a16565b5050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610d088484846106b1565b610d1c610d1361147c565b85858585611b94565b50505050565b6060610d2d82611d45565b9050919050565b610d3c61147c565b73ffffffffffffffffffffffffffffffffffffffff16610d5a610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da7906137c8565b60405180910390fd5b6000610dbc6033611e69565b9050610dc86033611e77565b610dd28382611e8d565b610ddc8183611eab565b505050565b60606040518060400160405280601681526020017f4e6577205570677261646561626c6520576f726c642100000000000000000000815250905090565b600080610e29611381565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60328054610ecd906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef9906136d6565b8015610f465780601f10610f1b57610100808354040283529160200191610f46565b820191906000526020600020905b815481529060010190602001808311610f2957829003601f168201915b505050505081565b610f5661147c565b73ffffffffffffffffffffffffffffffffffffffff16610f74610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc1906137c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611039576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110309061385a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006111006116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561114e5750825b9050600060018367ffffffffffffffff16148015611183575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611191575080155b156111c8576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156112185760018560000160086101000a81548160ff0219169083151502179055505b868660329182611229929190613a31565b50611232611f16565b61123a611f20565b83156112965760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161128d9190613b3c565b60405180910390a15b50505050505050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061136a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061137a5750611379826120b5565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b6000806113b58361211f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361142857826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161141f91906133b3565b60405180910390fd5b80915050919050565b60008061143c611381565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611491838383600161216a565b505050565b6000806114a1611381565b905060006114ae8561211f565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146114f0576114ef81858761233e565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115835761153260008660008061216a565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116085760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6116f3612402565b6116fd8282612442565b5050565b611709612402565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806117b857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661179f61247f565b73ffffffffffffffffffffffffffffffffffffffff1614155b156117ef576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117f961147c565b73ffffffffffffffffffffffffffffffffffffffff16611817610be4565b73ffffffffffffffffffffffffffffffffffffffff161461186d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611864906137c8565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118d857506040513d601f19601f820116820180604052508101906118d59190613b83565b60015b61191957816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161191091906130d8565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461198057806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611977919061335c565b60405180910390fd5b61198a83836124d6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611a14576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611a20611381565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a9357826040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611a8a91906130d8565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051611b869190612f67565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611d3e578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611bf39493929190613c05565b6020604051808303816000875af1925050508015611c2f57506040513d601f19601f82011682018060405250810190611c2c9190613c66565b60015b611cb3573d8060008114611c5f576040519150601f19603f3d011682016040523d82523d6000602084013e611c64565b606091505b506000815103611cab57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ca291906130d8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611d3391906130d8565b60405180910390fd5b505b5050505050565b60606000611d51612549565b9050611d5c836113a9565b5060008160000160008581526020019081526020016000208054611d7f906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611dab906136d6565b8015611df85780601f10611dcd57610100808354040283529160200191611df8565b820191906000526020600020905b815481529060010190602001808311611ddb57829003601f168201915b505050505090506000611e09612571565b90506000815103611e1f57819350505050611e64565b600082511115611e55578082604051602001611e3c929190613ccf565b6040516020818303038152906040529350505050611e64565b611e5e85612588565b93505050505b919050565b600081600001549050919050565b6001816000016000828254019250508190555050565b611ea78282604051806020016040528060008152506125f1565b5050565b6000611eb5612549565b9050818160000160008581526020019081526020016000209081611ed99190613cf3565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051611f0991906133b3565b60405180910390a1505050565b611f1e612402565b565b6000611f2a6116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611f785750825b9050600060018367ffffffffffffffff16148015611fad575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611fbb575080155b15611ff2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156120425760018560000160086101000a81548160ff0219169083151502179055505b61204a612615565b61205261261f565b83156120ae5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516120a59190613b3c565b60405180910390a15b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061212a611381565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000612174611381565b905081806121af5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156122e35760006121bf856113a9565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561222a57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561223d575061223b8185610e1e565b155b1561227f57836040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161227691906130d8565b60405180910390fd5b82156122e157848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61234983838361284c565b6123fd57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123be57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016123b591906133b3565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016123f4929190613dc5565b60405180910390fd5b505050565b61240a61290d565b612440576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61244a612402565b6000612454611381565b9050828160000190816124679190613cf3565b50818160010190816124799190613cf3565b50505050565b60006124ad7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61292d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6124df82612937565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561253c576125368282612a04565b50612545565b612544612a88565b5b5050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180602001604052806000815250905090565b6060612593826113a9565b50600061259e612571565b905060008151116125be57604051806020016040528060008152506125e9565b806125c884612ac5565b6040516020016125d9929190613ccf565b6040516020818303038152906040525b915050919050565b6125fb8383612b93565b61261061260661147c565b6000858585611b94565b505050565b61261d612402565b565b60006126296116c3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156126775750825b9050600060018367ffffffffffffffff161480156126ac575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156126ba575080155b156126f1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156127415760018560000160086101000a81548160ff0219169083151502179055505b600061274b61147c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35083156128455760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161283c9190613b3c565b60405180910390a15b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561290457508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806128c557506128c48484610e1e565b5b8061290357508273ffffffffffffffffffffffffffffffffffffffff166128eb83611431565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60006129176116c3565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361299357806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161298a91906130d8565b60405180910390fd5b806129c07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61292d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612a2e9190613e2a565b600060405180830381855af49150503d8060008114612a69576040519150601f19603f3d011682016040523d82523d6000602084013e612a6e565b606091505b5091509150612a7e858383612c8c565b9250505092915050565b6000341115612ac3576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060006001612ad484612d1b565b01905060008167ffffffffffffffff811115612af357612af26131bc565b5b6040519080825280601f01601f191660200182016040528015612b255781602001600182028036833780820191505090505b509050600082602001820190505b600115612b88578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612b7c57612b7b613e41565b5b04945060008503612b33575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c055760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612bfc91906130d8565b60405180910390fd5b6000612c1383836000611496565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612c875760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612c7e91906130d8565b60405180910390fd5b505050565b606082612ca157612c9c82612e6e565b612d13565b60008251148015612cc9575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15612d0b57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612d0291906130d8565b60405180910390fd5b819050612d14565b5b9392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612d79577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612d6f57612d6e613e41565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612db6576d04ee2d6d415b85acef81000000008381612dac57612dab613e41565b5b0492506020810190505b662386f26fc100008310612de557662386f26fc100008381612ddb57612dda613e41565b5b0492506010810190505b6305f5e1008310612e0e576305f5e1008381612e0457612e03613e41565b5b0492506008810190505b6127108310612e33576127108381612e2957612e28613e41565b5b0492506004810190505b60648310612e565760648381612e4c57612e4b613e41565b5b0492506002810190505b600a8310612e65576001810190505b80915050919050565b600081511115612e815780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612efc81612ec7565b8114612f0757600080fd5b50565b600081359050612f1981612ef3565b92915050565b600060208284031215612f3557612f34612ebd565b5b6000612f4384828501612f0a565b91505092915050565b60008115159050919050565b612f6181612f4c565b82525050565b6000602082019050612f7c6000830184612f58565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fbc578082015181840152602081019050612fa1565b60008484015250505050565b6000601f19601f8301169050919050565b6000612fe482612f82565b612fee8185612f8d565b9350612ffe818560208601612f9e565b61300781612fc8565b840191505092915050565b6000602082019050818103600083015261302c8184612fd9565b905092915050565b6000819050919050565b61304781613034565b811461305257600080fd5b50565b6000813590506130648161303e565b92915050565b6000602082840312156130805761307f612ebd565b5b600061308e84828501613055565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006130c282613097565b9050919050565b6130d2816130b7565b82525050565b60006020820190506130ed60008301846130c9565b92915050565b6130fc816130b7565b811461310757600080fd5b50565b600081359050613119816130f3565b92915050565b6000806040838503121561313657613135612ebd565b5b60006131448582860161310a565b925050602061315585828601613055565b9150509250929050565b60008060006060848603121561317857613177612ebd565b5b60006131868682870161310a565b93505060206131978682870161310a565b92505060406131a886828701613055565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131f482612fc8565b810181811067ffffffffffffffff82111715613213576132126131bc565b5b80604052505050565b6000613226612eb3565b905061323282826131eb565b919050565b600067ffffffffffffffff821115613252576132516131bc565b5b61325b82612fc8565b9050602081019050919050565b82818337600083830152505050565b600061328a61328584613237565b61321c565b9050828152602081018484840111156132a6576132a56131b7565b5b6132b1848285613268565b509392505050565b600082601f8301126132ce576132cd6131b2565b5b81356132de848260208601613277565b91505092915050565b600080604083850312156132fe576132fd612ebd565b5b600061330c8582860161310a565b925050602083013567ffffffffffffffff81111561332d5761332c612ec2565b5b613339858286016132b9565b9150509250929050565b6000819050919050565b61335681613343565b82525050565b6000602082019050613371600083018461334d565b92915050565b60006020828403121561338d5761338c612ebd565b5b600061339b8482850161310a565b91505092915050565b6133ad81613034565b82525050565b60006020820190506133c860008301846133a4565b92915050565b6133d781612f4c565b81146133e257600080fd5b50565b6000813590506133f4816133ce565b92915050565b6000806040838503121561341157613410612ebd565b5b600061341f8582860161310a565b9250506020613430858286016133e5565b9150509250929050565b6000806000806080858703121561345457613453612ebd565b5b60006134628782880161310a565b94505060206134738782880161310a565b935050604061348487828801613055565b925050606085013567ffffffffffffffff8111156134a5576134a4612ec2565b5b6134b1878288016132b9565b91505092959194509250565b600067ffffffffffffffff8211156134d8576134d76131bc565b5b6134e182612fc8565b9050602081019050919050565b60006135016134fc846134bd565b61321c565b90508281526020810184848401111561351d5761351c6131b7565b5b613528848285613268565b509392505050565b600082601f830112613545576135446131b2565b5b81356135558482602086016134ee565b91505092915050565b6000806040838503121561357557613574612ebd565b5b60006135838582860161310a565b925050602083013567ffffffffffffffff8111156135a4576135a3612ec2565b5b6135b085828601613530565b9150509250929050565b600080604083850312156135d1576135d0612ebd565b5b60006135df8582860161310a565b92505060206135f08582860161310a565b9150509250929050565b600080fd5b600080fd5b60008083601f84011261361a576136196131b2565b5b8235905067ffffffffffffffff811115613637576136366135fa565b5b602083019150836001820283011115613653576136526135ff565b5b9250929050565b6000806020838503121561367157613670612ebd565b5b600083013567ffffffffffffffff81111561368f5761368e612ec2565b5b61369b85828601613604565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806136ee57607f821691505b602082108103613701576137006136a7565b5b50919050565b600060608201905061371c60008301866130c9565b61372960208301856133a4565b61373660408301846130c9565b949350505050565b600067ffffffffffffffff82169050919050565b61375b8161373e565b82525050565b60006020820190506137766000830184613752565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006137b2602083612f8d565b91506137bd8261377c565b602082019050919050565b600060208201905081810360008301526137e1816137a5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613844602683612f8d565b915061384f826137e8565b604082019050919050565b6000602082019050818103600083015261387381613837565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026138e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138aa565b6138f186836138aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061392e61392961392484613034565b613909565b613034565b9050919050565b6000819050919050565b61394883613913565b61395c61395482613935565b8484546138b7565b825550505050565b600090565b613971613964565b61397c81848461393f565b505050565b5b818110156139a057613995600082613969565b600181019050613982565b5050565b601f8211156139e5576139b681613885565b6139bf8461389a565b810160208510156139ce578190505b6139e26139da8561389a565b830182613981565b50505b505050565b600082821c905092915050565b6000613a08600019846008026139ea565b1980831691505092915050565b6000613a2183836139f7565b9150826002028217905092915050565b613a3b838361387a565b67ffffffffffffffff811115613a5457613a536131bc565b5b613a5e82546136d6565b613a698282856139a4565b6000601f831160018114613a985760008415613a86578287013590505b613a908582613a15565b865550613af8565b601f198416613aa686613885565b60005b82811015613ace57848901358255600182019150602085019450602081019050613aa9565b86831015613aeb5784890135613ae7601f8916826139f7565b8355505b6001600288020188555050505b50505050505050565b6000819050919050565b6000613b26613b21613b1c84613b01565b613909565b61373e565b9050919050565b613b3681613b0b565b82525050565b6000602082019050613b516000830184613b2d565b92915050565b613b6081613343565b8114613b6b57600080fd5b50565b600081519050613b7d81613b57565b92915050565b600060208284031215613b9957613b98612ebd565b5b6000613ba784828501613b6e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613bd782613bb0565b613be18185613bbb565b9350613bf1818560208601612f9e565b613bfa81612fc8565b840191505092915050565b6000608082019050613c1a60008301876130c9565b613c2760208301866130c9565b613c3460408301856133a4565b8181036060830152613c468184613bcc565b905095945050505050565b600081519050613c6081612ef3565b92915050565b600060208284031215613c7c57613c7b612ebd565b5b6000613c8a84828501613c51565b91505092915050565b600081905092915050565b6000613ca982612f82565b613cb38185613c93565b9350613cc3818560208601612f9e565b80840191505092915050565b6000613cdb8285613c9e565b9150613ce78284613c9e565b91508190509392505050565b613cfc82612f82565b67ffffffffffffffff811115613d1557613d146131bc565b5b613d1f82546136d6565b613d2a8282856139a4565b600060209050601f831160018114613d5d5760008415613d4b578287015190505b613d558582613a15565b865550613dbd565b601f198416613d6b86613885565b60005b82811015613d9357848901518255600182019150602085019450602081019050613d6e565b86831015613db05784890151613dac601f8916826139f7565b8355505b6001600288020188555050505b505050505050565b6000604082019050613dda60008301856130c9565b613de760208301846133a4565b9392505050565b600081905092915050565b6000613e0482613bb0565b613e0e8185613dee565b9350613e1e818560208601612f9e565b80840191505092915050565b6000613e368284613df9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220380bd5a68b98e6bd78843a94bafc7cfff04bf64efe3ba420922bca30d80de38c64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD204C45E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xD7B518A8 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xEF690CC0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x554 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x432 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x348 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2DE23337 EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2F1F JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x311F JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH2 0x7B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x32E7 JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x3377 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH2 0xAAA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x355E JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x3377 JUMP JUMPDEST PUSH2 0xF4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x365A JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5D7 JUMPI POP PUSH2 0x5D6 DUP3 PUSH2 0x129F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5EA PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x5FB SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x627 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x674 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x649 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x674 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x657 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH2 0x694 DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AD DUP3 DUP3 PUSH2 0x6A8 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1484 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x737 DUP4 DUP4 PUSH2 0x732 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AD JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x7BF PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x80A JUMPI POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8FD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F75725570677261646561626C654E4654000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F554E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x905 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x978 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCFD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x985 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x98E DUP3 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x998 DUP3 DUP3 PUSH2 0x1870 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A6 PUSH2 0x198F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DA DUP3 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9EC PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAD0 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC19 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC2A SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC56 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0xCB9 PUSH2 0x147C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1A16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xD08 DUP5 DUP5 DUP5 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD13 PUSH2 0x147C JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD2D DUP3 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3C PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5A PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA7 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDBC PUSH1 0x33 PUSH2 0x1E69 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC8 PUSH1 0x33 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0xDD2 DUP4 DUP3 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xDDC DUP2 DUP4 PUSH2 0x1EAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6577205570677261646561626C6520576F726C642100000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE29 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH2 0xECD SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF9 SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xF56 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF74 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP1 PUSH2 0x385A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1100 PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x114E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1183 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1191 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP7 PUSH1 0x32 SWAP2 DUP3 PUSH2 0x1229 SWAP3 SWAP2 SWAP1 PUSH2 0x3A31 JUMP JUMPDEST POP PUSH2 0x1232 PUSH2 0x1F16 JUMP JUMPDEST PUSH2 0x123A PUSH2 0x1F20 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x136A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x137A JUMPI POP PUSH2 0x1379 DUP3 PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B5 DUP4 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1428 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x143C PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1491 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x216A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14A1 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14AE DUP6 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14F0 JUMPI PUSH2 0x14EF DUP2 DUP6 DUP8 PUSH2 0x233E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1583 JUMPI PUSH2 0x1532 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1608 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16F3 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x16FD DUP3 DUP3 PUSH2 0x2442 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1709 PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x17B8 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x179F PUSH2 0x247F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17F9 PUSH2 0x147C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1817 PUSH2 0xBE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1864 SWAP1 PUSH2 0x37C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18D8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1919 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1980 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1977 SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x198A DUP4 DUP4 PUSH2 0x24D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A14 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A93 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B86 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1D3E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C2F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CB3 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1CAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA2 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D51 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D5C DUP4 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1D7F SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DAB SWAP1 PUSH2 0x36D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DCD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E1F JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1E55 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E3C SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0x1E64 JUMP JUMPDEST PUSH2 0x1E5E DUP6 PUSH2 0x2588 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EA7 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x25F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F09 SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1F1E PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2A PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F78 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FAD JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1FBB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2042 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x204A PUSH2 0x2615 JUMP JUMPDEST PUSH2 0x2052 PUSH2 0x261F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20AE JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x20A5 SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212A PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2174 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x21AF JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x0 PUSH2 0x21BF DUP6 PUSH2 0x13A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x222A JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x223D JUMPI POP PUSH2 0x223B DUP2 DUP6 PUSH2 0xE1E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x227F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2276 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x22E1 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2349 DUP4 DUP4 DUP4 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x23FD JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B5 SWAP2 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x290D JUMP JUMPDEST PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x244A PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2454 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2479 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24DF DUP3 PUSH2 0x2937 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x253C JUMPI PUSH2 0x2536 DUP3 DUP3 PUSH2 0x2A04 JUMP JUMPDEST POP PUSH2 0x2545 JUMP JUMPDEST PUSH2 0x2544 PUSH2 0x2A88 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2593 DUP3 PUSH2 0x13A9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x259E PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x25E9 JUMP JUMPDEST DUP1 PUSH2 0x25C8 DUP5 PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25FB DUP4 DUP4 PUSH2 0x2B93 JUMP JUMPDEST PUSH2 0x2610 PUSH2 0x2606 PUSH2 0x147C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1B94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x261D PUSH2 0x2402 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2677 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x26AC JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x26BA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x26F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2741 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x147C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0x2845 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x283C SWAP2 SWAP1 PUSH2 0x3B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2904 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x28C5 JUMPI POP PUSH2 0x28C4 DUP5 DUP5 PUSH2 0xE1E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2903 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28EB DUP4 PUSH2 0x1431 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2917 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2993 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298A SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x29C0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A2E SWAP2 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A69 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A7E DUP6 DUP4 DUP4 PUSH2 0x2C8C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2AC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2AD4 DUP5 PUSH2 0x2D1B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B25 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2B88 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2B7C JUMPI PUSH2 0x2B7B PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2B33 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BFC SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C13 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C87 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C7E SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2CA1 JUMPI PUSH2 0x2C9C DUP3 PUSH2 0x2E6E JUMP JUMPDEST PUSH2 0x2D13 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2CC9 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2D0B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D02 SWAP2 SWAP1 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2D14 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2D79 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2D6F JUMPI PUSH2 0x2D6E PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2DB6 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2DAC JUMPI PUSH2 0x2DAB PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2DE5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2DDB JUMPI PUSH2 0x2DDA PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2E0E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2E04 JUMPI PUSH2 0x2E03 PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2E33 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2E29 JUMPI PUSH2 0x2E28 PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2E56 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2E4C JUMPI PUSH2 0x2E4B PUSH2 0x3E41 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E65 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E81 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFC DUP2 PUSH2 0x2EC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F19 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F35 JUMPI PUSH2 0x2F34 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F43 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F61 DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE4 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x2FEE DUP2 DUP6 PUSH2 0x2F8D JUMP JUMPDEST SWAP4 POP PUSH2 0x2FFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3007 DUP2 PUSH2 0x2FC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x302C DUP2 DUP5 PUSH2 0x2FD9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3047 DUP2 PUSH2 0x3034 JUMP JUMPDEST DUP2 EQ PUSH2 0x3052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3064 DUP2 PUSH2 0x303E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3080 JUMPI PUSH2 0x307F PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x308E DUP5 DUP3 DUP6 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C2 DUP3 PUSH2 0x3097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D2 DUP2 PUSH2 0x30B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30FC DUP2 PUSH2 0x30B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3119 DUP2 PUSH2 0x30F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3136 JUMPI PUSH2 0x3135 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3144 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3155 DUP6 DUP3 DUP7 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3178 JUMPI PUSH2 0x3177 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3186 DUP7 DUP3 DUP8 ADD PUSH2 0x310A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3197 DUP7 DUP3 DUP8 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31A8 DUP7 DUP3 DUP8 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x31F4 DUP3 PUSH2 0x2FC8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3213 JUMPI PUSH2 0x3212 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3226 PUSH2 0x2EB3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3232 DUP3 DUP3 PUSH2 0x31EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x325B DUP3 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328A PUSH2 0x3285 DUP5 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0x321C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32A6 JUMPI PUSH2 0x32A5 PUSH2 0x31B7 JUMP JUMPDEST JUMPDEST PUSH2 0x32B1 DUP5 DUP3 DUP6 PUSH2 0x3268 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32CE JUMPI PUSH2 0x32CD PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FE JUMPI PUSH2 0x32FD PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330C DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x332D JUMPI PUSH2 0x332C PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x3339 DUP6 DUP3 DUP7 ADD PUSH2 0x32B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3356 DUP2 PUSH2 0x3343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3371 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x334D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x338D JUMPI PUSH2 0x338C PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x339B DUP5 DUP3 DUP6 ADD PUSH2 0x310A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33AD DUP2 PUSH2 0x3034 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33D7 DUP2 PUSH2 0x2F4C JUMP JUMPDEST DUP2 EQ PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F4 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3411 JUMPI PUSH2 0x3410 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341F DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3430 DUP6 DUP3 DUP7 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3454 JUMPI PUSH2 0x3453 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3462 DUP8 DUP3 DUP9 ADD PUSH2 0x310A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3473 DUP8 DUP3 DUP9 ADD PUSH2 0x310A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3484 DUP8 DUP3 DUP9 ADD PUSH2 0x3055 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x34B1 DUP8 DUP3 DUP9 ADD PUSH2 0x32B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x34D8 JUMPI PUSH2 0x34D7 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x34E1 DUP3 PUSH2 0x2FC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3501 PUSH2 0x34FC DUP5 PUSH2 0x34BD JUMP JUMPDEST PUSH2 0x321C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x351D JUMPI PUSH2 0x351C PUSH2 0x31B7 JUMP JUMPDEST JUMPDEST PUSH2 0x3528 DUP5 DUP3 DUP6 PUSH2 0x3268 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3545 JUMPI PUSH2 0x3544 PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3555 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x34EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3575 JUMPI PUSH2 0x3574 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3583 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH2 0x35A3 PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x35B0 DUP6 DUP3 DUP7 ADD PUSH2 0x3530 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35D1 JUMPI PUSH2 0x35D0 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35DF DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F0 DUP6 DUP3 DUP7 ADD PUSH2 0x310A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x361A JUMPI PUSH2 0x3619 PUSH2 0x31B2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x35FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3653 JUMPI PUSH2 0x3652 PUSH2 0x35FF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3671 JUMPI PUSH2 0x3670 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368F JUMPI PUSH2 0x368E PUSH2 0x2EC2 JUMP JUMPDEST JUMPDEST PUSH2 0x369B DUP6 DUP3 DUP7 ADD PUSH2 0x3604 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x36EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3701 JUMPI PUSH2 0x3700 PUSH2 0x36A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x371C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3729 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x3736 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x375B DUP2 PUSH2 0x373E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B2 PUSH1 0x20 DUP4 PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP PUSH2 0x37BD DUP3 PUSH2 0x377C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E1 DUP2 PUSH2 0x37A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3844 PUSH1 0x26 DUP4 PUSH2 0x2F8D JUMP JUMPDEST SWAP2 POP PUSH2 0x384F DUP3 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3873 DUP2 PUSH2 0x3837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x38E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x38F1 DUP7 DUP4 PUSH2 0x38AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392E PUSH2 0x3929 PUSH2 0x3924 DUP5 PUSH2 0x3034 JUMP JUMPDEST PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x3034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3948 DUP4 PUSH2 0x3913 JUMP JUMPDEST PUSH2 0x395C PUSH2 0x3954 DUP3 PUSH2 0x3935 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x38B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3971 PUSH2 0x3964 JUMP JUMPDEST PUSH2 0x397C DUP2 DUP5 DUP5 PUSH2 0x393F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39A0 JUMPI PUSH2 0x3995 PUSH1 0x0 DUP3 PUSH2 0x3969 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3982 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39E5 JUMPI PUSH2 0x39B6 DUP2 PUSH2 0x3885 JUMP JUMPDEST PUSH2 0x39BF DUP5 PUSH2 0x389A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x39CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x39E2 PUSH2 0x39DA DUP6 PUSH2 0x389A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3981 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A08 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x39EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A21 DUP4 DUP4 PUSH2 0x39F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A3B DUP4 DUP4 PUSH2 0x387A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A54 JUMPI PUSH2 0x3A53 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x3A5E DUP3 SLOAD PUSH2 0x36D6 JUMP JUMPDEST PUSH2 0x3A69 DUP3 DUP3 DUP6 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3A98 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3A86 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x3A90 DUP6 DUP3 PUSH2 0x3A15 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3AF8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3AA6 DUP7 PUSH2 0x3885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3ACE JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AA9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3AEB JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x3AE7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B26 PUSH2 0x3B21 PUSH2 0x3B1C DUP5 PUSH2 0x3B01 JUMP JUMPDEST PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x373E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B36 DUP2 PUSH2 0x3B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B60 DUP2 PUSH2 0x3343 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B7D DUP2 PUSH2 0x3B57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BA7 DUP5 DUP3 DUP6 ADD PUSH2 0x3B6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD7 DUP3 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0x3BE1 DUP2 DUP6 PUSH2 0x3BBB JUMP JUMPDEST SWAP4 POP PUSH2 0x3BF1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3BFA DUP2 PUSH2 0x2FC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C1A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3C27 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3C34 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C46 DUP2 DUP5 PUSH2 0x3BCC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C60 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C7C JUMPI PUSH2 0x3C7B PUSH2 0x2EBD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C8A DUP5 DUP3 DUP6 ADD PUSH2 0x3C51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CA9 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH2 0x3CB3 DUP2 DUP6 PUSH2 0x3C93 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CC3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDB DUP3 DUP6 PUSH2 0x3C9E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE7 DUP3 DUP5 PUSH2 0x3C9E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3CFC DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x31BC JUMP JUMPDEST JUMPDEST PUSH2 0x3D1F DUP3 SLOAD PUSH2 0x36D6 JUMP JUMPDEST PUSH2 0x3D2A DUP3 DUP3 DUP6 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D5D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3D4B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3D55 DUP6 DUP3 PUSH2 0x3A15 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3D6B DUP7 PUSH2 0x3885 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3D93 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D6E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3DB0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3DAC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x39F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DDA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30C9 JUMP JUMPDEST PUSH2 0x3DE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E04 DUP3 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0x3E0E DUP2 DUP6 PUSH2 0x3DEE JUMP JUMPDEST SWAP4 POP PUSH2 0x3E1E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E36 DUP3 DUP5 PUSH2 0x3DF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SIGNEXTEND 0xD5 0xA6 DUP12 SWAP9 0xE6 0xBD PUSH25 0x843A94BAFC7CFFF04BF64EFE3BA420922BCA30D80DE38C6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"298:978:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:218:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3545:146:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4791:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4617:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5494:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;510:144:22;;;;;;;;;;;;;:::i;:::-;;6138:132:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:118:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3043:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1965:145:23;;;;;;;;;;;;;:::i;:::-;;1333:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3755:150:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5012:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6336:233:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1101:170:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;662:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5222:210:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:22:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2259:240:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;457:163:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1844:218:27;1957:4;944:10;937:18;;1980:35;;;:11;:35;;;;:75;;;;2019:36;2043:11;2019:23;:36::i;:::-;1980:75;1973:82;;1844:218;;;:::o;3545:146:26:-;3590:13;3615:23;3641:19;:17;:19::i;:::-;3615:45;;3677:1;:7;;3670:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:146;:::o;4791:154::-;4858:7;4877:22;4891:7;4877:13;:22::i;:::-;;4917:21;4930:7;4917:12;:21::i;:::-;4910:28;;4791:154;;;:::o;4617:113::-;4688:35;4697:2;4701:7;4710:12;:10;:12::i;:::-;4688:8;:35::i;:::-;4617:113;;:::o;5494:578::-;5602:1;5588:16;;:2;:16;;;5584:87;;5657:1;5627:33;;;;;;;;;;;:::i;:::-;;;;;;;;5584:87;5889:21;5913:34;5921:2;5925:7;5934:12;:10;:12::i;:::-;5913:7;:34::i;:::-;5889:58;;5978:4;5961:21;;:13;:21;;;5957:109;;6026:4;6032:7;6041:13;6005:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5957:109;5574:498;5494:578;;;:::o;510:144:22:-;555:1;6357:30:24;6390:26;:24;:26::i;:::-;6357:59;;6431:1;:15;;;;;;;;;;;;:44;;;;6468:7;6450:25;;:1;:14;;;;;;;;;;;;:25;;;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6558:7;6541:1;:14;;;:24;;;;;;;;;;;;;;;;;;6593:4;6575:1;:15;;;:22;;;;;;;;;;;;;;;;;;569:41:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:13:::1;:41::i;:::-;621:25;:23;:25::i;:::-;6636:5:24::0;6618:1;:15;;;:23;;;;;;;;;;;;;;;;;;6656:20;6668:7;6656:20;;;;;;:::i;:::-;;;;;;;;6291:392;510:144:22;:::o;6138:132:26:-;6224:39;6241:4;6247:2;6251:7;6224:39;;;;;;;;;;;;:16;:39::i;:::-;6138:132;;;:::o;4161:214:25:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:6::1;3803:32:25;;3796:39;;3708:134:::0;:::o;3365:118:26:-;3428:7;3454:22;3468:7;3454:13;:22::i;:::-;3447:29;;3365:118;;;:::o;3043:265::-;3106:7;3125:23;3151:19;:17;:19::i;:::-;3125:45;;3201:1;3184:19;;:5;:19;;;3180:87;;3253:1;3226:30;;;;;;;;;;;:::i;:::-;;;;;;;;3180:87;3283:1;:11;;:18;3295:5;3283:18;;;;;;;;;;;;;;;;3276:25;;;3043:265;;;:::o;1965:145:23:-;1556:12;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2071:1:::1;2034:40;;2055:6;::::0;::::1;;;;;;;;2034:40;;;;;;;;;;;;2101:1;2084:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1965:145::o:0;1333:85::-;1379:7;1405:6;;;;;;;;;;;1398:13;;1333:85;:::o;3755:150:26:-;3802:13;3827:23;3853:19;:17;:19::i;:::-;3827:45;;3889:1;:9;;3882:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3755:150;:::o;5012:144::-;5097:52;5116:12;:10;:12::i;:::-;5130:8;5140;5097:18;:52::i;:::-;5012:144;;:::o;1819:58:25:-;;;;;;;;;;;;;;;;;;;:::o;6336:233:26:-;6449:31;6462:4;6468:2;6472:7;6449:12;:31::i;:::-;6490:72;6524:12;:10;:12::i;:::-;6538:4;6544:2;6548:7;6557:4;6490:33;:72::i;:::-;6336:233;;;;:::o;1101:170:22:-;1202:13;1240:23;1255:7;1240:14;:23::i;:::-;1233:30;;1101:170;;;:::o;779:244::-;1556:12:23;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;864:15:22::1;882:25;:15;:23;:25::i;:::-;864:43;;918:27;:15;:25;:27::i;:::-;956:22;966:2;970:7;956:9;:22::i;:::-;989:26;1002:7;1011:3;989:12;:26::i;:::-;853:170;779:244:::0;;:::o;662:109::-;706:13;732:31;;;;;;;;;;;;;;;;;;;662:109;:::o;5222:210:26:-;5310:4;5326:23;5352:19;:17;:19::i;:::-;5326:45;;5388:1;:20;;:27;5409:5;5388:27;;;;;;;;;;;;;;;:37;5416:8;5388:37;;;;;;;;;;;;;;;;;;;;;;;;;5381:44;;;5222:210;;;;:::o;428:22:21:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2259:240:23:-;1556:12;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2367:1:::1;2347:22;;:8;:22;;::::0;2339:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2456:8;2427:38;;2448:6;::::0;::::1;;;;;;;;2427:38;;;;;;;;;;;;2484:8;2475:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2259:240:::0;:::o;457:163:21:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;544:9:21::1;;533:8;:20;;;;;;;:::i;:::-;;563:24;:22;:24::i;:::-;597:16;:14;:16::i;:::-;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;457:163:21;;:::o;2673:311:26:-;2786:4;2836:25;2821:40;;;:11;:40;;;;:104;;;;2892:33;2877:48;;;:11;:48;;;;2821:104;:156;;;;2941:36;2965:11;2941:23;:36::i;:::-;2821:156;2802:175;;2673:311;;;:::o;1957:156::-;2008:23;2076:21;2066:31;;1957:156;:::o;17910:241::-;17973:7;17992:13;18008:17;18017:7;18008:8;:17::i;:::-;17992:33;;18056:1;18039:19;;:5;:19;;;18035:88;;18104:7;18081:31;;;;;;;;;;;:::i;:::-;;;;;;;;18035:88;18139:5;18132:12;;;17910:241;;;:::o;7372:184::-;7442:7;7461:23;7487:19;:17;:19::i;:::-;7461:45;;7523:1;:17;;:26;7541:7;7523:26;;;;;;;;;;;;;;;;;;;;;7516:33;;;7372:184;;;:::o;887:96:28:-;940:7;966:10;959:17;;887:96;:::o;16076:120:26:-;16156:33;16165:2;16169:7;16178:4;16184;16156:8;:33::i;:::-;16076:120;;;:::o;10384:856::-;10470:7;10489:23;10515:19;:17;:19::i;:::-;10489:45;;10544:12;10559:17;10568:7;10559:8;:17::i;:::-;10544:32;;10652:1;10636:18;;:4;:18;;;10632:86;;10670:37;10687:4;10693;10699:7;10670:16;:37::i;:::-;10632:86;10778:1;10762:18;;:4;:18;;;10758:258;;10878:48;10895:1;10899:7;10916:1;10920:5;10878:8;:48::i;:::-;10990:1;10969;:11;;:17;10981:4;10969:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10758:258;11044:1;11030:16;;:2;:16;;;11026:109;;11109:1;11090;:11;;:15;11102:2;11090:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11026:109;11166:2;11145:1;:9;;:18;11155:7;11145:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11203:7;11199:2;11184:27;;11193:4;11184:27;;;;;;;;;;;;11229:4;11222:11;;;;10384:856;;;;;:::o;8737:170:24:-;8795:30;8870:21;8860:31;;8737:170;:::o;2232:149:26:-;6931:20:24;:18;:20::i;:::-;2335:39:26::1;2359:5;2366:7;2335:23;:39::i;:::-;2232:149:::0;;:::o;1627:68:27:-;6931:20:24;:18;:20::i;:::-;1627:68:27:o;4603:312:25:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;626:112:21:-;1556:12:23;:10;:12::i;:::-;1545:23;;:7;:5;:7::i;:::-;:23;;;1537:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;626:112:21;:::o;6057:538:25:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:6;6258:32:25;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;17306:369:26:-;17409:23;17435:19;:17;:19::i;:::-;17409:45;;17488:1;17468:22;;:8;:22;;;17464:91;;17535:8;17513:31;;;;;;;;;;;:::i;:::-;;;;;;;;17464:91;17604:8;17564:1;:20;;:27;17585:5;17564:27;;;;;;;;;;;;;;;:37;17592:8;17564:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17649:8;17627:41;;17642:5;17627:41;;;17659:8;17627:41;;;;;;:::i;:::-;;;;;;;;17399:276;17306:369;;;:::o;985:924:11:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;2128:670:27:-;2201:13;2226:33;2262:29;:27;:29::i;:::-;2226:65;;2301:22;2315:7;2301:13;:22::i;:::-;;2334:23;2360:1;:12;;:21;2373:7;2360:21;;;;;;;;;;;2334:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:18;2412:10;:8;:10::i;:::-;2391:31;;2517:1;2501:4;2495:18;:23;2491:70;;2541:9;2534:16;;;;;;;2491:70;2686:1;2666:9;2660:23;:27;2656:95;;;2724:4;2730:9;2710:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2703:37;;;;;;;2656:95;2768:23;2783:7;2768:14;:23::i;:::-;2761:30;;;;;2128:670;;;;:::o;838:112:29:-;903:7;929;:14;;;922:21;;838:112;;;:::o;956:123::-;1061:1;1043:7;:14;;;:19;;;;;;;;;;;956:123;:::o;12240:100:26:-;12307:26;12317:2;12321:7;12307:26;;;;;;;;;;;;:9;:26::i;:::-;12240:100;;:::o;2917:244:27:-;3008:33;3044:29;:27;:29::i;:::-;3008:65;;3107:9;3083:1;:12;;:21;3096:7;3083:21;;;;;;;;;;;:33;;;;;;:::i;:::-;;3131:23;3146:7;3131:23;;;;;;:::i;:::-;;;;;;;;2998:163;2917:244;;:::o;2970:67:25:-;6931:20:24;:18;:20::i;:::-;2970:67:25:o;933:126:23:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;990:26:23::1;:24;:26::i;:::-;1026;:24;:26::i;:::-;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;933:126:23:o;1035:146:30:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;7084:172:26:-;7150:7;7169:23;7195:19;:17;:19::i;:::-;7169:45;;7231:1;:9;;:18;7241:7;7231:18;;;;;;;;;;;;;;;;;;;;;7224:25;;;7084:172;;;:::o;16378:719::-;16482:23;16508:19;:17;:19::i;:::-;16482:45;;16593:9;:31;;;;16622:1;16606:18;;:4;:18;;;;16593:31;16589:460;;;16640:13;16656:22;16670:7;16656:13;:22::i;:::-;16640:38;;16822:1;16806:18;;:4;:18;;;;:35;;;;;16837:4;16828:13;;:5;:13;;;;16806:35;:69;;;;;16846:29;16863:5;16870:4;16846:16;:29::i;:::-;16845:30;16806:69;16802:142;;;16924:4;16902:27;;;;;;;;;;;:::i;:::-;;;;;;;;16802:142;16962:9;16958:81;;;17016:7;17012:2;16996:28;;17005:5;16996:28;;;;;;;;;;;;16958:81;16626:423;16589:460;17088:2;17059:1;:17;;:26;17077:7;17059:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16472:625;16378:719;;;;:::o;8571:368::-;8683:38;8697:5;8704:7;8713;8683:13;:38::i;:::-;8678:255;;8758:1;8741:19;;:5;:19;;;8737:186;;8810:7;8787:31;;;;;;;;;;;:::i;:::-;;;;;;;;8737:186;8891:7;8900;8864:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8678:255;8571:368;;;:::o;7084:141:24:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2387:219:26:-;6931:20:24;:18;:20::i;:::-;2500:23:26::1;2526:19;:17;:19::i;:::-;2500:45;;2565:5;2555:1;:7;;:15;;;;;;:::i;:::-;;2592:7;2580:1;:9;;:19;;;;;;:::i;:::-;;2490:116;2387:219:::0;;:::o;1441:138:6:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;1435:186:27:-;1496:33;1574:31;1564:41;;1435:186;:::o;4468:92:26:-;4519:13;4544:9;;;;;;;;;;;;;;4468:92;:::o;3971:255::-;4035:13;4060:22;4074:7;4060:13;:22::i;:::-;;4093:21;4117:10;:8;:10::i;:::-;4093:34;;4168:1;4150:7;4144:21;:25;:75;;;;;;;;;;;;;;;;;4186:7;4195:18;:7;:16;:18::i;:::-;4172:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4144:75;4137:82;;;3971:255;;;:::o;12561:207::-;12655:18;12661:2;12665:7;12655:5;:18::i;:::-;12683:78;12717:12;:10;:12::i;:::-;12739:1;12743:2;12747:7;12756:4;12683:33;:78::i;:::-;12561:207;;;:::o;813:69:28:-;6931:20:24;:18;:20::i;:::-;813:69:28:o;1065:192:23:-;4158:30:24;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1132:17:23::1;1152:12;:10;:12::i;:::-;1132:32;;1183:9;1174:6;::::0;:18:::1;;;;;;;;;;;;;;;;;;1240:9;1207:43;;1236:1;1207:43;;;;;;;;;;;;1122:135;5070:14:24::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1065:192:23:o;7867:272:26:-;7970:4;8024:1;8005:21;;:7;:21;;;;:127;;;;;8052:7;8043:16;;:5;:16;;;:52;;;;8063:32;8080:5;8087:7;8063:16;:32::i;:::-;8043:52;:88;;;;8124:7;8099:32;;:21;8112:7;8099:12;:21::i;:::-;:32;;;8043:88;8005:127;7986:146;;7867:272;;;;;:::o;8487:120:24:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;1899:163:15:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:6:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:12:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:6:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;987:632:16:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;11562:327:26:-;11643:1;11629:16;;:2;:16;;;11625:87;;11698:1;11668:33;;;;;;;;;;;:::i;:::-;;;;;;;;11625:87;11721:21;11745:32;11753:2;11757:7;11774:1;11745:7;:32::i;:::-;11721:56;;11816:1;11791:27;;:13;:27;;;11787:96;;11869:1;11841:31;;;;;;;;;;;:::i;:::-;;;;;;;;11787:96;11615:274;11562:327;;:::o;4437:582:12:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;25316:916:18:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;5559:487:12:-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:31;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:117::-;5626:1;5623;5616:12;5640:117;5749:1;5746;5739:12;5763:180;5811:77;5808:1;5801:88;5908:4;5905:1;5898:15;5932:4;5929:1;5922:15;5949:281;6032:27;6054:4;6032:27;:::i;:::-;6024:6;6020:40;6162:6;6150:10;6147:22;6126:18;6114:10;6111:34;6108:62;6105:88;;;6173:18;;:::i;:::-;6105:88;6213:10;6209:2;6202:22;5992:238;5949:281;;:::o;6236:129::-;6270:6;6297:20;;:::i;:::-;6287:30;;6326:33;6354:4;6346:6;6326:33;:::i;:::-;6236:129;;;:::o;6371:307::-;6432:4;6522:18;6514:6;6511:30;6508:56;;;6544:18;;:::i;:::-;6508:56;6582:29;6604:6;6582:29;:::i;:::-;6574:37;;6666:4;6660;6656:15;6648:23;;6371:307;;;:::o;6684:148::-;6782:6;6777:3;6772;6759:30;6823:1;6814:6;6809:3;6805:16;6798:27;6684:148;;;:::o;6838:423::-;6915:5;6940:65;6956:48;6997:6;6956:48;:::i;:::-;6940:65;:::i;:::-;6931:74;;7028:6;7021:5;7014:21;7066:4;7059:5;7055:16;7104:3;7095:6;7090:3;7086:16;7083:25;7080:112;;;7111:79;;:::i;:::-;7080:112;7201:54;7248:6;7243:3;7238;7201:54;:::i;:::-;6921:340;6838:423;;;;;:::o;7280:338::-;7335:5;7384:3;7377:4;7369:6;7365:17;7361:27;7351:122;;7392:79;;:::i;:::-;7351:122;7509:6;7496:20;7534:78;7608:3;7600:6;7593:4;7585:6;7581:17;7534:78;:::i;:::-;7525:87;;7341:277;7280:338;;;;:::o;7624:652::-;7701:6;7709;7758:2;7746:9;7737:7;7733:23;7729:32;7726:119;;;7764:79;;:::i;:::-;7726:119;7884:1;7909:53;7954:7;7945:6;7934:9;7930:22;7909:53;:::i;:::-;7899:63;;7855:117;8039:2;8028:9;8024:18;8011:32;8070:18;8062:6;8059:30;8056:117;;;8092:79;;:::i;:::-;8056:117;8197:62;8251:7;8242:6;8231:9;8227:22;8197:62;:::i;:::-;8187:72;;7982:287;7624:652;;;;;:::o;8282:77::-;8319:7;8348:5;8337:16;;8282:77;;;:::o;8365:118::-;8452:24;8470:5;8452:24;:::i;:::-;8447:3;8440:37;8365:118;;:::o;8489:222::-;8582:4;8620:2;8609:9;8605:18;8597:26;;8633:71;8701:1;8690:9;8686:17;8677:6;8633:71;:::i;:::-;8489:222;;;;:::o;8717:329::-;8776:6;8825:2;8813:9;8804:7;8800:23;8796:32;8793:119;;;8831:79;;:::i;:::-;8793:119;8951:1;8976:53;9021:7;9012:6;9001:9;8997:22;8976:53;:::i;:::-;8966:63;;8922:117;8717:329;;;;:::o;9052:118::-;9139:24;9157:5;9139:24;:::i;:::-;9134:3;9127:37;9052:118;;:::o;9176:222::-;9269:4;9307:2;9296:9;9292:18;9284:26;;9320:71;9388:1;9377:9;9373:17;9364:6;9320:71;:::i;:::-;9176:222;;;;:::o;9404:116::-;9474:21;9489:5;9474:21;:::i;:::-;9467:5;9464:32;9454:60;;9510:1;9507;9500:12;9454:60;9404:116;:::o;9526:133::-;9569:5;9607:6;9594:20;9585:29;;9623:30;9647:5;9623:30;:::i;:::-;9526:133;;;;:::o;9665:468::-;9730:6;9738;9787:2;9775:9;9766:7;9762:23;9758:32;9755:119;;;9793:79;;:::i;:::-;9755:119;9913:1;9938:53;9983:7;9974:6;9963:9;9959:22;9938:53;:::i;:::-;9928:63;;9884:117;10040:2;10066:50;10108:7;10099:6;10088:9;10084:22;10066:50;:::i;:::-;10056:60;;10011:115;9665:468;;;;;:::o;10139:943::-;10234:6;10242;10250;10258;10307:3;10295:9;10286:7;10282:23;10278:33;10275:120;;;10314:79;;:::i;:::-;10275:120;10434:1;10459:53;10504:7;10495:6;10484:9;10480:22;10459:53;:::i;:::-;10449:63;;10405:117;10561:2;10587:53;10632:7;10623:6;10612:9;10608:22;10587:53;:::i;:::-;10577:63;;10532:118;10689:2;10715:53;10760:7;10751:6;10740:9;10736:22;10715:53;:::i;:::-;10705:63;;10660:118;10845:2;10834:9;10830:18;10817:32;10876:18;10868:6;10865:30;10862:117;;;10898:79;;:::i;:::-;10862:117;11003:62;11057:7;11048:6;11037:9;11033:22;11003:62;:::i;:::-;10993:72;;10788:287;10139:943;;;;;;;:::o;11088:308::-;11150:4;11240:18;11232:6;11229:30;11226:56;;;11262:18;;:::i;:::-;11226:56;11300:29;11322:6;11300:29;:::i;:::-;11292:37;;11384:4;11378;11374:15;11366:23;;11088:308;;;:::o;11402:425::-;11480:5;11505:66;11521:49;11563:6;11521:49;:::i;:::-;11505:66;:::i;:::-;11496:75;;11594:6;11587:5;11580:21;11632:4;11625:5;11621:16;11670:3;11661:6;11656:3;11652:16;11649:25;11646:112;;;11677:79;;:::i;:::-;11646:112;11767:54;11814:6;11809:3;11804;11767:54;:::i;:::-;11486:341;11402:425;;;;;:::o;11847:340::-;11903:5;11952:3;11945:4;11937:6;11933:17;11929:27;11919:122;;11960:79;;:::i;:::-;11919:122;12077:6;12064:20;12102:79;12177:3;12169:6;12162:4;12154:6;12150:17;12102:79;:::i;:::-;12093:88;;11909:278;11847:340;;;;:::o;12193:654::-;12271:6;12279;12328:2;12316:9;12307:7;12303:23;12299:32;12296:119;;;12334:79;;:::i;:::-;12296:119;12454:1;12479:53;12524:7;12515:6;12504:9;12500:22;12479:53;:::i;:::-;12469:63;;12425:117;12609:2;12598:9;12594:18;12581:32;12640:18;12632:6;12629:30;12626:117;;;12662:79;;:::i;:::-;12626:117;12767:63;12822:7;12813:6;12802:9;12798:22;12767:63;:::i;:::-;12757:73;;12552:288;12193:654;;;;;:::o;12853:474::-;12921:6;12929;12978:2;12966:9;12957:7;12953:23;12949:32;12946:119;;;12984:79;;:::i;:::-;12946:119;13104:1;13129:53;13174:7;13165:6;13154:9;13150:22;13129:53;:::i;:::-;13119:63;;13075:117;13231:2;13257:53;13302:7;13293:6;13282:9;13278:22;13257:53;:::i;:::-;13247:63;;13202:118;12853:474;;;;;:::o;13333:117::-;13442:1;13439;13432:12;13456:117;13565:1;13562;13555:12;13593:553;13651:8;13661:6;13711:3;13704:4;13696:6;13692:17;13688:27;13678:122;;13719:79;;:::i;:::-;13678:122;13832:6;13819:20;13809:30;;13862:18;13854:6;13851:30;13848:117;;;13884:79;;:::i;:::-;13848:117;13998:4;13990:6;13986:17;13974:29;;14052:3;14044:4;14036:6;14032:17;14022:8;14018:32;14015:41;14012:128;;;14059:79;;:::i;:::-;14012:128;13593:553;;;;;:::o;14152:529::-;14223:6;14231;14280:2;14268:9;14259:7;14255:23;14251:32;14248:119;;;14286:79;;:::i;:::-;14248:119;14434:1;14423:9;14419:17;14406:31;14464:18;14456:6;14453:30;14450:117;;;14486:79;;:::i;:::-;14450:117;14599:65;14656:7;14647:6;14636:9;14632:22;14599:65;:::i;:::-;14581:83;;;;14377:297;14152:529;;;;;:::o;14687:180::-;14735:77;14732:1;14725:88;14832:4;14829:1;14822:15;14856:4;14853:1;14846:15;14873:320;14917:6;14954:1;14948:4;14944:12;14934:22;;15001:1;14995:4;14991:12;15022:18;15012:81;;15078:4;15070:6;15066:17;15056:27;;15012:81;15140:2;15132:6;15129:14;15109:18;15106:38;15103:84;;15159:18;;:::i;:::-;15103:84;14924:269;14873:320;;;:::o;15199:442::-;15348:4;15386:2;15375:9;15371:18;15363:26;;15399:71;15467:1;15456:9;15452:17;15443:6;15399:71;:::i;:::-;15480:72;15548:2;15537:9;15533:18;15524:6;15480:72;:::i;:::-;15562;15630:2;15619:9;15615:18;15606:6;15562:72;:::i;:::-;15199:442;;;;;;:::o;15647:101::-;15683:7;15723:18;15716:5;15712:30;15701:41;;15647:101;;;:::o;15754:115::-;15839:23;15856:5;15839:23;:::i;:::-;15834:3;15827:36;15754:115;;:::o;15875:218::-;15966:4;16004:2;15993:9;15989:18;15981:26;;16017:69;16083:1;16072:9;16068:17;16059:6;16017:69;:::i;:::-;15875:218;;;;:::o;16099:182::-;16239:34;16235:1;16227:6;16223:14;16216:58;16099:182;:::o;16287:366::-;16429:3;16450:67;16514:2;16509:3;16450:67;:::i;:::-;16443:74;;16526:93;16615:3;16526:93;:::i;:::-;16644:2;16639:3;16635:12;16628:19;;16287:366;;;:::o;16659:419::-;16825:4;16863:2;16852:9;16848:18;16840:26;;16912:9;16906:4;16902:20;16898:1;16887:9;16883:17;16876:47;16940:131;17066:4;16940:131;:::i;:::-;16932:139;;16659:419;;;:::o;17084:225::-;17224:34;17220:1;17212:6;17208:14;17201:58;17293:8;17288:2;17280:6;17276:15;17269:33;17084:225;:::o;17315:366::-;17457:3;17478:67;17542:2;17537:3;17478:67;:::i;:::-;17471:74;;17554:93;17643:3;17554:93;:::i;:::-;17672:2;17667:3;17663:12;17656:19;;17315:366;;;:::o;17687:419::-;17853:4;17891:2;17880:9;17876:18;17868:26;;17940:9;17934:4;17930:20;17926:1;17915:9;17911:17;17904:47;17968:131;18094:4;17968:131;:::i;:::-;17960:139;;17687:419;;;:::o;18112:97::-;18171:6;18199:3;18189:13;;18112:97;;;;:::o;18215:141::-;18264:4;18287:3;18279:11;;18310:3;18307:1;18300:14;18344:4;18341:1;18331:18;18323:26;;18215:141;;;:::o;18362:93::-;18399:6;18446:2;18441;18434:5;18430:14;18426:23;18416:33;;18362:93;;;:::o;18461:107::-;18505:8;18555:5;18549:4;18545:16;18524:37;;18461:107;;;;:::o;18574:393::-;18643:6;18693:1;18681:10;18677:18;18716:97;18746:66;18735:9;18716:97;:::i;:::-;18834:39;18864:8;18853:9;18834:39;:::i;:::-;18822:51;;18906:4;18902:9;18895:5;18891:21;18882:30;;18955:4;18945:8;18941:19;18934:5;18931:30;18921:40;;18650:317;;18574:393;;;;;:::o;18973:60::-;19001:3;19022:5;19015:12;;18973:60;;;:::o;19039:142::-;19089:9;19122:53;19140:34;19149:24;19167:5;19149:24;:::i;:::-;19140:34;:::i;:::-;19122:53;:::i;:::-;19109:66;;19039:142;;;:::o;19187:75::-;19230:3;19251:5;19244:12;;19187:75;;;:::o;19268:269::-;19378:39;19409:7;19378:39;:::i;:::-;19439:91;19488:41;19512:16;19488:41;:::i;:::-;19480:6;19473:4;19467:11;19439:91;:::i;:::-;19433:4;19426:105;19344:193;19268:269;;;:::o;19543:73::-;19588:3;19543:73;:::o;19622:189::-;19699:32;;:::i;:::-;19740:65;19798:6;19790;19784:4;19740:65;:::i;:::-;19675:136;19622:189;;:::o;19817:186::-;19877:120;19894:3;19887:5;19884:14;19877:120;;;19948:39;19985:1;19978:5;19948:39;:::i;:::-;19921:1;19914:5;19910:13;19901:22;;19877:120;;;19817:186;;:::o;20009:543::-;20110:2;20105:3;20102:11;20099:446;;;20144:38;20176:5;20144:38;:::i;:::-;20228:29;20246:10;20228:29;:::i;:::-;20218:8;20214:44;20411:2;20399:10;20396:18;20393:49;;;20432:8;20417:23;;20393:49;20455:80;20511:22;20529:3;20511:22;:::i;:::-;20501:8;20497:37;20484:11;20455:80;:::i;:::-;20114:431;;20099:446;20009:543;;;:::o;20558:117::-;20612:8;20662:5;20656:4;20652:16;20631:37;;20558:117;;;;:::o;20681:169::-;20725:6;20758:51;20806:1;20802:6;20794:5;20791:1;20787:13;20758:51;:::i;:::-;20754:56;20839:4;20833;20829:15;20819:25;;20732:118;20681:169;;;;:::o;20855:295::-;20931:4;21077:29;21102:3;21096:4;21077:29;:::i;:::-;21069:37;;21139:3;21136:1;21132:11;21126:4;21123:21;21115:29;;20855:295;;;;:::o;21155:1403::-;21279:44;21319:3;21314;21279:44;:::i;:::-;21388:18;21380:6;21377:30;21374:56;;;21410:18;;:::i;:::-;21374:56;21454:38;21486:4;21480:11;21454:38;:::i;:::-;21539:67;21599:6;21591;21585:4;21539:67;:::i;:::-;21633:1;21662:2;21654:6;21651:14;21679:1;21674:632;;;;22350:1;22367:6;22364:84;;;22423:9;22418:3;22414:19;22401:33;22392:42;;22364:84;22474:67;22534:6;22527:5;22474:67;:::i;:::-;22468:4;22461:81;22323:229;21644:908;;21674:632;21726:4;21722:9;21714:6;21710:22;21760:37;21792:4;21760:37;:::i;:::-;21819:1;21833:215;21847:7;21844:1;21841:14;21833:215;;;21933:9;21928:3;21924:19;21911:33;21903:6;21896:49;21984:1;21976:6;21972:14;21962:24;;22031:2;22020:9;22016:18;22003:31;;21870:4;21867:1;21863:12;21858:17;;21833:215;;;22076:6;22067:7;22064:19;22061:186;;;22141:9;22136:3;22132:19;22119:33;22184:48;22226:4;22218:6;22214:17;22203:9;22184:48;:::i;:::-;22176:6;22169:64;22084:163;22061:186;22293:1;22289;22281:6;22277:14;22273:22;22267:4;22260:36;21681:625;;;21644:908;;21254:1304;;;21155:1403;;;:::o;22564:85::-;22609:7;22638:5;22627:16;;22564:85;;;:::o;22655:156::-;22712:9;22745:60;22762:42;22771:32;22797:5;22771:32;:::i;:::-;22762:42;:::i;:::-;22745:60;:::i;:::-;22732:73;;22655:156;;;:::o;22817:145::-;22911:44;22949:5;22911:44;:::i;:::-;22906:3;22899:57;22817:145;;:::o;22968:236::-;23068:4;23106:2;23095:9;23091:18;23083:26;;23119:78;23194:1;23183:9;23179:17;23170:6;23119:78;:::i;:::-;22968:236;;;;:::o;23210:122::-;23283:24;23301:5;23283:24;:::i;:::-;23276:5;23273:35;23263:63;;23322:1;23319;23312:12;23263:63;23210:122;:::o;23338:143::-;23395:5;23426:6;23420:13;23411:22;;23442:33;23469:5;23442:33;:::i;:::-;23338:143;;;;:::o;23487:351::-;23557:6;23606:2;23594:9;23585:7;23581:23;23577:32;23574:119;;;23612:79;;:::i;:::-;23574:119;23732:1;23757:64;23813:7;23804:6;23793:9;23789:22;23757:64;:::i;:::-;23747:74;;23703:128;23487:351;;;;:::o;23844:98::-;23895:6;23929:5;23923:12;23913:22;;23844:98;;;:::o;23948:168::-;24031:11;24065:6;24060:3;24053:19;24105:4;24100:3;24096:14;24081:29;;23948:168;;;;:::o;24122:373::-;24208:3;24236:38;24268:5;24236:38;:::i;:::-;24290:70;24353:6;24348:3;24290:70;:::i;:::-;24283:77;;24369:65;24427:6;24422:3;24415:4;24408:5;24404:16;24369:65;:::i;:::-;24459:29;24481:6;24459:29;:::i;:::-;24454:3;24450:39;24443:46;;24212:283;24122:373;;;;:::o;24501:640::-;24696:4;24734:3;24723:9;24719:19;24711:27;;24748:71;24816:1;24805:9;24801:17;24792:6;24748:71;:::i;:::-;24829:72;24897:2;24886:9;24882:18;24873:6;24829:72;:::i;:::-;24911;24979:2;24968:9;24964:18;24955:6;24911:72;:::i;:::-;25030:9;25024:4;25020:20;25015:2;25004:9;25000:18;24993:48;25058:76;25129:4;25120:6;25058:76;:::i;:::-;25050:84;;24501:640;;;;;;;:::o;25147:141::-;25203:5;25234:6;25228:13;25219:22;;25250:32;25276:5;25250:32;:::i;:::-;25147:141;;;;:::o;25294:349::-;25363:6;25412:2;25400:9;25391:7;25387:23;25383:32;25380:119;;;25418:79;;:::i;:::-;25380:119;25538:1;25563:63;25618:7;25609:6;25598:9;25594:22;25563:63;:::i;:::-;25553:73;;25509:127;25294:349;;;;:::o;25649:148::-;25751:11;25788:3;25773:18;;25649:148;;;;:::o;25803:390::-;25909:3;25937:39;25970:5;25937:39;:::i;:::-;25992:89;26074:6;26069:3;25992:89;:::i;:::-;25985:96;;26090:65;26148:6;26143:3;26136:4;26129:5;26125:16;26090:65;:::i;:::-;26180:6;26175:3;26171:16;26164:23;;25913:280;25803:390;;;;:::o;26199:435::-;26379:3;26401:95;26492:3;26483:6;26401:95;:::i;:::-;26394:102;;26513:95;26604:3;26595:6;26513:95;:::i;:::-;26506:102;;26625:3;26618:10;;26199:435;;;;;:::o;26640:1395::-;26757:37;26790:3;26757:37;:::i;:::-;26859:18;26851:6;26848:30;26845:56;;;26881:18;;:::i;:::-;26845:56;26925:38;26957:4;26951:11;26925:38;:::i;:::-;27010:67;27070:6;27062;27056:4;27010:67;:::i;:::-;27104:1;27128:4;27115:17;;27160:2;27152:6;27149:14;27177:1;27172:618;;;;27834:1;27851:6;27848:77;;;27900:9;27895:3;27891:19;27885:26;27876:35;;27848:77;27951:67;28011:6;28004:5;27951:67;:::i;:::-;27945:4;27938:81;27807:222;27142:887;;27172:618;27224:4;27220:9;27212:6;27208:22;27258:37;27290:4;27258:37;:::i;:::-;27317:1;27331:208;27345:7;27342:1;27339:14;27331:208;;;27424:9;27419:3;27415:19;27409:26;27401:6;27394:42;27475:1;27467:6;27463:14;27453:24;;27522:2;27511:9;27507:18;27494:31;;27368:4;27365:1;27361:12;27356:17;;27331:208;;;27567:6;27558:7;27555:19;27552:179;;;27625:9;27620:3;27616:19;27610:26;27668:48;27710:4;27702:6;27698:17;27687:9;27668:48;:::i;:::-;27660:6;27653:64;27575:156;27552:179;27777:1;27773;27765:6;27761:14;27757:22;27751:4;27744:36;27179:611;;;27142:887;;26732:1303;;;26640:1395;;:::o;28041:332::-;28162:4;28200:2;28189:9;28185:18;28177:26;;28213:71;28281:1;28270:9;28266:17;28257:6;28213:71;:::i;:::-;28294:72;28362:2;28351:9;28347:18;28338:6;28294:72;:::i;:::-;28041:332;;;;;:::o;28379:147::-;28480:11;28517:3;28502:18;;28379:147;;;;:::o;28532:386::-;28636:3;28664:38;28696:5;28664:38;:::i;:::-;28718:88;28799:6;28794:3;28718:88;:::i;:::-;28711:95;;28815:65;28873:6;28868:3;28861:4;28854:5;28850:16;28815:65;:::i;:::-;28905:6;28900:3;28896:16;28889:23;;28640:278;28532:386;;;;:::o;28924:271::-;29054:3;29076:93;29165:3;29156:6;29076:93;:::i;:::-;29069:100;;29186:3;29179:10;;28924:271;;;;:::o;29201:180::-;29249:77;29246:1;29239:88;29346:4;29343:1;29336:15;29370:4;29367:1;29360:15"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","greeting()":"ef690cc0","greetingNew()":"d7b518a8","initialize(string)":"f62d1888","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","proxiableUUID()":"52d1902d","reInitialize()":"2de23337","renounceOwnership()":"715018a6","safeMint(address,string)":"d204c45e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greetingNew\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reInitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contract2.sol\":\"OurUpgradeableNFT2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/contract1.sol\":{\"keccak256\":\"0xd2d959b5547daf2347bc25e8bb4b9c89d8089088f43ac881c14f2f04dd56cb2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ad11683a254da6a2218372409d59e769f55181d96f35fac2b0ebc64ad151a0b\",\"dweb:/ipfs/QmeCZDGQwCrMigQ2nmTjBDVocksz2ropR5DyYU5K8CfUtF\"]},\"contracts/contract2.sol\":{\"keccak256\":\"0x597b1fe69f311d4f5956f7778ca3e7a42c71bcfb1bc8d05284ad5eab224c2aa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://185641f93e380a5ac89aaba943ee57ea8852d051ad5c9d9e3863f13c99913adc\",\"dweb:/ipfs/QmcAr6hYKe4bBhzUeiUrYiNPv2csrBja4XMxvKdpdNh71V\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6839a7f9fdb061559b6192c64fc919c83cad99bf0ff4663f249f8409d9f88abf\",\"dweb:/ipfs/QmS6DzcqHkD8TipTTZ94FthQjBhX81sfYtAQQC9Qzifxxm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0x7617c19dc4d1d90728911d5c13230bdad6d22edaa12a49846be4c6c5e03104d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d995622f49be65b9b579609d2fa9958604de0ad97b47440e5e1b40c08f1382\",\"dweb:/ipfs/QmZHDRzg1PopU2qfhK1ffqpPL5KZzvgXbKFtMS4CkTYBtC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6839a7f9fdb061559b6192c64fc919c83cad99bf0ff4663f249f8409d9f88abf\",\"dweb:/ipfs/QmS6DzcqHkD8TipTTZ94FthQjBhX81sfYtAQQC9Qzifxxm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol":{"ERC721URIStorageUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":\"ERC721URIStorageUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfd473ea8f70e13eaa6475c7e348885b8a32925252e3bc237e07c0e3fde0f10f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9d17ae8f18568ab1aedf555ebc79906ba3eaaccfa78efbaed05bd3a9e1b6f2\",\"dweb:/ipfs/QmUQDGwCVE72tExiyA9EuwBeaiu9a8DQin3DZxuX76umg4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0x7617c19dc4d1d90728911d5c13230bdad6d22edaa12a49846be4c6c5e03104d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d995622f49be65b9b579609d2fa9958604de0ad97b47440e5e1b40c08f1382\",\"dweb:/ipfs/QmZHDRzg1PopU2qfhK1ffqpPL5KZzvgXbKFtMS4CkTYBtC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a18466c02059bf45285b2887b6e871b08392d3027f841833f63cc54234edb45b64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 DUP5 PUSH7 0xC02059BF45285B 0x28 DUP8 0xB6 0xE8 PUSH18 0xB08392D3027F841833F63CC54234EDB45B64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"424:982:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a18466c02059bf45285b2887b6e871b08392d3027f841833f63cc54234edb45b64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 DUP5 PUSH7 0xC02059BF45285B 0x28 DUP8 0xB6 0xE8 PUSH18 0xB08392D3027F841833F63CC54234EDB45B64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"424:982:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}"}},"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}"}}}}}